/*
Nudm_SDM

Nudm Subscriber Data Management Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 2.3.0-alpha.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpuData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpuData{}

// UpuData Contains UE parameters update data set (e.g., the updated Routing ID Data or the Default configured NSSAI or the disaster roaming parameters).
type UpuData struct {
	// Contains a secure packet.
	SecPacket *string `json:"secPacket,omitempty"`
	DefaultConfNssai []Snssai `json:"defaultConfNssai,omitempty"`
	// Represents a routing indicator.
	RoutingId *string `json:"routingId,omitempty" validate:"regexp=^[0-9]{1,4}$"`
	Drei *bool `json:"drei,omitempty"`
	Aol *bool `json:"aol,omitempty"`
}

// NewUpuData instantiates a new UpuData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpuData() *UpuData {
	this := UpuData{}
	return &this
}

// NewUpuDataWithDefaults instantiates a new UpuData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpuDataWithDefaults() *UpuData {
	this := UpuData{}
	return &this
}

// GetSecPacket returns the SecPacket field value if set, zero value otherwise.
func (o *UpuData) GetSecPacket() string {
	if o == nil || IsNil(o.SecPacket) {
		var ret string
		return ret
	}
	return *o.SecPacket
}

// GetSecPacketOk returns a tuple with the SecPacket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpuData) GetSecPacketOk() (*string, bool) {
	if o == nil || IsNil(o.SecPacket) {
		return nil, false
	}
	return o.SecPacket, true
}

// HasSecPacket returns a boolean if a field has been set.
func (o *UpuData) HasSecPacket() bool {
	if o != nil && !IsNil(o.SecPacket) {
		return true
	}

	return false
}

// SetSecPacket gets a reference to the given string and assigns it to the SecPacket field.
func (o *UpuData) SetSecPacket(v string) {
	o.SecPacket = &v
}

// GetDefaultConfNssai returns the DefaultConfNssai field value if set, zero value otherwise.
func (o *UpuData) GetDefaultConfNssai() []Snssai {
	if o == nil || IsNil(o.DefaultConfNssai) {
		var ret []Snssai
		return ret
	}
	return o.DefaultConfNssai
}

// GetDefaultConfNssaiOk returns a tuple with the DefaultConfNssai field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpuData) GetDefaultConfNssaiOk() ([]Snssai, bool) {
	if o == nil || IsNil(o.DefaultConfNssai) {
		return nil, false
	}
	return o.DefaultConfNssai, true
}

// HasDefaultConfNssai returns a boolean if a field has been set.
func (o *UpuData) HasDefaultConfNssai() bool {
	if o != nil && !IsNil(o.DefaultConfNssai) {
		return true
	}

	return false
}

// SetDefaultConfNssai gets a reference to the given []Snssai and assigns it to the DefaultConfNssai field.
func (o *UpuData) SetDefaultConfNssai(v []Snssai) {
	o.DefaultConfNssai = v
}

// GetRoutingId returns the RoutingId field value if set, zero value otherwise.
func (o *UpuData) GetRoutingId() string {
	if o == nil || IsNil(o.RoutingId) {
		var ret string
		return ret
	}
	return *o.RoutingId
}

// GetRoutingIdOk returns a tuple with the RoutingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpuData) GetRoutingIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoutingId) {
		return nil, false
	}
	return o.RoutingId, true
}

// HasRoutingId returns a boolean if a field has been set.
func (o *UpuData) HasRoutingId() bool {
	if o != nil && !IsNil(o.RoutingId) {
		return true
	}

	return false
}

// SetRoutingId gets a reference to the given string and assigns it to the RoutingId field.
func (o *UpuData) SetRoutingId(v string) {
	o.RoutingId = &v
}

// GetDrei returns the Drei field value if set, zero value otherwise.
func (o *UpuData) GetDrei() bool {
	if o == nil || IsNil(o.Drei) {
		var ret bool
		return ret
	}
	return *o.Drei
}

// GetDreiOk returns a tuple with the Drei field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpuData) GetDreiOk() (*bool, bool) {
	if o == nil || IsNil(o.Drei) {
		return nil, false
	}
	return o.Drei, true
}

// HasDrei returns a boolean if a field has been set.
func (o *UpuData) HasDrei() bool {
	if o != nil && !IsNil(o.Drei) {
		return true
	}

	return false
}

// SetDrei gets a reference to the given bool and assigns it to the Drei field.
func (o *UpuData) SetDrei(v bool) {
	o.Drei = &v
}

// GetAol returns the Aol field value if set, zero value otherwise.
func (o *UpuData) GetAol() bool {
	if o == nil || IsNil(o.Aol) {
		var ret bool
		return ret
	}
	return *o.Aol
}

// GetAolOk returns a tuple with the Aol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpuData) GetAolOk() (*bool, bool) {
	if o == nil || IsNil(o.Aol) {
		return nil, false
	}
	return o.Aol, true
}

// HasAol returns a boolean if a field has been set.
func (o *UpuData) HasAol() bool {
	if o != nil && !IsNil(o.Aol) {
		return true
	}

	return false
}

// SetAol gets a reference to the given bool and assigns it to the Aol field.
func (o *UpuData) SetAol(v bool) {
	o.Aol = &v
}

func (o UpuData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpuData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SecPacket) {
		toSerialize["secPacket"] = o.SecPacket
	}
	if !IsNil(o.DefaultConfNssai) {
		toSerialize["defaultConfNssai"] = o.DefaultConfNssai
	}
	if !IsNil(o.RoutingId) {
		toSerialize["routingId"] = o.RoutingId
	}
	if !IsNil(o.Drei) {
		toSerialize["drei"] = o.Drei
	}
	if !IsNil(o.Aol) {
		toSerialize["aol"] = o.Aol
	}
	return toSerialize, nil
}

type NullableUpuData struct {
	value *UpuData
	isSet bool
}

func (v NullableUpuData) Get() *UpuData {
	return v.value
}

func (v *NullableUpuData) Set(val *UpuData) {
	v.value = val
	v.isSet = true
}

func (v NullableUpuData) IsSet() bool {
	return v.isSet
}

func (v *NullableUpuData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpuData(val *UpuData) *NullableUpuData {
	return &NullableUpuData{value: val, isSet: true}
}

func (v NullableUpuData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpuData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


