/*
Nudm_SDM

Nudm Subscriber Data Management Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 2.3.0-alpha.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TimeSyncServiceId type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimeSyncServiceId{}

// TimeSyncServiceId Time Synchronization Service ID
type TimeSyncServiceId struct {
	// String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;  it shall contain either a DNN Network Identifier, or a full DNN with both the Network  Identifier and Operator Identifier, as specified in 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are separated by dots  (e.g. \"Label1.Label2.Label3\"). 
	Dnn *string `json:"dnn,omitempty"`
	SNssai *Snssai `json:"sNssai,omitempty"`
	Reference string `json:"reference"`
	TempVals []TemporalValidity `json:"tempVals,omitempty"`
	CoverageArea []Tai `json:"coverageArea,omitempty"`
	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
	UuTimeSyncErrBdgt *int32 `json:"uuTimeSyncErrBdgt,omitempty"`
}

type _TimeSyncServiceId TimeSyncServiceId

// NewTimeSyncServiceId instantiates a new TimeSyncServiceId object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimeSyncServiceId(reference string) *TimeSyncServiceId {
	this := TimeSyncServiceId{}
	this.Reference = reference
	return &this
}

// NewTimeSyncServiceIdWithDefaults instantiates a new TimeSyncServiceId object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimeSyncServiceIdWithDefaults() *TimeSyncServiceId {
	this := TimeSyncServiceId{}
	return &this
}

// GetDnn returns the Dnn field value if set, zero value otherwise.
func (o *TimeSyncServiceId) GetDnn() string {
	if o == nil || IsNil(o.Dnn) {
		var ret string
		return ret
	}
	return *o.Dnn
}

// GetDnnOk returns a tuple with the Dnn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSyncServiceId) GetDnnOk() (*string, bool) {
	if o == nil || IsNil(o.Dnn) {
		return nil, false
	}
	return o.Dnn, true
}

// HasDnn returns a boolean if a field has been set.
func (o *TimeSyncServiceId) HasDnn() bool {
	if o != nil && !IsNil(o.Dnn) {
		return true
	}

	return false
}

// SetDnn gets a reference to the given string and assigns it to the Dnn field.
func (o *TimeSyncServiceId) SetDnn(v string) {
	o.Dnn = &v
}

// GetSNssai returns the SNssai field value if set, zero value otherwise.
func (o *TimeSyncServiceId) GetSNssai() Snssai {
	if o == nil || IsNil(o.SNssai) {
		var ret Snssai
		return ret
	}
	return *o.SNssai
}

// GetSNssaiOk returns a tuple with the SNssai field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSyncServiceId) GetSNssaiOk() (*Snssai, bool) {
	if o == nil || IsNil(o.SNssai) {
		return nil, false
	}
	return o.SNssai, true
}

// HasSNssai returns a boolean if a field has been set.
func (o *TimeSyncServiceId) HasSNssai() bool {
	if o != nil && !IsNil(o.SNssai) {
		return true
	}

	return false
}

// SetSNssai gets a reference to the given Snssai and assigns it to the SNssai field.
func (o *TimeSyncServiceId) SetSNssai(v Snssai) {
	o.SNssai = &v
}

// GetReference returns the Reference field value
func (o *TimeSyncServiceId) GetReference() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value
// and a boolean to check if the value has been set.
func (o *TimeSyncServiceId) GetReferenceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reference, true
}

// SetReference sets field value
func (o *TimeSyncServiceId) SetReference(v string) {
	o.Reference = v
}

// GetTempVals returns the TempVals field value if set, zero value otherwise.
func (o *TimeSyncServiceId) GetTempVals() []TemporalValidity {
	if o == nil || IsNil(o.TempVals) {
		var ret []TemporalValidity
		return ret
	}
	return o.TempVals
}

// GetTempValsOk returns a tuple with the TempVals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSyncServiceId) GetTempValsOk() ([]TemporalValidity, bool) {
	if o == nil || IsNil(o.TempVals) {
		return nil, false
	}
	return o.TempVals, true
}

// HasTempVals returns a boolean if a field has been set.
func (o *TimeSyncServiceId) HasTempVals() bool {
	if o != nil && !IsNil(o.TempVals) {
		return true
	}

	return false
}

// SetTempVals gets a reference to the given []TemporalValidity and assigns it to the TempVals field.
func (o *TimeSyncServiceId) SetTempVals(v []TemporalValidity) {
	o.TempVals = v
}

// GetCoverageArea returns the CoverageArea field value if set, zero value otherwise.
func (o *TimeSyncServiceId) GetCoverageArea() []Tai {
	if o == nil || IsNil(o.CoverageArea) {
		var ret []Tai
		return ret
	}
	return o.CoverageArea
}

// GetCoverageAreaOk returns a tuple with the CoverageArea field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSyncServiceId) GetCoverageAreaOk() ([]Tai, bool) {
	if o == nil || IsNil(o.CoverageArea) {
		return nil, false
	}
	return o.CoverageArea, true
}

// HasCoverageArea returns a boolean if a field has been set.
func (o *TimeSyncServiceId) HasCoverageArea() bool {
	if o != nil && !IsNil(o.CoverageArea) {
		return true
	}

	return false
}

// SetCoverageArea gets a reference to the given []Tai and assigns it to the CoverageArea field.
func (o *TimeSyncServiceId) SetCoverageArea(v []Tai) {
	o.CoverageArea = v
}

// GetUuTimeSyncErrBdgt returns the UuTimeSyncErrBdgt field value if set, zero value otherwise.
func (o *TimeSyncServiceId) GetUuTimeSyncErrBdgt() int32 {
	if o == nil || IsNil(o.UuTimeSyncErrBdgt) {
		var ret int32
		return ret
	}
	return *o.UuTimeSyncErrBdgt
}

// GetUuTimeSyncErrBdgtOk returns a tuple with the UuTimeSyncErrBdgt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSyncServiceId) GetUuTimeSyncErrBdgtOk() (*int32, bool) {
	if o == nil || IsNil(o.UuTimeSyncErrBdgt) {
		return nil, false
	}
	return o.UuTimeSyncErrBdgt, true
}

// HasUuTimeSyncErrBdgt returns a boolean if a field has been set.
func (o *TimeSyncServiceId) HasUuTimeSyncErrBdgt() bool {
	if o != nil && !IsNil(o.UuTimeSyncErrBdgt) {
		return true
	}

	return false
}

// SetUuTimeSyncErrBdgt gets a reference to the given int32 and assigns it to the UuTimeSyncErrBdgt field.
func (o *TimeSyncServiceId) SetUuTimeSyncErrBdgt(v int32) {
	o.UuTimeSyncErrBdgt = &v
}

func (o TimeSyncServiceId) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimeSyncServiceId) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Dnn) {
		toSerialize["dnn"] = o.Dnn
	}
	if !IsNil(o.SNssai) {
		toSerialize["sNssai"] = o.SNssai
	}
	toSerialize["reference"] = o.Reference
	if !IsNil(o.TempVals) {
		toSerialize["tempVals"] = o.TempVals
	}
	if !IsNil(o.CoverageArea) {
		toSerialize["coverageArea"] = o.CoverageArea
	}
	if !IsNil(o.UuTimeSyncErrBdgt) {
		toSerialize["uuTimeSyncErrBdgt"] = o.UuTimeSyncErrBdgt
	}
	return toSerialize, nil
}

func (o *TimeSyncServiceId) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"reference",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTimeSyncServiceId := _TimeSyncServiceId{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTimeSyncServiceId)

	if err != nil {
		return err
	}

	*o = TimeSyncServiceId(varTimeSyncServiceId)

	return err
}

type NullableTimeSyncServiceId struct {
	value *TimeSyncServiceId
	isSet bool
}

func (v NullableTimeSyncServiceId) Get() *TimeSyncServiceId {
	return v.value
}

func (v *NullableTimeSyncServiceId) Set(val *TimeSyncServiceId) {
	v.value = val
	v.isSet = true
}

func (v NullableTimeSyncServiceId) IsSet() bool {
	return v.isSet
}

func (v *NullableTimeSyncServiceId) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimeSyncServiceId(val *TimeSyncServiceId) *NullableTimeSyncServiceId {
	return &NullableTimeSyncServiceId{value: val, isSet: true}
}

func (v NullableTimeSyncServiceId) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimeSyncServiceId) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


