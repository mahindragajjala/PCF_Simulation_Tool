/*
Nudm_SDM

Nudm Subscriber Data Management Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 2.3.0-alpha.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the NrA2xAuth type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NrA2xAuth{}

// NrA2xAuth Contains NR A2X services authorized information.
type NrA2xAuth struct {
	UavUeAuth *UeAuth `json:"uavUeAuth,omitempty"`
}

// NewNrA2xAuth instantiates a new NrA2xAuth object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNrA2xAuth() *NrA2xAuth {
	this := NrA2xAuth{}
	return &this
}

// NewNrA2xAuthWithDefaults instantiates a new NrA2xAuth object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNrA2xAuthWithDefaults() *NrA2xAuth {
	this := NrA2xAuth{}
	return &this
}

// GetUavUeAuth returns the UavUeAuth field value if set, zero value otherwise.
func (o *NrA2xAuth) GetUavUeAuth() UeAuth {
	if o == nil || IsNil(o.UavUeAuth) {
		var ret UeAuth
		return ret
	}
	return *o.UavUeAuth
}

// GetUavUeAuthOk returns a tuple with the UavUeAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrA2xAuth) GetUavUeAuthOk() (*UeAuth, bool) {
	if o == nil || IsNil(o.UavUeAuth) {
		return nil, false
	}
	return o.UavUeAuth, true
}

// HasUavUeAuth returns a boolean if a field has been set.
func (o *NrA2xAuth) HasUavUeAuth() bool {
	if o != nil && !IsNil(o.UavUeAuth) {
		return true
	}

	return false
}

// SetUavUeAuth gets a reference to the given UeAuth and assigns it to the UavUeAuth field.
func (o *NrA2xAuth) SetUavUeAuth(v UeAuth) {
	o.UavUeAuth = &v
}

func (o NrA2xAuth) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NrA2xAuth) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UavUeAuth) {
		toSerialize["uavUeAuth"] = o.UavUeAuth
	}
	return toSerialize, nil
}

type NullableNrA2xAuth struct {
	value *NrA2xAuth
	isSet bool
}

func (v NullableNrA2xAuth) Get() *NrA2xAuth {
	return v.value
}

func (v *NullableNrA2xAuth) Set(val *NrA2xAuth) {
	v.value = val
	v.isSet = true
}

func (v NullableNrA2xAuth) IsSet() bool {
	return v.isSet
}

func (v *NullableNrA2xAuth) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNrA2xAuth(val *NrA2xAuth) *NullableNrA2xAuth {
	return &NullableNrA2xAuth{value: val, isSet: true}
}

func (v NullableNrA2xAuth) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNrA2xAuth) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


