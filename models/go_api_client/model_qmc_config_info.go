/*
Nudm_SDM

Nudm Subscriber Data Management Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 2.3.0-alpha.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the QmcConfigInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QmcConfigInfo{}

// QmcConfigInfo It contains the configuration information for signaling-based activation of the  Quality of Experience (QoE) Measurements Collection (QMC) functionality.  
type QmcConfigInfo struct {
	// String containing MCC (3 digits), MNC (2 or 3 digits)  and QMC ID (3 octets, encoded as 6 hexadecimal digits). 
	QoeReference string `json:"qoeReference" validate:"regexp=^[0-9]{3}-[0-9]{2,3}-[A-Fa-f0-9]{6}$"`
	ServiceType *QoeServiceType `json:"serviceType,omitempty"`
	SliceScope []Snssai `json:"sliceScope,omitempty"`
	AreaScope *QmcAreaScope `json:"areaScope,omitempty"`
	QoeCollectionEntityAddress NullableIpAddr `json:"qoeCollectionEntityAddress,omitempty"`
	QoeTarget *QoeTarget `json:"qoeTarget,omitempty"`
	// String containing: - Trace Reference: MCC (3 digits), MNC (2 or 3 digits),    Trace ID (3 octets, encoded as 6 hexadecimal digits) - Trace Recording Session Reference (2 octets, encoded as 4 hexadecimal digits) 
	MdtAlignmentInfo interface{} `json:"mdtAlignmentInfo,omitempty" validate:"regexp=^[0-9]{3}-[0-9]{2,3}-[A-Fa-f0-9]{6}-[A-Fa-f0-9]{4}$"`
	AvailableRanVisibleQoeMetrics []AvailableRanVisibleQoeMetric `json:"availableRanVisibleQoeMetrics,omitempty"`
	// string with format 'bytes' as defined in OpenAPI
	ContainerForAppLayerMeasConfig *string `json:"containerForAppLayerMeasConfig,omitempty"`
	MbsCommunicationServiceType *MbsServiceType `json:"mbsCommunicationServiceType,omitempty"`
}

type _QmcConfigInfo QmcConfigInfo

// NewQmcConfigInfo instantiates a new QmcConfigInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQmcConfigInfo(qoeReference string) *QmcConfigInfo {
	this := QmcConfigInfo{}
	this.QoeReference = qoeReference
	return &this
}

// NewQmcConfigInfoWithDefaults instantiates a new QmcConfigInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQmcConfigInfoWithDefaults() *QmcConfigInfo {
	this := QmcConfigInfo{}
	return &this
}

// GetQoeReference returns the QoeReference field value
func (o *QmcConfigInfo) GetQoeReference() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QoeReference
}

// GetQoeReferenceOk returns a tuple with the QoeReference field value
// and a boolean to check if the value has been set.
func (o *QmcConfigInfo) GetQoeReferenceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QoeReference, true
}

// SetQoeReference sets field value
func (o *QmcConfigInfo) SetQoeReference(v string) {
	o.QoeReference = v
}

// GetServiceType returns the ServiceType field value if set, zero value otherwise.
func (o *QmcConfigInfo) GetServiceType() QoeServiceType {
	if o == nil || IsNil(o.ServiceType) {
		var ret QoeServiceType
		return ret
	}
	return *o.ServiceType
}

// GetServiceTypeOk returns a tuple with the ServiceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QmcConfigInfo) GetServiceTypeOk() (*QoeServiceType, bool) {
	if o == nil || IsNil(o.ServiceType) {
		return nil, false
	}
	return o.ServiceType, true
}

// HasServiceType returns a boolean if a field has been set.
func (o *QmcConfigInfo) HasServiceType() bool {
	if o != nil && !IsNil(o.ServiceType) {
		return true
	}

	return false
}

// SetServiceType gets a reference to the given QoeServiceType and assigns it to the ServiceType field.
func (o *QmcConfigInfo) SetServiceType(v QoeServiceType) {
	o.ServiceType = &v
}

// GetSliceScope returns the SliceScope field value if set, zero value otherwise.
func (o *QmcConfigInfo) GetSliceScope() []Snssai {
	if o == nil || IsNil(o.SliceScope) {
		var ret []Snssai
		return ret
	}
	return o.SliceScope
}

// GetSliceScopeOk returns a tuple with the SliceScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QmcConfigInfo) GetSliceScopeOk() ([]Snssai, bool) {
	if o == nil || IsNil(o.SliceScope) {
		return nil, false
	}
	return o.SliceScope, true
}

// HasSliceScope returns a boolean if a field has been set.
func (o *QmcConfigInfo) HasSliceScope() bool {
	if o != nil && !IsNil(o.SliceScope) {
		return true
	}

	return false
}

// SetSliceScope gets a reference to the given []Snssai and assigns it to the SliceScope field.
func (o *QmcConfigInfo) SetSliceScope(v []Snssai) {
	o.SliceScope = v
}

// GetAreaScope returns the AreaScope field value if set, zero value otherwise.
func (o *QmcConfigInfo) GetAreaScope() QmcAreaScope {
	if o == nil || IsNil(o.AreaScope) {
		var ret QmcAreaScope
		return ret
	}
	return *o.AreaScope
}

// GetAreaScopeOk returns a tuple with the AreaScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QmcConfigInfo) GetAreaScopeOk() (*QmcAreaScope, bool) {
	if o == nil || IsNil(o.AreaScope) {
		return nil, false
	}
	return o.AreaScope, true
}

// HasAreaScope returns a boolean if a field has been set.
func (o *QmcConfigInfo) HasAreaScope() bool {
	if o != nil && !IsNil(o.AreaScope) {
		return true
	}

	return false
}

// SetAreaScope gets a reference to the given QmcAreaScope and assigns it to the AreaScope field.
func (o *QmcConfigInfo) SetAreaScope(v QmcAreaScope) {
	o.AreaScope = &v
}

// GetQoeCollectionEntityAddress returns the QoeCollectionEntityAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QmcConfigInfo) GetQoeCollectionEntityAddress() IpAddr {
	if o == nil || IsNil(o.QoeCollectionEntityAddress.Get()) {
		var ret IpAddr
		return ret
	}
	return *o.QoeCollectionEntityAddress.Get()
}

// GetQoeCollectionEntityAddressOk returns a tuple with the QoeCollectionEntityAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QmcConfigInfo) GetQoeCollectionEntityAddressOk() (*IpAddr, bool) {
	if o == nil {
		return nil, false
	}
	return o.QoeCollectionEntityAddress.Get(), o.QoeCollectionEntityAddress.IsSet()
}

// HasQoeCollectionEntityAddress returns a boolean if a field has been set.
func (o *QmcConfigInfo) HasQoeCollectionEntityAddress() bool {
	if o != nil && o.QoeCollectionEntityAddress.IsSet() {
		return true
	}

	return false
}

// SetQoeCollectionEntityAddress gets a reference to the given NullableIpAddr and assigns it to the QoeCollectionEntityAddress field.
func (o *QmcConfigInfo) SetQoeCollectionEntityAddress(v IpAddr) {
	o.QoeCollectionEntityAddress.Set(&v)
}
// SetQoeCollectionEntityAddressNil sets the value for QoeCollectionEntityAddress to be an explicit nil
func (o *QmcConfigInfo) SetQoeCollectionEntityAddressNil() {
	o.QoeCollectionEntityAddress.Set(nil)
}

// UnsetQoeCollectionEntityAddress ensures that no value is present for QoeCollectionEntityAddress, not even an explicit nil
func (o *QmcConfigInfo) UnsetQoeCollectionEntityAddress() {
	o.QoeCollectionEntityAddress.Unset()
}

// GetQoeTarget returns the QoeTarget field value if set, zero value otherwise.
func (o *QmcConfigInfo) GetQoeTarget() QoeTarget {
	if o == nil || IsNil(o.QoeTarget) {
		var ret QoeTarget
		return ret
	}
	return *o.QoeTarget
}

// GetQoeTargetOk returns a tuple with the QoeTarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QmcConfigInfo) GetQoeTargetOk() (*QoeTarget, bool) {
	if o == nil || IsNil(o.QoeTarget) {
		return nil, false
	}
	return o.QoeTarget, true
}

// HasQoeTarget returns a boolean if a field has been set.
func (o *QmcConfigInfo) HasQoeTarget() bool {
	if o != nil && !IsNil(o.QoeTarget) {
		return true
	}

	return false
}

// SetQoeTarget gets a reference to the given QoeTarget and assigns it to the QoeTarget field.
func (o *QmcConfigInfo) SetQoeTarget(v QoeTarget) {
	o.QoeTarget = &v
}

// GetMdtAlignmentInfo returns the MdtAlignmentInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QmcConfigInfo) GetMdtAlignmentInfo() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.MdtAlignmentInfo
}

// GetMdtAlignmentInfoOk returns a tuple with the MdtAlignmentInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QmcConfigInfo) GetMdtAlignmentInfoOk() (*interface{}, bool) {
	if o == nil || IsNil(o.MdtAlignmentInfo) {
		return nil, false
	}
	return &o.MdtAlignmentInfo, true
}

// HasMdtAlignmentInfo returns a boolean if a field has been set.
func (o *QmcConfigInfo) HasMdtAlignmentInfo() bool {
	if o != nil && !IsNil(o.MdtAlignmentInfo) {
		return true
	}

	return false
}

// SetMdtAlignmentInfo gets a reference to the given interface{} and assigns it to the MdtAlignmentInfo field.
func (o *QmcConfigInfo) SetMdtAlignmentInfo(v interface{}) {
	o.MdtAlignmentInfo = v
}

// GetAvailableRanVisibleQoeMetrics returns the AvailableRanVisibleQoeMetrics field value if set, zero value otherwise.
func (o *QmcConfigInfo) GetAvailableRanVisibleQoeMetrics() []AvailableRanVisibleQoeMetric {
	if o == nil || IsNil(o.AvailableRanVisibleQoeMetrics) {
		var ret []AvailableRanVisibleQoeMetric
		return ret
	}
	return o.AvailableRanVisibleQoeMetrics
}

// GetAvailableRanVisibleQoeMetricsOk returns a tuple with the AvailableRanVisibleQoeMetrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QmcConfigInfo) GetAvailableRanVisibleQoeMetricsOk() ([]AvailableRanVisibleQoeMetric, bool) {
	if o == nil || IsNil(o.AvailableRanVisibleQoeMetrics) {
		return nil, false
	}
	return o.AvailableRanVisibleQoeMetrics, true
}

// HasAvailableRanVisibleQoeMetrics returns a boolean if a field has been set.
func (o *QmcConfigInfo) HasAvailableRanVisibleQoeMetrics() bool {
	if o != nil && !IsNil(o.AvailableRanVisibleQoeMetrics) {
		return true
	}

	return false
}

// SetAvailableRanVisibleQoeMetrics gets a reference to the given []AvailableRanVisibleQoeMetric and assigns it to the AvailableRanVisibleQoeMetrics field.
func (o *QmcConfigInfo) SetAvailableRanVisibleQoeMetrics(v []AvailableRanVisibleQoeMetric) {
	o.AvailableRanVisibleQoeMetrics = v
}

// GetContainerForAppLayerMeasConfig returns the ContainerForAppLayerMeasConfig field value if set, zero value otherwise.
func (o *QmcConfigInfo) GetContainerForAppLayerMeasConfig() string {
	if o == nil || IsNil(o.ContainerForAppLayerMeasConfig) {
		var ret string
		return ret
	}
	return *o.ContainerForAppLayerMeasConfig
}

// GetContainerForAppLayerMeasConfigOk returns a tuple with the ContainerForAppLayerMeasConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QmcConfigInfo) GetContainerForAppLayerMeasConfigOk() (*string, bool) {
	if o == nil || IsNil(o.ContainerForAppLayerMeasConfig) {
		return nil, false
	}
	return o.ContainerForAppLayerMeasConfig, true
}

// HasContainerForAppLayerMeasConfig returns a boolean if a field has been set.
func (o *QmcConfigInfo) HasContainerForAppLayerMeasConfig() bool {
	if o != nil && !IsNil(o.ContainerForAppLayerMeasConfig) {
		return true
	}

	return false
}

// SetContainerForAppLayerMeasConfig gets a reference to the given string and assigns it to the ContainerForAppLayerMeasConfig field.
func (o *QmcConfigInfo) SetContainerForAppLayerMeasConfig(v string) {
	o.ContainerForAppLayerMeasConfig = &v
}

// GetMbsCommunicationServiceType returns the MbsCommunicationServiceType field value if set, zero value otherwise.
func (o *QmcConfigInfo) GetMbsCommunicationServiceType() MbsServiceType {
	if o == nil || IsNil(o.MbsCommunicationServiceType) {
		var ret MbsServiceType
		return ret
	}
	return *o.MbsCommunicationServiceType
}

// GetMbsCommunicationServiceTypeOk returns a tuple with the MbsCommunicationServiceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QmcConfigInfo) GetMbsCommunicationServiceTypeOk() (*MbsServiceType, bool) {
	if o == nil || IsNil(o.MbsCommunicationServiceType) {
		return nil, false
	}
	return o.MbsCommunicationServiceType, true
}

// HasMbsCommunicationServiceType returns a boolean if a field has been set.
func (o *QmcConfigInfo) HasMbsCommunicationServiceType() bool {
	if o != nil && !IsNil(o.MbsCommunicationServiceType) {
		return true
	}

	return false
}

// SetMbsCommunicationServiceType gets a reference to the given MbsServiceType and assigns it to the MbsCommunicationServiceType field.
func (o *QmcConfigInfo) SetMbsCommunicationServiceType(v MbsServiceType) {
	o.MbsCommunicationServiceType = &v
}

func (o QmcConfigInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QmcConfigInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["qoeReference"] = o.QoeReference
	if !IsNil(o.ServiceType) {
		toSerialize["serviceType"] = o.ServiceType
	}
	if !IsNil(o.SliceScope) {
		toSerialize["sliceScope"] = o.SliceScope
	}
	if !IsNil(o.AreaScope) {
		toSerialize["areaScope"] = o.AreaScope
	}
	if o.QoeCollectionEntityAddress.IsSet() {
		toSerialize["qoeCollectionEntityAddress"] = o.QoeCollectionEntityAddress.Get()
	}
	if !IsNil(o.QoeTarget) {
		toSerialize["qoeTarget"] = o.QoeTarget
	}
	if o.MdtAlignmentInfo != nil {
		toSerialize["mdtAlignmentInfo"] = o.MdtAlignmentInfo
	}
	if !IsNil(o.AvailableRanVisibleQoeMetrics) {
		toSerialize["availableRanVisibleQoeMetrics"] = o.AvailableRanVisibleQoeMetrics
	}
	if !IsNil(o.ContainerForAppLayerMeasConfig) {
		toSerialize["containerForAppLayerMeasConfig"] = o.ContainerForAppLayerMeasConfig
	}
	if !IsNil(o.MbsCommunicationServiceType) {
		toSerialize["mbsCommunicationServiceType"] = o.MbsCommunicationServiceType
	}
	return toSerialize, nil
}

func (o *QmcConfigInfo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"qoeReference",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQmcConfigInfo := _QmcConfigInfo{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQmcConfigInfo)

	if err != nil {
		return err
	}

	*o = QmcConfigInfo(varQmcConfigInfo)

	return err
}

type NullableQmcConfigInfo struct {
	value *QmcConfigInfo
	isSet bool
}

func (v NullableQmcConfigInfo) Get() *QmcConfigInfo {
	return v.value
}

func (v *NullableQmcConfigInfo) Set(val *QmcConfigInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableQmcConfigInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableQmcConfigInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQmcConfigInfo(val *QmcConfigInfo) *NullableQmcConfigInfo {
	return &NullableQmcConfigInfo{value: val, isSet: true}
}

func (v NullableQmcConfigInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQmcConfigInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


