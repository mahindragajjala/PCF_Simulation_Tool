/*
Nudm_SDM

Nudm Subscriber Data Management Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 2.3.0-alpha.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SessionManagementSubscriptionData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SessionManagementSubscriptionData{}

// SessionManagementSubscriptionData struct for SessionManagementSubscriptionData
type SessionManagementSubscriptionData struct {
	SingleNssai Snssai `json:"singleNssai"`
	// A map (list of key-value pairs where Dnn, or optionally the Wildcard DNN, serves as key) of DnnConfigurations
	DnnConfigurations *map[string]DnnConfiguration `json:"dnnConfigurations,omitempty"`
	InternalGroupIds []string `json:"internalGroupIds,omitempty"`
	// A map(list of key-value pairs) where GroupId serves as key of SharedDataId
	SharedVnGroupDataIds *map[string]string `json:"sharedVnGroupDataIds,omitempty"`
	SharedDnnConfigurationsId *string `json:"sharedDnnConfigurationsId,omitempty" validate:"regexp=^[0-9]{5,6}-.+$"`
	OdbPacketServices NullableOdbPacketServices `json:"odbPacketServices,omitempty"`
	TraceData NullableTraceData `json:"traceData,omitempty"`
	SharedTraceDataId *string `json:"sharedTraceDataId,omitempty" validate:"regexp=^[0-9]{5,6}-.+$"`
	// A map(list of key-value pairs) where Dnn serves as key of ExpectedUeBehaviourData
	ExpectedUeBehavioursList *map[string]ExpectedUeBehaviourData `json:"expectedUeBehavioursList,omitempty"`
	// A map(list of key-value pairs) where DNN serves as key
	ExpectedUeBehaviourData *map[string]map[string]ExpectedUeBehaviourData `json:"expectedUeBehaviourData,omitempty"`
	// A map(list of key-value pairs) where DNN serves as key
	AppSpecificExpectedUeBehaviourData *map[string]map[string]AppSpecificExpectedUeBehaviourData `json:"appSpecificExpectedUeBehaviourData,omitempty"`
	// A map(list of key-value pairs) where Dnn serves as key of SuggestedPacketNumDl
	SuggestedPacketNumDlList *map[string]SuggestedPacketNumDl `json:"suggestedPacketNumDlList,omitempty"`
	Var3gppChargingCharacteristics *string `json:"3gppChargingCharacteristics,omitempty"`
	NsacMode *NsacAdmissionMode `json:"nsacMode,omitempty"`
	// indicating a time in seconds.
	SessInactTimer *int32 `json:"sessInactTimer,omitempty"`
	OnDemand *bool `json:"onDemand,omitempty"`
	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported. 
	SupportedFeatures *string `json:"supportedFeatures,omitempty" validate:"regexp=^[A-Fa-f0-9]*$"`
	AdditionalSharedDnnConfigurationsIds []string `json:"additionalSharedDnnConfigurationsIds,omitempty"`
}

type _SessionManagementSubscriptionData SessionManagementSubscriptionData

// NewSessionManagementSubscriptionData instantiates a new SessionManagementSubscriptionData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSessionManagementSubscriptionData(singleNssai Snssai) *SessionManagementSubscriptionData {
	this := SessionManagementSubscriptionData{}
	this.SingleNssai = singleNssai
	var onDemand bool = false
	this.OnDemand = &onDemand
	return &this
}

// NewSessionManagementSubscriptionDataWithDefaults instantiates a new SessionManagementSubscriptionData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSessionManagementSubscriptionDataWithDefaults() *SessionManagementSubscriptionData {
	this := SessionManagementSubscriptionData{}
	var onDemand bool = false
	this.OnDemand = &onDemand
	return &this
}

// GetSingleNssai returns the SingleNssai field value
func (o *SessionManagementSubscriptionData) GetSingleNssai() Snssai {
	if o == nil {
		var ret Snssai
		return ret
	}

	return o.SingleNssai
}

// GetSingleNssaiOk returns a tuple with the SingleNssai field value
// and a boolean to check if the value has been set.
func (o *SessionManagementSubscriptionData) GetSingleNssaiOk() (*Snssai, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SingleNssai, true
}

// SetSingleNssai sets field value
func (o *SessionManagementSubscriptionData) SetSingleNssai(v Snssai) {
	o.SingleNssai = v
}

// GetDnnConfigurations returns the DnnConfigurations field value if set, zero value otherwise.
func (o *SessionManagementSubscriptionData) GetDnnConfigurations() map[string]DnnConfiguration {
	if o == nil || IsNil(o.DnnConfigurations) {
		var ret map[string]DnnConfiguration
		return ret
	}
	return *o.DnnConfigurations
}

// GetDnnConfigurationsOk returns a tuple with the DnnConfigurations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionManagementSubscriptionData) GetDnnConfigurationsOk() (*map[string]DnnConfiguration, bool) {
	if o == nil || IsNil(o.DnnConfigurations) {
		return nil, false
	}
	return o.DnnConfigurations, true
}

// HasDnnConfigurations returns a boolean if a field has been set.
func (o *SessionManagementSubscriptionData) HasDnnConfigurations() bool {
	if o != nil && !IsNil(o.DnnConfigurations) {
		return true
	}

	return false
}

// SetDnnConfigurations gets a reference to the given map[string]DnnConfiguration and assigns it to the DnnConfigurations field.
func (o *SessionManagementSubscriptionData) SetDnnConfigurations(v map[string]DnnConfiguration) {
	o.DnnConfigurations = &v
}

// GetInternalGroupIds returns the InternalGroupIds field value if set, zero value otherwise.
func (o *SessionManagementSubscriptionData) GetInternalGroupIds() []string {
	if o == nil || IsNil(o.InternalGroupIds) {
		var ret []string
		return ret
	}
	return o.InternalGroupIds
}

// GetInternalGroupIdsOk returns a tuple with the InternalGroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionManagementSubscriptionData) GetInternalGroupIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.InternalGroupIds) {
		return nil, false
	}
	return o.InternalGroupIds, true
}

// HasInternalGroupIds returns a boolean if a field has been set.
func (o *SessionManagementSubscriptionData) HasInternalGroupIds() bool {
	if o != nil && !IsNil(o.InternalGroupIds) {
		return true
	}

	return false
}

// SetInternalGroupIds gets a reference to the given []string and assigns it to the InternalGroupIds field.
func (o *SessionManagementSubscriptionData) SetInternalGroupIds(v []string) {
	o.InternalGroupIds = v
}

// GetSharedVnGroupDataIds returns the SharedVnGroupDataIds field value if set, zero value otherwise.
func (o *SessionManagementSubscriptionData) GetSharedVnGroupDataIds() map[string]string {
	if o == nil || IsNil(o.SharedVnGroupDataIds) {
		var ret map[string]string
		return ret
	}
	return *o.SharedVnGroupDataIds
}

// GetSharedVnGroupDataIdsOk returns a tuple with the SharedVnGroupDataIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionManagementSubscriptionData) GetSharedVnGroupDataIdsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.SharedVnGroupDataIds) {
		return nil, false
	}
	return o.SharedVnGroupDataIds, true
}

// HasSharedVnGroupDataIds returns a boolean if a field has been set.
func (o *SessionManagementSubscriptionData) HasSharedVnGroupDataIds() bool {
	if o != nil && !IsNil(o.SharedVnGroupDataIds) {
		return true
	}

	return false
}

// SetSharedVnGroupDataIds gets a reference to the given map[string]string and assigns it to the SharedVnGroupDataIds field.
func (o *SessionManagementSubscriptionData) SetSharedVnGroupDataIds(v map[string]string) {
	o.SharedVnGroupDataIds = &v
}

// GetSharedDnnConfigurationsId returns the SharedDnnConfigurationsId field value if set, zero value otherwise.
func (o *SessionManagementSubscriptionData) GetSharedDnnConfigurationsId() string {
	if o == nil || IsNil(o.SharedDnnConfigurationsId) {
		var ret string
		return ret
	}
	return *o.SharedDnnConfigurationsId
}

// GetSharedDnnConfigurationsIdOk returns a tuple with the SharedDnnConfigurationsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionManagementSubscriptionData) GetSharedDnnConfigurationsIdOk() (*string, bool) {
	if o == nil || IsNil(o.SharedDnnConfigurationsId) {
		return nil, false
	}
	return o.SharedDnnConfigurationsId, true
}

// HasSharedDnnConfigurationsId returns a boolean if a field has been set.
func (o *SessionManagementSubscriptionData) HasSharedDnnConfigurationsId() bool {
	if o != nil && !IsNil(o.SharedDnnConfigurationsId) {
		return true
	}

	return false
}

// SetSharedDnnConfigurationsId gets a reference to the given string and assigns it to the SharedDnnConfigurationsId field.
func (o *SessionManagementSubscriptionData) SetSharedDnnConfigurationsId(v string) {
	o.SharedDnnConfigurationsId = &v
}

// GetOdbPacketServices returns the OdbPacketServices field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionManagementSubscriptionData) GetOdbPacketServices() OdbPacketServices {
	if o == nil || IsNil(o.OdbPacketServices.Get()) {
		var ret OdbPacketServices
		return ret
	}
	return *o.OdbPacketServices.Get()
}

// GetOdbPacketServicesOk returns a tuple with the OdbPacketServices field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionManagementSubscriptionData) GetOdbPacketServicesOk() (*OdbPacketServices, bool) {
	if o == nil {
		return nil, false
	}
	return o.OdbPacketServices.Get(), o.OdbPacketServices.IsSet()
}

// HasOdbPacketServices returns a boolean if a field has been set.
func (o *SessionManagementSubscriptionData) HasOdbPacketServices() bool {
	if o != nil && o.OdbPacketServices.IsSet() {
		return true
	}

	return false
}

// SetOdbPacketServices gets a reference to the given NullableOdbPacketServices and assigns it to the OdbPacketServices field.
func (o *SessionManagementSubscriptionData) SetOdbPacketServices(v OdbPacketServices) {
	o.OdbPacketServices.Set(&v)
}
// SetOdbPacketServicesNil sets the value for OdbPacketServices to be an explicit nil
func (o *SessionManagementSubscriptionData) SetOdbPacketServicesNil() {
	o.OdbPacketServices.Set(nil)
}

// UnsetOdbPacketServices ensures that no value is present for OdbPacketServices, not even an explicit nil
func (o *SessionManagementSubscriptionData) UnsetOdbPacketServices() {
	o.OdbPacketServices.Unset()
}

// GetTraceData returns the TraceData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionManagementSubscriptionData) GetTraceData() TraceData {
	if o == nil || IsNil(o.TraceData.Get()) {
		var ret TraceData
		return ret
	}
	return *o.TraceData.Get()
}

// GetTraceDataOk returns a tuple with the TraceData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionManagementSubscriptionData) GetTraceDataOk() (*TraceData, bool) {
	if o == nil {
		return nil, false
	}
	return o.TraceData.Get(), o.TraceData.IsSet()
}

// HasTraceData returns a boolean if a field has been set.
func (o *SessionManagementSubscriptionData) HasTraceData() bool {
	if o != nil && o.TraceData.IsSet() {
		return true
	}

	return false
}

// SetTraceData gets a reference to the given NullableTraceData and assigns it to the TraceData field.
func (o *SessionManagementSubscriptionData) SetTraceData(v TraceData) {
	o.TraceData.Set(&v)
}
// SetTraceDataNil sets the value for TraceData to be an explicit nil
func (o *SessionManagementSubscriptionData) SetTraceDataNil() {
	o.TraceData.Set(nil)
}

// UnsetTraceData ensures that no value is present for TraceData, not even an explicit nil
func (o *SessionManagementSubscriptionData) UnsetTraceData() {
	o.TraceData.Unset()
}

// GetSharedTraceDataId returns the SharedTraceDataId field value if set, zero value otherwise.
func (o *SessionManagementSubscriptionData) GetSharedTraceDataId() string {
	if o == nil || IsNil(o.SharedTraceDataId) {
		var ret string
		return ret
	}
	return *o.SharedTraceDataId
}

// GetSharedTraceDataIdOk returns a tuple with the SharedTraceDataId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionManagementSubscriptionData) GetSharedTraceDataIdOk() (*string, bool) {
	if o == nil || IsNil(o.SharedTraceDataId) {
		return nil, false
	}
	return o.SharedTraceDataId, true
}

// HasSharedTraceDataId returns a boolean if a field has been set.
func (o *SessionManagementSubscriptionData) HasSharedTraceDataId() bool {
	if o != nil && !IsNil(o.SharedTraceDataId) {
		return true
	}

	return false
}

// SetSharedTraceDataId gets a reference to the given string and assigns it to the SharedTraceDataId field.
func (o *SessionManagementSubscriptionData) SetSharedTraceDataId(v string) {
	o.SharedTraceDataId = &v
}

// GetExpectedUeBehavioursList returns the ExpectedUeBehavioursList field value if set, zero value otherwise.
func (o *SessionManagementSubscriptionData) GetExpectedUeBehavioursList() map[string]ExpectedUeBehaviourData {
	if o == nil || IsNil(o.ExpectedUeBehavioursList) {
		var ret map[string]ExpectedUeBehaviourData
		return ret
	}
	return *o.ExpectedUeBehavioursList
}

// GetExpectedUeBehavioursListOk returns a tuple with the ExpectedUeBehavioursList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionManagementSubscriptionData) GetExpectedUeBehavioursListOk() (*map[string]ExpectedUeBehaviourData, bool) {
	if o == nil || IsNil(o.ExpectedUeBehavioursList) {
		return nil, false
	}
	return o.ExpectedUeBehavioursList, true
}

// HasExpectedUeBehavioursList returns a boolean if a field has been set.
func (o *SessionManagementSubscriptionData) HasExpectedUeBehavioursList() bool {
	if o != nil && !IsNil(o.ExpectedUeBehavioursList) {
		return true
	}

	return false
}

// SetExpectedUeBehavioursList gets a reference to the given map[string]ExpectedUeBehaviourData and assigns it to the ExpectedUeBehavioursList field.
func (o *SessionManagementSubscriptionData) SetExpectedUeBehavioursList(v map[string]ExpectedUeBehaviourData) {
	o.ExpectedUeBehavioursList = &v
}

// GetExpectedUeBehaviourData returns the ExpectedUeBehaviourData field value if set, zero value otherwise.
func (o *SessionManagementSubscriptionData) GetExpectedUeBehaviourData() map[string]map[string]ExpectedUeBehaviourData {
	if o == nil || IsNil(o.ExpectedUeBehaviourData) {
		var ret map[string]map[string]ExpectedUeBehaviourData
		return ret
	}
	return *o.ExpectedUeBehaviourData
}

// GetExpectedUeBehaviourDataOk returns a tuple with the ExpectedUeBehaviourData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionManagementSubscriptionData) GetExpectedUeBehaviourDataOk() (*map[string]map[string]ExpectedUeBehaviourData, bool) {
	if o == nil || IsNil(o.ExpectedUeBehaviourData) {
		return nil, false
	}
	return o.ExpectedUeBehaviourData, true
}

// HasExpectedUeBehaviourData returns a boolean if a field has been set.
func (o *SessionManagementSubscriptionData) HasExpectedUeBehaviourData() bool {
	if o != nil && !IsNil(o.ExpectedUeBehaviourData) {
		return true
	}

	return false
}

// SetExpectedUeBehaviourData gets a reference to the given map[string]map[string]ExpectedUeBehaviourData and assigns it to the ExpectedUeBehaviourData field.
func (o *SessionManagementSubscriptionData) SetExpectedUeBehaviourData(v map[string]map[string]ExpectedUeBehaviourData) {
	o.ExpectedUeBehaviourData = &v
}

// GetAppSpecificExpectedUeBehaviourData returns the AppSpecificExpectedUeBehaviourData field value if set, zero value otherwise.
func (o *SessionManagementSubscriptionData) GetAppSpecificExpectedUeBehaviourData() map[string]map[string]AppSpecificExpectedUeBehaviourData {
	if o == nil || IsNil(o.AppSpecificExpectedUeBehaviourData) {
		var ret map[string]map[string]AppSpecificExpectedUeBehaviourData
		return ret
	}
	return *o.AppSpecificExpectedUeBehaviourData
}

// GetAppSpecificExpectedUeBehaviourDataOk returns a tuple with the AppSpecificExpectedUeBehaviourData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionManagementSubscriptionData) GetAppSpecificExpectedUeBehaviourDataOk() (*map[string]map[string]AppSpecificExpectedUeBehaviourData, bool) {
	if o == nil || IsNil(o.AppSpecificExpectedUeBehaviourData) {
		return nil, false
	}
	return o.AppSpecificExpectedUeBehaviourData, true
}

// HasAppSpecificExpectedUeBehaviourData returns a boolean if a field has been set.
func (o *SessionManagementSubscriptionData) HasAppSpecificExpectedUeBehaviourData() bool {
	if o != nil && !IsNil(o.AppSpecificExpectedUeBehaviourData) {
		return true
	}

	return false
}

// SetAppSpecificExpectedUeBehaviourData gets a reference to the given map[string]map[string]AppSpecificExpectedUeBehaviourData and assigns it to the AppSpecificExpectedUeBehaviourData field.
func (o *SessionManagementSubscriptionData) SetAppSpecificExpectedUeBehaviourData(v map[string]map[string]AppSpecificExpectedUeBehaviourData) {
	o.AppSpecificExpectedUeBehaviourData = &v
}

// GetSuggestedPacketNumDlList returns the SuggestedPacketNumDlList field value if set, zero value otherwise.
func (o *SessionManagementSubscriptionData) GetSuggestedPacketNumDlList() map[string]SuggestedPacketNumDl {
	if o == nil || IsNil(o.SuggestedPacketNumDlList) {
		var ret map[string]SuggestedPacketNumDl
		return ret
	}
	return *o.SuggestedPacketNumDlList
}

// GetSuggestedPacketNumDlListOk returns a tuple with the SuggestedPacketNumDlList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionManagementSubscriptionData) GetSuggestedPacketNumDlListOk() (*map[string]SuggestedPacketNumDl, bool) {
	if o == nil || IsNil(o.SuggestedPacketNumDlList) {
		return nil, false
	}
	return o.SuggestedPacketNumDlList, true
}

// HasSuggestedPacketNumDlList returns a boolean if a field has been set.
func (o *SessionManagementSubscriptionData) HasSuggestedPacketNumDlList() bool {
	if o != nil && !IsNil(o.SuggestedPacketNumDlList) {
		return true
	}

	return false
}

// SetSuggestedPacketNumDlList gets a reference to the given map[string]SuggestedPacketNumDl and assigns it to the SuggestedPacketNumDlList field.
func (o *SessionManagementSubscriptionData) SetSuggestedPacketNumDlList(v map[string]SuggestedPacketNumDl) {
	o.SuggestedPacketNumDlList = &v
}

// GetVar3gppChargingCharacteristics returns the Var3gppChargingCharacteristics field value if set, zero value otherwise.
func (o *SessionManagementSubscriptionData) GetVar3gppChargingCharacteristics() string {
	if o == nil || IsNil(o.Var3gppChargingCharacteristics) {
		var ret string
		return ret
	}
	return *o.Var3gppChargingCharacteristics
}

// GetVar3gppChargingCharacteristicsOk returns a tuple with the Var3gppChargingCharacteristics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionManagementSubscriptionData) GetVar3gppChargingCharacteristicsOk() (*string, bool) {
	if o == nil || IsNil(o.Var3gppChargingCharacteristics) {
		return nil, false
	}
	return o.Var3gppChargingCharacteristics, true
}

// HasVar3gppChargingCharacteristics returns a boolean if a field has been set.
func (o *SessionManagementSubscriptionData) HasVar3gppChargingCharacteristics() bool {
	if o != nil && !IsNil(o.Var3gppChargingCharacteristics) {
		return true
	}

	return false
}

// SetVar3gppChargingCharacteristics gets a reference to the given string and assigns it to the Var3gppChargingCharacteristics field.
func (o *SessionManagementSubscriptionData) SetVar3gppChargingCharacteristics(v string) {
	o.Var3gppChargingCharacteristics = &v
}

// GetNsacMode returns the NsacMode field value if set, zero value otherwise.
func (o *SessionManagementSubscriptionData) GetNsacMode() NsacAdmissionMode {
	if o == nil || IsNil(o.NsacMode) {
		var ret NsacAdmissionMode
		return ret
	}
	return *o.NsacMode
}

// GetNsacModeOk returns a tuple with the NsacMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionManagementSubscriptionData) GetNsacModeOk() (*NsacAdmissionMode, bool) {
	if o == nil || IsNil(o.NsacMode) {
		return nil, false
	}
	return o.NsacMode, true
}

// HasNsacMode returns a boolean if a field has been set.
func (o *SessionManagementSubscriptionData) HasNsacMode() bool {
	if o != nil && !IsNil(o.NsacMode) {
		return true
	}

	return false
}

// SetNsacMode gets a reference to the given NsacAdmissionMode and assigns it to the NsacMode field.
func (o *SessionManagementSubscriptionData) SetNsacMode(v NsacAdmissionMode) {
	o.NsacMode = &v
}

// GetSessInactTimer returns the SessInactTimer field value if set, zero value otherwise.
func (o *SessionManagementSubscriptionData) GetSessInactTimer() int32 {
	if o == nil || IsNil(o.SessInactTimer) {
		var ret int32
		return ret
	}
	return *o.SessInactTimer
}

// GetSessInactTimerOk returns a tuple with the SessInactTimer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionManagementSubscriptionData) GetSessInactTimerOk() (*int32, bool) {
	if o == nil || IsNil(o.SessInactTimer) {
		return nil, false
	}
	return o.SessInactTimer, true
}

// HasSessInactTimer returns a boolean if a field has been set.
func (o *SessionManagementSubscriptionData) HasSessInactTimer() bool {
	if o != nil && !IsNil(o.SessInactTimer) {
		return true
	}

	return false
}

// SetSessInactTimer gets a reference to the given int32 and assigns it to the SessInactTimer field.
func (o *SessionManagementSubscriptionData) SetSessInactTimer(v int32) {
	o.SessInactTimer = &v
}

// GetOnDemand returns the OnDemand field value if set, zero value otherwise.
func (o *SessionManagementSubscriptionData) GetOnDemand() bool {
	if o == nil || IsNil(o.OnDemand) {
		var ret bool
		return ret
	}
	return *o.OnDemand
}

// GetOnDemandOk returns a tuple with the OnDemand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionManagementSubscriptionData) GetOnDemandOk() (*bool, bool) {
	if o == nil || IsNil(o.OnDemand) {
		return nil, false
	}
	return o.OnDemand, true
}

// HasOnDemand returns a boolean if a field has been set.
func (o *SessionManagementSubscriptionData) HasOnDemand() bool {
	if o != nil && !IsNil(o.OnDemand) {
		return true
	}

	return false
}

// SetOnDemand gets a reference to the given bool and assigns it to the OnDemand field.
func (o *SessionManagementSubscriptionData) SetOnDemand(v bool) {
	o.OnDemand = &v
}

// GetSupportedFeatures returns the SupportedFeatures field value if set, zero value otherwise.
func (o *SessionManagementSubscriptionData) GetSupportedFeatures() string {
	if o == nil || IsNil(o.SupportedFeatures) {
		var ret string
		return ret
	}
	return *o.SupportedFeatures
}

// GetSupportedFeaturesOk returns a tuple with the SupportedFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionManagementSubscriptionData) GetSupportedFeaturesOk() (*string, bool) {
	if o == nil || IsNil(o.SupportedFeatures) {
		return nil, false
	}
	return o.SupportedFeatures, true
}

// HasSupportedFeatures returns a boolean if a field has been set.
func (o *SessionManagementSubscriptionData) HasSupportedFeatures() bool {
	if o != nil && !IsNil(o.SupportedFeatures) {
		return true
	}

	return false
}

// SetSupportedFeatures gets a reference to the given string and assigns it to the SupportedFeatures field.
func (o *SessionManagementSubscriptionData) SetSupportedFeatures(v string) {
	o.SupportedFeatures = &v
}

// GetAdditionalSharedDnnConfigurationsIds returns the AdditionalSharedDnnConfigurationsIds field value if set, zero value otherwise.
func (o *SessionManagementSubscriptionData) GetAdditionalSharedDnnConfigurationsIds() []string {
	if o == nil || IsNil(o.AdditionalSharedDnnConfigurationsIds) {
		var ret []string
		return ret
	}
	return o.AdditionalSharedDnnConfigurationsIds
}

// GetAdditionalSharedDnnConfigurationsIdsOk returns a tuple with the AdditionalSharedDnnConfigurationsIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionManagementSubscriptionData) GetAdditionalSharedDnnConfigurationsIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AdditionalSharedDnnConfigurationsIds) {
		return nil, false
	}
	return o.AdditionalSharedDnnConfigurationsIds, true
}

// HasAdditionalSharedDnnConfigurationsIds returns a boolean if a field has been set.
func (o *SessionManagementSubscriptionData) HasAdditionalSharedDnnConfigurationsIds() bool {
	if o != nil && !IsNil(o.AdditionalSharedDnnConfigurationsIds) {
		return true
	}

	return false
}

// SetAdditionalSharedDnnConfigurationsIds gets a reference to the given []string and assigns it to the AdditionalSharedDnnConfigurationsIds field.
func (o *SessionManagementSubscriptionData) SetAdditionalSharedDnnConfigurationsIds(v []string) {
	o.AdditionalSharedDnnConfigurationsIds = v
}

func (o SessionManagementSubscriptionData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SessionManagementSubscriptionData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["singleNssai"] = o.SingleNssai
	if !IsNil(o.DnnConfigurations) {
		toSerialize["dnnConfigurations"] = o.DnnConfigurations
	}
	if !IsNil(o.InternalGroupIds) {
		toSerialize["internalGroupIds"] = o.InternalGroupIds
	}
	if !IsNil(o.SharedVnGroupDataIds) {
		toSerialize["sharedVnGroupDataIds"] = o.SharedVnGroupDataIds
	}
	if !IsNil(o.SharedDnnConfigurationsId) {
		toSerialize["sharedDnnConfigurationsId"] = o.SharedDnnConfigurationsId
	}
	if o.OdbPacketServices.IsSet() {
		toSerialize["odbPacketServices"] = o.OdbPacketServices.Get()
	}
	if o.TraceData.IsSet() {
		toSerialize["traceData"] = o.TraceData.Get()
	}
	if !IsNil(o.SharedTraceDataId) {
		toSerialize["sharedTraceDataId"] = o.SharedTraceDataId
	}
	if !IsNil(o.ExpectedUeBehavioursList) {
		toSerialize["expectedUeBehavioursList"] = o.ExpectedUeBehavioursList
	}
	if !IsNil(o.ExpectedUeBehaviourData) {
		toSerialize["expectedUeBehaviourData"] = o.ExpectedUeBehaviourData
	}
	if !IsNil(o.AppSpecificExpectedUeBehaviourData) {
		toSerialize["appSpecificExpectedUeBehaviourData"] = o.AppSpecificExpectedUeBehaviourData
	}
	if !IsNil(o.SuggestedPacketNumDlList) {
		toSerialize["suggestedPacketNumDlList"] = o.SuggestedPacketNumDlList
	}
	if !IsNil(o.Var3gppChargingCharacteristics) {
		toSerialize["3gppChargingCharacteristics"] = o.Var3gppChargingCharacteristics
	}
	if !IsNil(o.NsacMode) {
		toSerialize["nsacMode"] = o.NsacMode
	}
	if !IsNil(o.SessInactTimer) {
		toSerialize["sessInactTimer"] = o.SessInactTimer
	}
	if !IsNil(o.OnDemand) {
		toSerialize["onDemand"] = o.OnDemand
	}
	if !IsNil(o.SupportedFeatures) {
		toSerialize["supportedFeatures"] = o.SupportedFeatures
	}
	if !IsNil(o.AdditionalSharedDnnConfigurationsIds) {
		toSerialize["additionalSharedDnnConfigurationsIds"] = o.AdditionalSharedDnnConfigurationsIds
	}
	return toSerialize, nil
}

func (o *SessionManagementSubscriptionData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"singleNssai",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSessionManagementSubscriptionData := _SessionManagementSubscriptionData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSessionManagementSubscriptionData)

	if err != nil {
		return err
	}

	*o = SessionManagementSubscriptionData(varSessionManagementSubscriptionData)

	return err
}

type NullableSessionManagementSubscriptionData struct {
	value *SessionManagementSubscriptionData
	isSet bool
}

func (v NullableSessionManagementSubscriptionData) Get() *SessionManagementSubscriptionData {
	return v.value
}

func (v *NullableSessionManagementSubscriptionData) Set(val *SessionManagementSubscriptionData) {
	v.value = val
	v.isSet = true
}

func (v NullableSessionManagementSubscriptionData) IsSet() bool {
	return v.isSet
}

func (v *NullableSessionManagementSubscriptionData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSessionManagementSubscriptionData(val *SessionManagementSubscriptionData) *NullableSessionManagementSubscriptionData {
	return &NullableSessionManagementSubscriptionData{value: val, isSet: true}
}

func (v NullableSessionManagementSubscriptionData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSessionManagementSubscriptionData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


