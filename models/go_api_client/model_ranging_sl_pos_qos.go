/*
Nudm_SDM

Nudm Subscriber Data Management Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 2.3.0-alpha.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RangingSlPosQos type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RangingSlPosQos{}

// RangingSlPosQos struct for RangingSlPosQos
type RangingSlPosQos struct {
	// Indicates value of accuracy.
	HAccuracy *float32 `json:"hAccuracy,omitempty"`
	// Indicates value of accuracy.
	VAccuracy *float32 `json:"vAccuracy,omitempty"`
	// Indicates value of accuracy.
	RelativeHAccuracy *float32 `json:"relativeHAccuracy,omitempty"`
	// Indicates value of accuracy.
	RelativeVAccuracy *float32 `json:"relativeVAccuracy,omitempty"`
	// Indicates value of accuracy.
	DistanceAccuracy *float32 `json:"distanceAccuracy,omitempty"`
	// Indicates value of accuracy.
	DirectionAccuracy *float32 `json:"directionAccuracy,omitempty"`
	VerticalRequested *bool `json:"verticalRequested,omitempty"`
	ResponseTime *ResponseTime `json:"responseTime,omitempty"`
	LcsQosClass *LcsQosClass `json:"lcsQosClass,omitempty"`
}

// NewRangingSlPosQos instantiates a new RangingSlPosQos object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRangingSlPosQos() *RangingSlPosQos {
	this := RangingSlPosQos{}
	return &this
}

// NewRangingSlPosQosWithDefaults instantiates a new RangingSlPosQos object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRangingSlPosQosWithDefaults() *RangingSlPosQos {
	this := RangingSlPosQos{}
	return &this
}

// GetHAccuracy returns the HAccuracy field value if set, zero value otherwise.
func (o *RangingSlPosQos) GetHAccuracy() float32 {
	if o == nil || IsNil(o.HAccuracy) {
		var ret float32
		return ret
	}
	return *o.HAccuracy
}

// GetHAccuracyOk returns a tuple with the HAccuracy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RangingSlPosQos) GetHAccuracyOk() (*float32, bool) {
	if o == nil || IsNil(o.HAccuracy) {
		return nil, false
	}
	return o.HAccuracy, true
}

// HasHAccuracy returns a boolean if a field has been set.
func (o *RangingSlPosQos) HasHAccuracy() bool {
	if o != nil && !IsNil(o.HAccuracy) {
		return true
	}

	return false
}

// SetHAccuracy gets a reference to the given float32 and assigns it to the HAccuracy field.
func (o *RangingSlPosQos) SetHAccuracy(v float32) {
	o.HAccuracy = &v
}

// GetVAccuracy returns the VAccuracy field value if set, zero value otherwise.
func (o *RangingSlPosQos) GetVAccuracy() float32 {
	if o == nil || IsNil(o.VAccuracy) {
		var ret float32
		return ret
	}
	return *o.VAccuracy
}

// GetVAccuracyOk returns a tuple with the VAccuracy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RangingSlPosQos) GetVAccuracyOk() (*float32, bool) {
	if o == nil || IsNil(o.VAccuracy) {
		return nil, false
	}
	return o.VAccuracy, true
}

// HasVAccuracy returns a boolean if a field has been set.
func (o *RangingSlPosQos) HasVAccuracy() bool {
	if o != nil && !IsNil(o.VAccuracy) {
		return true
	}

	return false
}

// SetVAccuracy gets a reference to the given float32 and assigns it to the VAccuracy field.
func (o *RangingSlPosQos) SetVAccuracy(v float32) {
	o.VAccuracy = &v
}

// GetRelativeHAccuracy returns the RelativeHAccuracy field value if set, zero value otherwise.
func (o *RangingSlPosQos) GetRelativeHAccuracy() float32 {
	if o == nil || IsNil(o.RelativeHAccuracy) {
		var ret float32
		return ret
	}
	return *o.RelativeHAccuracy
}

// GetRelativeHAccuracyOk returns a tuple with the RelativeHAccuracy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RangingSlPosQos) GetRelativeHAccuracyOk() (*float32, bool) {
	if o == nil || IsNil(o.RelativeHAccuracy) {
		return nil, false
	}
	return o.RelativeHAccuracy, true
}

// HasRelativeHAccuracy returns a boolean if a field has been set.
func (o *RangingSlPosQos) HasRelativeHAccuracy() bool {
	if o != nil && !IsNil(o.RelativeHAccuracy) {
		return true
	}

	return false
}

// SetRelativeHAccuracy gets a reference to the given float32 and assigns it to the RelativeHAccuracy field.
func (o *RangingSlPosQos) SetRelativeHAccuracy(v float32) {
	o.RelativeHAccuracy = &v
}

// GetRelativeVAccuracy returns the RelativeVAccuracy field value if set, zero value otherwise.
func (o *RangingSlPosQos) GetRelativeVAccuracy() float32 {
	if o == nil || IsNil(o.RelativeVAccuracy) {
		var ret float32
		return ret
	}
	return *o.RelativeVAccuracy
}

// GetRelativeVAccuracyOk returns a tuple with the RelativeVAccuracy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RangingSlPosQos) GetRelativeVAccuracyOk() (*float32, bool) {
	if o == nil || IsNil(o.RelativeVAccuracy) {
		return nil, false
	}
	return o.RelativeVAccuracy, true
}

// HasRelativeVAccuracy returns a boolean if a field has been set.
func (o *RangingSlPosQos) HasRelativeVAccuracy() bool {
	if o != nil && !IsNil(o.RelativeVAccuracy) {
		return true
	}

	return false
}

// SetRelativeVAccuracy gets a reference to the given float32 and assigns it to the RelativeVAccuracy field.
func (o *RangingSlPosQos) SetRelativeVAccuracy(v float32) {
	o.RelativeVAccuracy = &v
}

// GetDistanceAccuracy returns the DistanceAccuracy field value if set, zero value otherwise.
func (o *RangingSlPosQos) GetDistanceAccuracy() float32 {
	if o == nil || IsNil(o.DistanceAccuracy) {
		var ret float32
		return ret
	}
	return *o.DistanceAccuracy
}

// GetDistanceAccuracyOk returns a tuple with the DistanceAccuracy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RangingSlPosQos) GetDistanceAccuracyOk() (*float32, bool) {
	if o == nil || IsNil(o.DistanceAccuracy) {
		return nil, false
	}
	return o.DistanceAccuracy, true
}

// HasDistanceAccuracy returns a boolean if a field has been set.
func (o *RangingSlPosQos) HasDistanceAccuracy() bool {
	if o != nil && !IsNil(o.DistanceAccuracy) {
		return true
	}

	return false
}

// SetDistanceAccuracy gets a reference to the given float32 and assigns it to the DistanceAccuracy field.
func (o *RangingSlPosQos) SetDistanceAccuracy(v float32) {
	o.DistanceAccuracy = &v
}

// GetDirectionAccuracy returns the DirectionAccuracy field value if set, zero value otherwise.
func (o *RangingSlPosQos) GetDirectionAccuracy() float32 {
	if o == nil || IsNil(o.DirectionAccuracy) {
		var ret float32
		return ret
	}
	return *o.DirectionAccuracy
}

// GetDirectionAccuracyOk returns a tuple with the DirectionAccuracy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RangingSlPosQos) GetDirectionAccuracyOk() (*float32, bool) {
	if o == nil || IsNil(o.DirectionAccuracy) {
		return nil, false
	}
	return o.DirectionAccuracy, true
}

// HasDirectionAccuracy returns a boolean if a field has been set.
func (o *RangingSlPosQos) HasDirectionAccuracy() bool {
	if o != nil && !IsNil(o.DirectionAccuracy) {
		return true
	}

	return false
}

// SetDirectionAccuracy gets a reference to the given float32 and assigns it to the DirectionAccuracy field.
func (o *RangingSlPosQos) SetDirectionAccuracy(v float32) {
	o.DirectionAccuracy = &v
}

// GetVerticalRequested returns the VerticalRequested field value if set, zero value otherwise.
func (o *RangingSlPosQos) GetVerticalRequested() bool {
	if o == nil || IsNil(o.VerticalRequested) {
		var ret bool
		return ret
	}
	return *o.VerticalRequested
}

// GetVerticalRequestedOk returns a tuple with the VerticalRequested field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RangingSlPosQos) GetVerticalRequestedOk() (*bool, bool) {
	if o == nil || IsNil(o.VerticalRequested) {
		return nil, false
	}
	return o.VerticalRequested, true
}

// HasVerticalRequested returns a boolean if a field has been set.
func (o *RangingSlPosQos) HasVerticalRequested() bool {
	if o != nil && !IsNil(o.VerticalRequested) {
		return true
	}

	return false
}

// SetVerticalRequested gets a reference to the given bool and assigns it to the VerticalRequested field.
func (o *RangingSlPosQos) SetVerticalRequested(v bool) {
	o.VerticalRequested = &v
}

// GetResponseTime returns the ResponseTime field value if set, zero value otherwise.
func (o *RangingSlPosQos) GetResponseTime() ResponseTime {
	if o == nil || IsNil(o.ResponseTime) {
		var ret ResponseTime
		return ret
	}
	return *o.ResponseTime
}

// GetResponseTimeOk returns a tuple with the ResponseTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RangingSlPosQos) GetResponseTimeOk() (*ResponseTime, bool) {
	if o == nil || IsNil(o.ResponseTime) {
		return nil, false
	}
	return o.ResponseTime, true
}

// HasResponseTime returns a boolean if a field has been set.
func (o *RangingSlPosQos) HasResponseTime() bool {
	if o != nil && !IsNil(o.ResponseTime) {
		return true
	}

	return false
}

// SetResponseTime gets a reference to the given ResponseTime and assigns it to the ResponseTime field.
func (o *RangingSlPosQos) SetResponseTime(v ResponseTime) {
	o.ResponseTime = &v
}

// GetLcsQosClass returns the LcsQosClass field value if set, zero value otherwise.
func (o *RangingSlPosQos) GetLcsQosClass() LcsQosClass {
	if o == nil || IsNil(o.LcsQosClass) {
		var ret LcsQosClass
		return ret
	}
	return *o.LcsQosClass
}

// GetLcsQosClassOk returns a tuple with the LcsQosClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RangingSlPosQos) GetLcsQosClassOk() (*LcsQosClass, bool) {
	if o == nil || IsNil(o.LcsQosClass) {
		return nil, false
	}
	return o.LcsQosClass, true
}

// HasLcsQosClass returns a boolean if a field has been set.
func (o *RangingSlPosQos) HasLcsQosClass() bool {
	if o != nil && !IsNil(o.LcsQosClass) {
		return true
	}

	return false
}

// SetLcsQosClass gets a reference to the given LcsQosClass and assigns it to the LcsQosClass field.
func (o *RangingSlPosQos) SetLcsQosClass(v LcsQosClass) {
	o.LcsQosClass = &v
}

func (o RangingSlPosQos) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RangingSlPosQos) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HAccuracy) {
		toSerialize["hAccuracy"] = o.HAccuracy
	}
	if !IsNil(o.VAccuracy) {
		toSerialize["vAccuracy"] = o.VAccuracy
	}
	if !IsNil(o.RelativeHAccuracy) {
		toSerialize["relativeHAccuracy"] = o.RelativeHAccuracy
	}
	if !IsNil(o.RelativeVAccuracy) {
		toSerialize["relativeVAccuracy"] = o.RelativeVAccuracy
	}
	if !IsNil(o.DistanceAccuracy) {
		toSerialize["distanceAccuracy"] = o.DistanceAccuracy
	}
	if !IsNil(o.DirectionAccuracy) {
		toSerialize["directionAccuracy"] = o.DirectionAccuracy
	}
	if !IsNil(o.VerticalRequested) {
		toSerialize["verticalRequested"] = o.VerticalRequested
	}
	if !IsNil(o.ResponseTime) {
		toSerialize["responseTime"] = o.ResponseTime
	}
	if !IsNil(o.LcsQosClass) {
		toSerialize["lcsQosClass"] = o.LcsQosClass
	}
	return toSerialize, nil
}

type NullableRangingSlPosQos struct {
	value *RangingSlPosQos
	isSet bool
}

func (v NullableRangingSlPosQos) Get() *RangingSlPosQos {
	return v.value
}

func (v *NullableRangingSlPosQos) Set(val *RangingSlPosQos) {
	v.value = val
	v.isSet = true
}

func (v NullableRangingSlPosQos) IsSet() bool {
	return v.isSet
}

func (v *NullableRangingSlPosQos) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRangingSlPosQos(val *RangingSlPosQos) *NullableRangingSlPosQos {
	return &NullableRangingSlPosQos{value: val, isSet: true}
}

func (v NullableRangingSlPosQos) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRangingSlPosQos) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


