/*
Nudm_SDM

Nudm Subscriber Data Management Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 2.3.0-alpha.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ClockQuality type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClockQuality{}

// ClockQuality Contains Clock Quality.
type ClockQuality struct {
	TraceabilityToGnss *bool `json:"traceabilityToGnss,omitempty"`
	TraceabilityToUtc *bool `json:"traceabilityToUtc,omitempty"`
	// Integer where the allowed values correspond to the value range of an unsigned 16-bit integer. 
	FrequencyStability *int32 `json:"frequencyStability,omitempty"`
	ClockAccuracyIndex *string `json:"clockAccuracyIndex,omitempty" validate:"regexp=^[A-Fa-f0-9]{2}$"`
	ClockAccuracyValue *int32 `json:"clockAccuracyValue,omitempty"`
}

// NewClockQuality instantiates a new ClockQuality object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClockQuality() *ClockQuality {
	this := ClockQuality{}
	return &this
}

// NewClockQualityWithDefaults instantiates a new ClockQuality object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClockQualityWithDefaults() *ClockQuality {
	this := ClockQuality{}
	return &this
}

// GetTraceabilityToGnss returns the TraceabilityToGnss field value if set, zero value otherwise.
func (o *ClockQuality) GetTraceabilityToGnss() bool {
	if o == nil || IsNil(o.TraceabilityToGnss) {
		var ret bool
		return ret
	}
	return *o.TraceabilityToGnss
}

// GetTraceabilityToGnssOk returns a tuple with the TraceabilityToGnss field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClockQuality) GetTraceabilityToGnssOk() (*bool, bool) {
	if o == nil || IsNil(o.TraceabilityToGnss) {
		return nil, false
	}
	return o.TraceabilityToGnss, true
}

// HasTraceabilityToGnss returns a boolean if a field has been set.
func (o *ClockQuality) HasTraceabilityToGnss() bool {
	if o != nil && !IsNil(o.TraceabilityToGnss) {
		return true
	}

	return false
}

// SetTraceabilityToGnss gets a reference to the given bool and assigns it to the TraceabilityToGnss field.
func (o *ClockQuality) SetTraceabilityToGnss(v bool) {
	o.TraceabilityToGnss = &v
}

// GetTraceabilityToUtc returns the TraceabilityToUtc field value if set, zero value otherwise.
func (o *ClockQuality) GetTraceabilityToUtc() bool {
	if o == nil || IsNil(o.TraceabilityToUtc) {
		var ret bool
		return ret
	}
	return *o.TraceabilityToUtc
}

// GetTraceabilityToUtcOk returns a tuple with the TraceabilityToUtc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClockQuality) GetTraceabilityToUtcOk() (*bool, bool) {
	if o == nil || IsNil(o.TraceabilityToUtc) {
		return nil, false
	}
	return o.TraceabilityToUtc, true
}

// HasTraceabilityToUtc returns a boolean if a field has been set.
func (o *ClockQuality) HasTraceabilityToUtc() bool {
	if o != nil && !IsNil(o.TraceabilityToUtc) {
		return true
	}

	return false
}

// SetTraceabilityToUtc gets a reference to the given bool and assigns it to the TraceabilityToUtc field.
func (o *ClockQuality) SetTraceabilityToUtc(v bool) {
	o.TraceabilityToUtc = &v
}

// GetFrequencyStability returns the FrequencyStability field value if set, zero value otherwise.
func (o *ClockQuality) GetFrequencyStability() int32 {
	if o == nil || IsNil(o.FrequencyStability) {
		var ret int32
		return ret
	}
	return *o.FrequencyStability
}

// GetFrequencyStabilityOk returns a tuple with the FrequencyStability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClockQuality) GetFrequencyStabilityOk() (*int32, bool) {
	if o == nil || IsNil(o.FrequencyStability) {
		return nil, false
	}
	return o.FrequencyStability, true
}

// HasFrequencyStability returns a boolean if a field has been set.
func (o *ClockQuality) HasFrequencyStability() bool {
	if o != nil && !IsNil(o.FrequencyStability) {
		return true
	}

	return false
}

// SetFrequencyStability gets a reference to the given int32 and assigns it to the FrequencyStability field.
func (o *ClockQuality) SetFrequencyStability(v int32) {
	o.FrequencyStability = &v
}

// GetClockAccuracyIndex returns the ClockAccuracyIndex field value if set, zero value otherwise.
func (o *ClockQuality) GetClockAccuracyIndex() string {
	if o == nil || IsNil(o.ClockAccuracyIndex) {
		var ret string
		return ret
	}
	return *o.ClockAccuracyIndex
}

// GetClockAccuracyIndexOk returns a tuple with the ClockAccuracyIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClockQuality) GetClockAccuracyIndexOk() (*string, bool) {
	if o == nil || IsNil(o.ClockAccuracyIndex) {
		return nil, false
	}
	return o.ClockAccuracyIndex, true
}

// HasClockAccuracyIndex returns a boolean if a field has been set.
func (o *ClockQuality) HasClockAccuracyIndex() bool {
	if o != nil && !IsNil(o.ClockAccuracyIndex) {
		return true
	}

	return false
}

// SetClockAccuracyIndex gets a reference to the given string and assigns it to the ClockAccuracyIndex field.
func (o *ClockQuality) SetClockAccuracyIndex(v string) {
	o.ClockAccuracyIndex = &v
}

// GetClockAccuracyValue returns the ClockAccuracyValue field value if set, zero value otherwise.
func (o *ClockQuality) GetClockAccuracyValue() int32 {
	if o == nil || IsNil(o.ClockAccuracyValue) {
		var ret int32
		return ret
	}
	return *o.ClockAccuracyValue
}

// GetClockAccuracyValueOk returns a tuple with the ClockAccuracyValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClockQuality) GetClockAccuracyValueOk() (*int32, bool) {
	if o == nil || IsNil(o.ClockAccuracyValue) {
		return nil, false
	}
	return o.ClockAccuracyValue, true
}

// HasClockAccuracyValue returns a boolean if a field has been set.
func (o *ClockQuality) HasClockAccuracyValue() bool {
	if o != nil && !IsNil(o.ClockAccuracyValue) {
		return true
	}

	return false
}

// SetClockAccuracyValue gets a reference to the given int32 and assigns it to the ClockAccuracyValue field.
func (o *ClockQuality) SetClockAccuracyValue(v int32) {
	o.ClockAccuracyValue = &v
}

func (o ClockQuality) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClockQuality) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TraceabilityToGnss) {
		toSerialize["traceabilityToGnss"] = o.TraceabilityToGnss
	}
	if !IsNil(o.TraceabilityToUtc) {
		toSerialize["traceabilityToUtc"] = o.TraceabilityToUtc
	}
	if !IsNil(o.FrequencyStability) {
		toSerialize["frequencyStability"] = o.FrequencyStability
	}
	if !IsNil(o.ClockAccuracyIndex) {
		toSerialize["clockAccuracyIndex"] = o.ClockAccuracyIndex
	}
	if !IsNil(o.ClockAccuracyValue) {
		toSerialize["clockAccuracyValue"] = o.ClockAccuracyValue
	}
	return toSerialize, nil
}

type NullableClockQuality struct {
	value *ClockQuality
	isSet bool
}

func (v NullableClockQuality) Get() *ClockQuality {
	return v.value
}

func (v *NullableClockQuality) Set(val *ClockQuality) {
	v.value = val
	v.isSet = true
}

func (v NullableClockQuality) IsSet() bool {
	return v.isSet
}

func (v *NullableClockQuality) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClockQuality(val *ClockQuality) *NullableClockQuality {
	return &NullableClockQuality{value: val, isSet: true}
}

func (v NullableClockQuality) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClockQuality) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


