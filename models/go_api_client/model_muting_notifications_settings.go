/*
Nudm_EE

Nudm Event Exposure Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.5
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MutingNotificationsSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MutingNotificationsSettings{}

// MutingNotificationsSettings Indicates the Event producer NF settings to the Event consumer NF 
type MutingNotificationsSettings struct {
	MaxNoOfNotif *int32 `json:"maxNoOfNotif,omitempty"`
	// indicating a time in seconds.
	DurationBufferedNotif *int32 `json:"durationBufferedNotif,omitempty"`
}

// NewMutingNotificationsSettings instantiates a new MutingNotificationsSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMutingNotificationsSettings() *MutingNotificationsSettings {
	this := MutingNotificationsSettings{}
	return &this
}

// NewMutingNotificationsSettingsWithDefaults instantiates a new MutingNotificationsSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMutingNotificationsSettingsWithDefaults() *MutingNotificationsSettings {
	this := MutingNotificationsSettings{}
	return &this
}

// GetMaxNoOfNotif returns the MaxNoOfNotif field value if set, zero value otherwise.
func (o *MutingNotificationsSettings) GetMaxNoOfNotif() int32 {
	if o == nil || IsNil(o.MaxNoOfNotif) {
		var ret int32
		return ret
	}
	return *o.MaxNoOfNotif
}

// GetMaxNoOfNotifOk returns a tuple with the MaxNoOfNotif field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MutingNotificationsSettings) GetMaxNoOfNotifOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxNoOfNotif) {
		return nil, false
	}
	return o.MaxNoOfNotif, true
}

// HasMaxNoOfNotif returns a boolean if a field has been set.
func (o *MutingNotificationsSettings) HasMaxNoOfNotif() bool {
	if o != nil && !IsNil(o.MaxNoOfNotif) {
		return true
	}

	return false
}

// SetMaxNoOfNotif gets a reference to the given int32 and assigns it to the MaxNoOfNotif field.
func (o *MutingNotificationsSettings) SetMaxNoOfNotif(v int32) {
	o.MaxNoOfNotif = &v
}

// GetDurationBufferedNotif returns the DurationBufferedNotif field value if set, zero value otherwise.
func (o *MutingNotificationsSettings) GetDurationBufferedNotif() int32 {
	if o == nil || IsNil(o.DurationBufferedNotif) {
		var ret int32
		return ret
	}
	return *o.DurationBufferedNotif
}

// GetDurationBufferedNotifOk returns a tuple with the DurationBufferedNotif field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MutingNotificationsSettings) GetDurationBufferedNotifOk() (*int32, bool) {
	if o == nil || IsNil(o.DurationBufferedNotif) {
		return nil, false
	}
	return o.DurationBufferedNotif, true
}

// HasDurationBufferedNotif returns a boolean if a field has been set.
func (o *MutingNotificationsSettings) HasDurationBufferedNotif() bool {
	if o != nil && !IsNil(o.DurationBufferedNotif) {
		return true
	}

	return false
}

// SetDurationBufferedNotif gets a reference to the given int32 and assigns it to the DurationBufferedNotif field.
func (o *MutingNotificationsSettings) SetDurationBufferedNotif(v int32) {
	o.DurationBufferedNotif = &v
}

func (o MutingNotificationsSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MutingNotificationsSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MaxNoOfNotif) {
		toSerialize["maxNoOfNotif"] = o.MaxNoOfNotif
	}
	if !IsNil(o.DurationBufferedNotif) {
		toSerialize["durationBufferedNotif"] = o.DurationBufferedNotif
	}
	return toSerialize, nil
}

type NullableMutingNotificationsSettings struct {
	value *MutingNotificationsSettings
	isSet bool
}

func (v NullableMutingNotificationsSettings) Get() *MutingNotificationsSettings {
	return v.value
}

func (v *NullableMutingNotificationsSettings) Set(val *MutingNotificationsSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableMutingNotificationsSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableMutingNotificationsSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMutingNotificationsSettings(val *MutingNotificationsSettings) *NullableMutingNotificationsSettings {
	return &NullableMutingNotificationsSettings{value: val, isSet: true}
}

func (v NullableMutingNotificationsSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMutingNotificationsSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


