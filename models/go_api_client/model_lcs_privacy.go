/*
Nudm_PP

Nudm Parameter Provision Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.5
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the LcsPrivacy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LcsPrivacy{}

// LcsPrivacy struct for LcsPrivacy
type LcsPrivacy struct {
	AfInstanceId *string `json:"afInstanceId,omitempty"`
	// Integer where the allowed values correspond to the value range of an unsigned 64-bit integer. 
	ReferenceId *int32 `json:"referenceId,omitempty"`
	Lpi *Lpi `json:"lpi,omitempty"`
	// String uniquely identifying MTC provider information.
	MtcProviderInformation *string `json:"mtcProviderInformation,omitempty"`
	EvtRptExpectedArea *GeographicArea `json:"evtRptExpectedArea,omitempty"`
	AreaUsageInd *AreaUsageInd `json:"areaUsageInd,omitempty"`
	UpLocRepIndAf *UpLocRepIndAf `json:"upLocRepIndAf,omitempty"`
}

// NewLcsPrivacy instantiates a new LcsPrivacy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLcsPrivacy() *LcsPrivacy {
	this := LcsPrivacy{}
	var areaUsageInd AreaUsageInd = POSITIVE_SENSE
	this.AreaUsageInd = &areaUsageInd
	var upLocRepIndAf UpLocRepIndAf = USER_PLANE_REPORT_NOT_ALLOWED
	this.UpLocRepIndAf = &upLocRepIndAf
	return &this
}

// NewLcsPrivacyWithDefaults instantiates a new LcsPrivacy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLcsPrivacyWithDefaults() *LcsPrivacy {
	this := LcsPrivacy{}
	var areaUsageInd AreaUsageInd = POSITIVE_SENSE
	this.AreaUsageInd = &areaUsageInd
	var upLocRepIndAf UpLocRepIndAf = USER_PLANE_REPORT_NOT_ALLOWED
	this.UpLocRepIndAf = &upLocRepIndAf
	return &this
}

// GetAfInstanceId returns the AfInstanceId field value if set, zero value otherwise.
func (o *LcsPrivacy) GetAfInstanceId() string {
	if o == nil || IsNil(o.AfInstanceId) {
		var ret string
		return ret
	}
	return *o.AfInstanceId
}

// GetAfInstanceIdOk returns a tuple with the AfInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LcsPrivacy) GetAfInstanceIdOk() (*string, bool) {
	if o == nil || IsNil(o.AfInstanceId) {
		return nil, false
	}
	return o.AfInstanceId, true
}

// HasAfInstanceId returns a boolean if a field has been set.
func (o *LcsPrivacy) HasAfInstanceId() bool {
	if o != nil && !IsNil(o.AfInstanceId) {
		return true
	}

	return false
}

// SetAfInstanceId gets a reference to the given string and assigns it to the AfInstanceId field.
func (o *LcsPrivacy) SetAfInstanceId(v string) {
	o.AfInstanceId = &v
}

// GetReferenceId returns the ReferenceId field value if set, zero value otherwise.
func (o *LcsPrivacy) GetReferenceId() int32 {
	if o == nil || IsNil(o.ReferenceId) {
		var ret int32
		return ret
	}
	return *o.ReferenceId
}

// GetReferenceIdOk returns a tuple with the ReferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LcsPrivacy) GetReferenceIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ReferenceId) {
		return nil, false
	}
	return o.ReferenceId, true
}

// HasReferenceId returns a boolean if a field has been set.
func (o *LcsPrivacy) HasReferenceId() bool {
	if o != nil && !IsNil(o.ReferenceId) {
		return true
	}

	return false
}

// SetReferenceId gets a reference to the given int32 and assigns it to the ReferenceId field.
func (o *LcsPrivacy) SetReferenceId(v int32) {
	o.ReferenceId = &v
}

// GetLpi returns the Lpi field value if set, zero value otherwise.
func (o *LcsPrivacy) GetLpi() Lpi {
	if o == nil || IsNil(o.Lpi) {
		var ret Lpi
		return ret
	}
	return *o.Lpi
}

// GetLpiOk returns a tuple with the Lpi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LcsPrivacy) GetLpiOk() (*Lpi, bool) {
	if o == nil || IsNil(o.Lpi) {
		return nil, false
	}
	return o.Lpi, true
}

// HasLpi returns a boolean if a field has been set.
func (o *LcsPrivacy) HasLpi() bool {
	if o != nil && !IsNil(o.Lpi) {
		return true
	}

	return false
}

// SetLpi gets a reference to the given Lpi and assigns it to the Lpi field.
func (o *LcsPrivacy) SetLpi(v Lpi) {
	o.Lpi = &v
}

// GetMtcProviderInformation returns the MtcProviderInformation field value if set, zero value otherwise.
func (o *LcsPrivacy) GetMtcProviderInformation() string {
	if o == nil || IsNil(o.MtcProviderInformation) {
		var ret string
		return ret
	}
	return *o.MtcProviderInformation
}

// GetMtcProviderInformationOk returns a tuple with the MtcProviderInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LcsPrivacy) GetMtcProviderInformationOk() (*string, bool) {
	if o == nil || IsNil(o.MtcProviderInformation) {
		return nil, false
	}
	return o.MtcProviderInformation, true
}

// HasMtcProviderInformation returns a boolean if a field has been set.
func (o *LcsPrivacy) HasMtcProviderInformation() bool {
	if o != nil && !IsNil(o.MtcProviderInformation) {
		return true
	}

	return false
}

// SetMtcProviderInformation gets a reference to the given string and assigns it to the MtcProviderInformation field.
func (o *LcsPrivacy) SetMtcProviderInformation(v string) {
	o.MtcProviderInformation = &v
}

// GetEvtRptExpectedArea returns the EvtRptExpectedArea field value if set, zero value otherwise.
func (o *LcsPrivacy) GetEvtRptExpectedArea() GeographicArea {
	if o == nil || IsNil(o.EvtRptExpectedArea) {
		var ret GeographicArea
		return ret
	}
	return *o.EvtRptExpectedArea
}

// GetEvtRptExpectedAreaOk returns a tuple with the EvtRptExpectedArea field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LcsPrivacy) GetEvtRptExpectedAreaOk() (*GeographicArea, bool) {
	if o == nil || IsNil(o.EvtRptExpectedArea) {
		return nil, false
	}
	return o.EvtRptExpectedArea, true
}

// HasEvtRptExpectedArea returns a boolean if a field has been set.
func (o *LcsPrivacy) HasEvtRptExpectedArea() bool {
	if o != nil && !IsNil(o.EvtRptExpectedArea) {
		return true
	}

	return false
}

// SetEvtRptExpectedArea gets a reference to the given GeographicArea and assigns it to the EvtRptExpectedArea field.
func (o *LcsPrivacy) SetEvtRptExpectedArea(v GeographicArea) {
	o.EvtRptExpectedArea = &v
}

// GetAreaUsageInd returns the AreaUsageInd field value if set, zero value otherwise.
func (o *LcsPrivacy) GetAreaUsageInd() AreaUsageInd {
	if o == nil || IsNil(o.AreaUsageInd) {
		var ret AreaUsageInd
		return ret
	}
	return *o.AreaUsageInd
}

// GetAreaUsageIndOk returns a tuple with the AreaUsageInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LcsPrivacy) GetAreaUsageIndOk() (*AreaUsageInd, bool) {
	if o == nil || IsNil(o.AreaUsageInd) {
		return nil, false
	}
	return o.AreaUsageInd, true
}

// HasAreaUsageInd returns a boolean if a field has been set.
func (o *LcsPrivacy) HasAreaUsageInd() bool {
	if o != nil && !IsNil(o.AreaUsageInd) {
		return true
	}

	return false
}

// SetAreaUsageInd gets a reference to the given AreaUsageInd and assigns it to the AreaUsageInd field.
func (o *LcsPrivacy) SetAreaUsageInd(v AreaUsageInd) {
	o.AreaUsageInd = &v
}

// GetUpLocRepIndAf returns the UpLocRepIndAf field value if set, zero value otherwise.
func (o *LcsPrivacy) GetUpLocRepIndAf() UpLocRepIndAf {
	if o == nil || IsNil(o.UpLocRepIndAf) {
		var ret UpLocRepIndAf
		return ret
	}
	return *o.UpLocRepIndAf
}

// GetUpLocRepIndAfOk returns a tuple with the UpLocRepIndAf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LcsPrivacy) GetUpLocRepIndAfOk() (*UpLocRepIndAf, bool) {
	if o == nil || IsNil(o.UpLocRepIndAf) {
		return nil, false
	}
	return o.UpLocRepIndAf, true
}

// HasUpLocRepIndAf returns a boolean if a field has been set.
func (o *LcsPrivacy) HasUpLocRepIndAf() bool {
	if o != nil && !IsNil(o.UpLocRepIndAf) {
		return true
	}

	return false
}

// SetUpLocRepIndAf gets a reference to the given UpLocRepIndAf and assigns it to the UpLocRepIndAf field.
func (o *LcsPrivacy) SetUpLocRepIndAf(v UpLocRepIndAf) {
	o.UpLocRepIndAf = &v
}

func (o LcsPrivacy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LcsPrivacy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AfInstanceId) {
		toSerialize["afInstanceId"] = o.AfInstanceId
	}
	if !IsNil(o.ReferenceId) {
		toSerialize["referenceId"] = o.ReferenceId
	}
	if !IsNil(o.Lpi) {
		toSerialize["lpi"] = o.Lpi
	}
	if !IsNil(o.MtcProviderInformation) {
		toSerialize["mtcProviderInformation"] = o.MtcProviderInformation
	}
	if !IsNil(o.EvtRptExpectedArea) {
		toSerialize["evtRptExpectedArea"] = o.EvtRptExpectedArea
	}
	if !IsNil(o.AreaUsageInd) {
		toSerialize["areaUsageInd"] = o.AreaUsageInd
	}
	if !IsNil(o.UpLocRepIndAf) {
		toSerialize["upLocRepIndAf"] = o.UpLocRepIndAf
	}
	return toSerialize, nil
}

type NullableLcsPrivacy struct {
	value *LcsPrivacy
	isSet bool
}

func (v NullableLcsPrivacy) Get() *LcsPrivacy {
	return v.value
}

func (v *NullableLcsPrivacy) Set(val *LcsPrivacy) {
	v.value = val
	v.isSet = true
}

func (v NullableLcsPrivacy) IsSet() bool {
	return v.isSet
}

func (v *NullableLcsPrivacy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLcsPrivacy(val *LcsPrivacy) *NullableLcsPrivacy {
	return &NullableLcsPrivacy{value: val, isSet: true}
}

func (v NullableLcsPrivacy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLcsPrivacy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


