/*
Nudm_SDM

Nudm Subscriber Data Management Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 2.3.0-alpha.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PlmnOperatorClass type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PlmnOperatorClass{}

// PlmnOperatorClass struct for PlmnOperatorClass
type PlmnOperatorClass struct {
	LcsClientClass LcsClientClass `json:"lcsClientClass"`
	LcsClientIds []string `json:"lcsClientIds"`
}

type _PlmnOperatorClass PlmnOperatorClass

// NewPlmnOperatorClass instantiates a new PlmnOperatorClass object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlmnOperatorClass(lcsClientClass LcsClientClass, lcsClientIds []string) *PlmnOperatorClass {
	this := PlmnOperatorClass{}
	this.LcsClientClass = lcsClientClass
	this.LcsClientIds = lcsClientIds
	return &this
}

// NewPlmnOperatorClassWithDefaults instantiates a new PlmnOperatorClass object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlmnOperatorClassWithDefaults() *PlmnOperatorClass {
	this := PlmnOperatorClass{}
	return &this
}

// GetLcsClientClass returns the LcsClientClass field value
func (o *PlmnOperatorClass) GetLcsClientClass() LcsClientClass {
	if o == nil {
		var ret LcsClientClass
		return ret
	}

	return o.LcsClientClass
}

// GetLcsClientClassOk returns a tuple with the LcsClientClass field value
// and a boolean to check if the value has been set.
func (o *PlmnOperatorClass) GetLcsClientClassOk() (*LcsClientClass, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LcsClientClass, true
}

// SetLcsClientClass sets field value
func (o *PlmnOperatorClass) SetLcsClientClass(v LcsClientClass) {
	o.LcsClientClass = v
}

// GetLcsClientIds returns the LcsClientIds field value
func (o *PlmnOperatorClass) GetLcsClientIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.LcsClientIds
}

// GetLcsClientIdsOk returns a tuple with the LcsClientIds field value
// and a boolean to check if the value has been set.
func (o *PlmnOperatorClass) GetLcsClientIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LcsClientIds, true
}

// SetLcsClientIds sets field value
func (o *PlmnOperatorClass) SetLcsClientIds(v []string) {
	o.LcsClientIds = v
}

func (o PlmnOperatorClass) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PlmnOperatorClass) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["lcsClientClass"] = o.LcsClientClass
	toSerialize["lcsClientIds"] = o.LcsClientIds
	return toSerialize, nil
}

func (o *PlmnOperatorClass) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"lcsClientClass",
		"lcsClientIds",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPlmnOperatorClass := _PlmnOperatorClass{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPlmnOperatorClass)

	if err != nil {
		return err
	}

	*o = PlmnOperatorClass(varPlmnOperatorClass)

	return err
}

type NullablePlmnOperatorClass struct {
	value *PlmnOperatorClass
	isSet bool
}

func (v NullablePlmnOperatorClass) Get() *PlmnOperatorClass {
	return v.value
}

func (v *NullablePlmnOperatorClass) Set(val *PlmnOperatorClass) {
	v.value = val
	v.isSet = true
}

func (v NullablePlmnOperatorClass) IsSet() bool {
	return v.isSet
}

func (v *NullablePlmnOperatorClass) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlmnOperatorClass(val *PlmnOperatorClass) *NullablePlmnOperatorClass {
	return &NullablePlmnOperatorClass{value: val, isSet: true}
}

func (v NullablePlmnOperatorClass) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlmnOperatorClass) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


