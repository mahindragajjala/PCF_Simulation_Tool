/*
Nudm_SDM

Nudm Subscriber Data Management Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 2.3.0-alpha.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AstiAllowedInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AstiAllowedInfo{}

// AstiAllowedInfo AF authorization information for ASTI
type AstiAllowedInfo struct {
	AstiAllowed bool `json:"astiAllowed"`
	CoverageArea []Tai `json:"coverageArea,omitempty"`
	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
	UuTimeSyncErrBdgt *int32 `json:"uuTimeSyncErrBdgt,omitempty"`
	TempVals []TemporalValidity `json:"tempVals,omitempty"`
}

type _AstiAllowedInfo AstiAllowedInfo

// NewAstiAllowedInfo instantiates a new AstiAllowedInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAstiAllowedInfo(astiAllowed bool) *AstiAllowedInfo {
	this := AstiAllowedInfo{}
	this.AstiAllowed = astiAllowed
	return &this
}

// NewAstiAllowedInfoWithDefaults instantiates a new AstiAllowedInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAstiAllowedInfoWithDefaults() *AstiAllowedInfo {
	this := AstiAllowedInfo{}
	return &this
}

// GetAstiAllowed returns the AstiAllowed field value
func (o *AstiAllowedInfo) GetAstiAllowed() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AstiAllowed
}

// GetAstiAllowedOk returns a tuple with the AstiAllowed field value
// and a boolean to check if the value has been set.
func (o *AstiAllowedInfo) GetAstiAllowedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AstiAllowed, true
}

// SetAstiAllowed sets field value
func (o *AstiAllowedInfo) SetAstiAllowed(v bool) {
	o.AstiAllowed = v
}

// GetCoverageArea returns the CoverageArea field value if set, zero value otherwise.
func (o *AstiAllowedInfo) GetCoverageArea() []Tai {
	if o == nil || IsNil(o.CoverageArea) {
		var ret []Tai
		return ret
	}
	return o.CoverageArea
}

// GetCoverageAreaOk returns a tuple with the CoverageArea field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AstiAllowedInfo) GetCoverageAreaOk() ([]Tai, bool) {
	if o == nil || IsNil(o.CoverageArea) {
		return nil, false
	}
	return o.CoverageArea, true
}

// HasCoverageArea returns a boolean if a field has been set.
func (o *AstiAllowedInfo) HasCoverageArea() bool {
	if o != nil && !IsNil(o.CoverageArea) {
		return true
	}

	return false
}

// SetCoverageArea gets a reference to the given []Tai and assigns it to the CoverageArea field.
func (o *AstiAllowedInfo) SetCoverageArea(v []Tai) {
	o.CoverageArea = v
}

// GetUuTimeSyncErrBdgt returns the UuTimeSyncErrBdgt field value if set, zero value otherwise.
func (o *AstiAllowedInfo) GetUuTimeSyncErrBdgt() int32 {
	if o == nil || IsNil(o.UuTimeSyncErrBdgt) {
		var ret int32
		return ret
	}
	return *o.UuTimeSyncErrBdgt
}

// GetUuTimeSyncErrBdgtOk returns a tuple with the UuTimeSyncErrBdgt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AstiAllowedInfo) GetUuTimeSyncErrBdgtOk() (*int32, bool) {
	if o == nil || IsNil(o.UuTimeSyncErrBdgt) {
		return nil, false
	}
	return o.UuTimeSyncErrBdgt, true
}

// HasUuTimeSyncErrBdgt returns a boolean if a field has been set.
func (o *AstiAllowedInfo) HasUuTimeSyncErrBdgt() bool {
	if o != nil && !IsNil(o.UuTimeSyncErrBdgt) {
		return true
	}

	return false
}

// SetUuTimeSyncErrBdgt gets a reference to the given int32 and assigns it to the UuTimeSyncErrBdgt field.
func (o *AstiAllowedInfo) SetUuTimeSyncErrBdgt(v int32) {
	o.UuTimeSyncErrBdgt = &v
}

// GetTempVals returns the TempVals field value if set, zero value otherwise.
func (o *AstiAllowedInfo) GetTempVals() []TemporalValidity {
	if o == nil || IsNil(o.TempVals) {
		var ret []TemporalValidity
		return ret
	}
	return o.TempVals
}

// GetTempValsOk returns a tuple with the TempVals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AstiAllowedInfo) GetTempValsOk() ([]TemporalValidity, bool) {
	if o == nil || IsNil(o.TempVals) {
		return nil, false
	}
	return o.TempVals, true
}

// HasTempVals returns a boolean if a field has been set.
func (o *AstiAllowedInfo) HasTempVals() bool {
	if o != nil && !IsNil(o.TempVals) {
		return true
	}

	return false
}

// SetTempVals gets a reference to the given []TemporalValidity and assigns it to the TempVals field.
func (o *AstiAllowedInfo) SetTempVals(v []TemporalValidity) {
	o.TempVals = v
}

func (o AstiAllowedInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AstiAllowedInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["astiAllowed"] = o.AstiAllowed
	if !IsNil(o.CoverageArea) {
		toSerialize["coverageArea"] = o.CoverageArea
	}
	if !IsNil(o.UuTimeSyncErrBdgt) {
		toSerialize["uuTimeSyncErrBdgt"] = o.UuTimeSyncErrBdgt
	}
	if !IsNil(o.TempVals) {
		toSerialize["tempVals"] = o.TempVals
	}
	return toSerialize, nil
}

func (o *AstiAllowedInfo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"astiAllowed",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAstiAllowedInfo := _AstiAllowedInfo{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAstiAllowedInfo)

	if err != nil {
		return err
	}

	*o = AstiAllowedInfo(varAstiAllowedInfo)

	return err
}

type NullableAstiAllowedInfo struct {
	value *AstiAllowedInfo
	isSet bool
}

func (v NullableAstiAllowedInfo) Get() *AstiAllowedInfo {
	return v.value
}

func (v *NullableAstiAllowedInfo) Set(val *AstiAllowedInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableAstiAllowedInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableAstiAllowedInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAstiAllowedInfo(val *AstiAllowedInfo) *NullableAstiAllowedInfo {
	return &NullableAstiAllowedInfo{value: val, isSet: true}
}

func (v NullableAstiAllowedInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAstiAllowedInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


