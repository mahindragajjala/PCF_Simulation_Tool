/*
Nudm_EE

Nudm Event Exposure Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.5
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GroupMembListChanges type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GroupMembListChanges{}

// GroupMembListChanges Represents information on the change(s) to a group's members list.
type GroupMembListChanges struct {
	AddedUEs []string `json:"addedUEs,omitempty"`
	RemovedUEs []string `json:"removedUEs,omitempty"`
}

// NewGroupMembListChanges instantiates a new GroupMembListChanges object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupMembListChanges() *GroupMembListChanges {
	this := GroupMembListChanges{}
	return &this
}

// NewGroupMembListChangesWithDefaults instantiates a new GroupMembListChanges object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupMembListChangesWithDefaults() *GroupMembListChanges {
	this := GroupMembListChanges{}
	return &this
}

// GetAddedUEs returns the AddedUEs field value if set, zero value otherwise.
func (o *GroupMembListChanges) GetAddedUEs() []string {
	if o == nil || IsNil(o.AddedUEs) {
		var ret []string
		return ret
	}
	return o.AddedUEs
}

// GetAddedUEsOk returns a tuple with the AddedUEs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupMembListChanges) GetAddedUEsOk() ([]string, bool) {
	if o == nil || IsNil(o.AddedUEs) {
		return nil, false
	}
	return o.AddedUEs, true
}

// HasAddedUEs returns a boolean if a field has been set.
func (o *GroupMembListChanges) HasAddedUEs() bool {
	if o != nil && !IsNil(o.AddedUEs) {
		return true
	}

	return false
}

// SetAddedUEs gets a reference to the given []string and assigns it to the AddedUEs field.
func (o *GroupMembListChanges) SetAddedUEs(v []string) {
	o.AddedUEs = v
}

// GetRemovedUEs returns the RemovedUEs field value if set, zero value otherwise.
func (o *GroupMembListChanges) GetRemovedUEs() []string {
	if o == nil || IsNil(o.RemovedUEs) {
		var ret []string
		return ret
	}
	return o.RemovedUEs
}

// GetRemovedUEsOk returns a tuple with the RemovedUEs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupMembListChanges) GetRemovedUEsOk() ([]string, bool) {
	if o == nil || IsNil(o.RemovedUEs) {
		return nil, false
	}
	return o.RemovedUEs, true
}

// HasRemovedUEs returns a boolean if a field has been set.
func (o *GroupMembListChanges) HasRemovedUEs() bool {
	if o != nil && !IsNil(o.RemovedUEs) {
		return true
	}

	return false
}

// SetRemovedUEs gets a reference to the given []string and assigns it to the RemovedUEs field.
func (o *GroupMembListChanges) SetRemovedUEs(v []string) {
	o.RemovedUEs = v
}

func (o GroupMembListChanges) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GroupMembListChanges) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AddedUEs) {
		toSerialize["addedUEs"] = o.AddedUEs
	}
	if !IsNil(o.RemovedUEs) {
		toSerialize["removedUEs"] = o.RemovedUEs
	}
	return toSerialize, nil
}

type NullableGroupMembListChanges struct {
	value *GroupMembListChanges
	isSet bool
}

func (v NullableGroupMembListChanges) Get() *GroupMembListChanges {
	return v.value
}

func (v *NullableGroupMembListChanges) Set(val *GroupMembListChanges) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupMembListChanges) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupMembListChanges) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupMembListChanges(val *GroupMembListChanges) *NullableGroupMembListChanges {
	return &NullableGroupMembListChanges{value: val, isSet: true}
}

func (v NullableGroupMembListChanges) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupMembListChanges) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


