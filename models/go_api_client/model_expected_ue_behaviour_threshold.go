/*
Nudm_SDM

Nudm Subscriber Data Management Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 2.3.0-alpha.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ExpectedUeBehaviourThreshold type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExpectedUeBehaviourThreshold{}

// ExpectedUeBehaviourThreshold struct for ExpectedUeBehaviourThreshold
type ExpectedUeBehaviourThreshold struct {
	ExpecedUeBehaviourDatasets []ExpecedUeBehaviourDataset `json:"expecedUeBehaviourDatasets,omitempty"`
	SingleNssais []Snssai `json:"singleNssais,omitempty"`
	Dnns []string `json:"dnns,omitempty"`
	ConfidenceLevel *string `json:"confidenceLevel,omitempty"`
	AccuracyLevel *string `json:"accuracyLevel,omitempty"`
}

// NewExpectedUeBehaviourThreshold instantiates a new ExpectedUeBehaviourThreshold object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExpectedUeBehaviourThreshold() *ExpectedUeBehaviourThreshold {
	this := ExpectedUeBehaviourThreshold{}
	return &this
}

// NewExpectedUeBehaviourThresholdWithDefaults instantiates a new ExpectedUeBehaviourThreshold object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExpectedUeBehaviourThresholdWithDefaults() *ExpectedUeBehaviourThreshold {
	this := ExpectedUeBehaviourThreshold{}
	return &this
}

// GetExpecedUeBehaviourDatasets returns the ExpecedUeBehaviourDatasets field value if set, zero value otherwise.
func (o *ExpectedUeBehaviourThreshold) GetExpecedUeBehaviourDatasets() []ExpecedUeBehaviourDataset {
	if o == nil || IsNil(o.ExpecedUeBehaviourDatasets) {
		var ret []ExpecedUeBehaviourDataset
		return ret
	}
	return o.ExpecedUeBehaviourDatasets
}

// GetExpecedUeBehaviourDatasetsOk returns a tuple with the ExpecedUeBehaviourDatasets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpectedUeBehaviourThreshold) GetExpecedUeBehaviourDatasetsOk() ([]ExpecedUeBehaviourDataset, bool) {
	if o == nil || IsNil(o.ExpecedUeBehaviourDatasets) {
		return nil, false
	}
	return o.ExpecedUeBehaviourDatasets, true
}

// HasExpecedUeBehaviourDatasets returns a boolean if a field has been set.
func (o *ExpectedUeBehaviourThreshold) HasExpecedUeBehaviourDatasets() bool {
	if o != nil && !IsNil(o.ExpecedUeBehaviourDatasets) {
		return true
	}

	return false
}

// SetExpecedUeBehaviourDatasets gets a reference to the given []ExpecedUeBehaviourDataset and assigns it to the ExpecedUeBehaviourDatasets field.
func (o *ExpectedUeBehaviourThreshold) SetExpecedUeBehaviourDatasets(v []ExpecedUeBehaviourDataset) {
	o.ExpecedUeBehaviourDatasets = v
}

// GetSingleNssais returns the SingleNssais field value if set, zero value otherwise.
func (o *ExpectedUeBehaviourThreshold) GetSingleNssais() []Snssai {
	if o == nil || IsNil(o.SingleNssais) {
		var ret []Snssai
		return ret
	}
	return o.SingleNssais
}

// GetSingleNssaisOk returns a tuple with the SingleNssais field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpectedUeBehaviourThreshold) GetSingleNssaisOk() ([]Snssai, bool) {
	if o == nil || IsNil(o.SingleNssais) {
		return nil, false
	}
	return o.SingleNssais, true
}

// HasSingleNssais returns a boolean if a field has been set.
func (o *ExpectedUeBehaviourThreshold) HasSingleNssais() bool {
	if o != nil && !IsNil(o.SingleNssais) {
		return true
	}

	return false
}

// SetSingleNssais gets a reference to the given []Snssai and assigns it to the SingleNssais field.
func (o *ExpectedUeBehaviourThreshold) SetSingleNssais(v []Snssai) {
	o.SingleNssais = v
}

// GetDnns returns the Dnns field value if set, zero value otherwise.
func (o *ExpectedUeBehaviourThreshold) GetDnns() []string {
	if o == nil || IsNil(o.Dnns) {
		var ret []string
		return ret
	}
	return o.Dnns
}

// GetDnnsOk returns a tuple with the Dnns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpectedUeBehaviourThreshold) GetDnnsOk() ([]string, bool) {
	if o == nil || IsNil(o.Dnns) {
		return nil, false
	}
	return o.Dnns, true
}

// HasDnns returns a boolean if a field has been set.
func (o *ExpectedUeBehaviourThreshold) HasDnns() bool {
	if o != nil && !IsNil(o.Dnns) {
		return true
	}

	return false
}

// SetDnns gets a reference to the given []string and assigns it to the Dnns field.
func (o *ExpectedUeBehaviourThreshold) SetDnns(v []string) {
	o.Dnns = v
}

// GetConfidenceLevel returns the ConfidenceLevel field value if set, zero value otherwise.
func (o *ExpectedUeBehaviourThreshold) GetConfidenceLevel() string {
	if o == nil || IsNil(o.ConfidenceLevel) {
		var ret string
		return ret
	}
	return *o.ConfidenceLevel
}

// GetConfidenceLevelOk returns a tuple with the ConfidenceLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpectedUeBehaviourThreshold) GetConfidenceLevelOk() (*string, bool) {
	if o == nil || IsNil(o.ConfidenceLevel) {
		return nil, false
	}
	return o.ConfidenceLevel, true
}

// HasConfidenceLevel returns a boolean if a field has been set.
func (o *ExpectedUeBehaviourThreshold) HasConfidenceLevel() bool {
	if o != nil && !IsNil(o.ConfidenceLevel) {
		return true
	}

	return false
}

// SetConfidenceLevel gets a reference to the given string and assigns it to the ConfidenceLevel field.
func (o *ExpectedUeBehaviourThreshold) SetConfidenceLevel(v string) {
	o.ConfidenceLevel = &v
}

// GetAccuracyLevel returns the AccuracyLevel field value if set, zero value otherwise.
func (o *ExpectedUeBehaviourThreshold) GetAccuracyLevel() string {
	if o == nil || IsNil(o.AccuracyLevel) {
		var ret string
		return ret
	}
	return *o.AccuracyLevel
}

// GetAccuracyLevelOk returns a tuple with the AccuracyLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpectedUeBehaviourThreshold) GetAccuracyLevelOk() (*string, bool) {
	if o == nil || IsNil(o.AccuracyLevel) {
		return nil, false
	}
	return o.AccuracyLevel, true
}

// HasAccuracyLevel returns a boolean if a field has been set.
func (o *ExpectedUeBehaviourThreshold) HasAccuracyLevel() bool {
	if o != nil && !IsNil(o.AccuracyLevel) {
		return true
	}

	return false
}

// SetAccuracyLevel gets a reference to the given string and assigns it to the AccuracyLevel field.
func (o *ExpectedUeBehaviourThreshold) SetAccuracyLevel(v string) {
	o.AccuracyLevel = &v
}

func (o ExpectedUeBehaviourThreshold) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExpectedUeBehaviourThreshold) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExpecedUeBehaviourDatasets) {
		toSerialize["expecedUeBehaviourDatasets"] = o.ExpecedUeBehaviourDatasets
	}
	if !IsNil(o.SingleNssais) {
		toSerialize["singleNssais"] = o.SingleNssais
	}
	if !IsNil(o.Dnns) {
		toSerialize["dnns"] = o.Dnns
	}
	if !IsNil(o.ConfidenceLevel) {
		toSerialize["confidenceLevel"] = o.ConfidenceLevel
	}
	if !IsNil(o.AccuracyLevel) {
		toSerialize["accuracyLevel"] = o.AccuracyLevel
	}
	return toSerialize, nil
}

type NullableExpectedUeBehaviourThreshold struct {
	value *ExpectedUeBehaviourThreshold
	isSet bool
}

func (v NullableExpectedUeBehaviourThreshold) Get() *ExpectedUeBehaviourThreshold {
	return v.value
}

func (v *NullableExpectedUeBehaviourThreshold) Set(val *ExpectedUeBehaviourThreshold) {
	v.value = val
	v.isSet = true
}

func (v NullableExpectedUeBehaviourThreshold) IsSet() bool {
	return v.isSet
}

func (v *NullableExpectedUeBehaviourThreshold) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExpectedUeBehaviourThreshold(val *ExpectedUeBehaviourThreshold) *NullableExpectedUeBehaviourThreshold {
	return &NullableExpectedUeBehaviourThreshold{value: val, isSet: true}
}

func (v NullableExpectedUeBehaviourThreshold) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExpectedUeBehaviourThreshold) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


