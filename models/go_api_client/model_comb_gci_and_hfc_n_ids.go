/*
Nudm_SDM

Nudm Subscriber Data Management Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 2.3.0-alpha.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CombGciAndHfcNIds type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CombGciAndHfcNIds{}

// CombGciAndHfcNIds struct for CombGciAndHfcNIds
type CombGciAndHfcNIds struct {
	// Global Cable Identifier uniquely identifying the connection between the 5G-CRG or FN-CRG to the 5GS. See clause 28.15.4 of 3GPP TS 23.003. This shall be encoded as a string per clause 28.15.4 of 3GPP TS 23.003, and compliant with the syntax specified  in clause 2.2  of IETF RFC 7542 for the username part of a NAI. The GCI value is specified in CableLabs WR-TR-5WWC-ARCH. 
	GlobalCableId *string `json:"globalCableId,omitempty"`
	// This IE represents the identifier of the HFC node Id as specified in CableLabs WR-TR-5WWC-ARCH. It is provisioned by the wireline operator as part of wireline operations and may contain up to six characters. 
	HfcNId *string `json:"hfcNId,omitempty"`
}

// NewCombGciAndHfcNIds instantiates a new CombGciAndHfcNIds object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCombGciAndHfcNIds() *CombGciAndHfcNIds {
	this := CombGciAndHfcNIds{}
	return &this
}

// NewCombGciAndHfcNIdsWithDefaults instantiates a new CombGciAndHfcNIds object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCombGciAndHfcNIdsWithDefaults() *CombGciAndHfcNIds {
	this := CombGciAndHfcNIds{}
	return &this
}

// GetGlobalCableId returns the GlobalCableId field value if set, zero value otherwise.
func (o *CombGciAndHfcNIds) GetGlobalCableId() string {
	if o == nil || IsNil(o.GlobalCableId) {
		var ret string
		return ret
	}
	return *o.GlobalCableId
}

// GetGlobalCableIdOk returns a tuple with the GlobalCableId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CombGciAndHfcNIds) GetGlobalCableIdOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalCableId) {
		return nil, false
	}
	return o.GlobalCableId, true
}

// HasGlobalCableId returns a boolean if a field has been set.
func (o *CombGciAndHfcNIds) HasGlobalCableId() bool {
	if o != nil && !IsNil(o.GlobalCableId) {
		return true
	}

	return false
}

// SetGlobalCableId gets a reference to the given string and assigns it to the GlobalCableId field.
func (o *CombGciAndHfcNIds) SetGlobalCableId(v string) {
	o.GlobalCableId = &v
}

// GetHfcNId returns the HfcNId field value if set, zero value otherwise.
func (o *CombGciAndHfcNIds) GetHfcNId() string {
	if o == nil || IsNil(o.HfcNId) {
		var ret string
		return ret
	}
	return *o.HfcNId
}

// GetHfcNIdOk returns a tuple with the HfcNId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CombGciAndHfcNIds) GetHfcNIdOk() (*string, bool) {
	if o == nil || IsNil(o.HfcNId) {
		return nil, false
	}
	return o.HfcNId, true
}

// HasHfcNId returns a boolean if a field has been set.
func (o *CombGciAndHfcNIds) HasHfcNId() bool {
	if o != nil && !IsNil(o.HfcNId) {
		return true
	}

	return false
}

// SetHfcNId gets a reference to the given string and assigns it to the HfcNId field.
func (o *CombGciAndHfcNIds) SetHfcNId(v string) {
	o.HfcNId = &v
}

func (o CombGciAndHfcNIds) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CombGciAndHfcNIds) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GlobalCableId) {
		toSerialize["globalCableId"] = o.GlobalCableId
	}
	if !IsNil(o.HfcNId) {
		toSerialize["hfcNId"] = o.HfcNId
	}
	return toSerialize, nil
}

type NullableCombGciAndHfcNIds struct {
	value *CombGciAndHfcNIds
	isSet bool
}

func (v NullableCombGciAndHfcNIds) Get() *CombGciAndHfcNIds {
	return v.value
}

func (v *NullableCombGciAndHfcNIds) Set(val *CombGciAndHfcNIds) {
	v.value = val
	v.isSet = true
}

func (v NullableCombGciAndHfcNIds) IsSet() bool {
	return v.isSet
}

func (v *NullableCombGciAndHfcNIds) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCombGciAndHfcNIds(val *CombGciAndHfcNIds) *NullableCombGciAndHfcNIds {
	return &NullableCombGciAndHfcNIds{value: val, isSet: true}
}

func (v NullableCombGciAndHfcNIds) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCombGciAndHfcNIds) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


