/*
Nudm_SDM

Nudm Subscriber Data Management Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 2.3.0-alpha.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the A2xSubscriptionData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &A2xSubscriptionData{}

// A2xSubscriptionData struct for A2xSubscriptionData
type A2xSubscriptionData struct {
	NrA2xServicesAuth *NrA2xAuth `json:"nrA2xServicesAuth,omitempty"`
	LteA2xServicesAuth *LteA2xAuth `json:"lteA2xServicesAuth,omitempty"`
	// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". 
	NrUePc5Ambr *string `json:"nrUePc5Ambr,omitempty" validate:"regexp=^\\\\d+(\\\\.\\\\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$"`
	// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". 
	LtePc5Ambr *string `json:"ltePc5Ambr,omitempty" validate:"regexp=^\\\\d+(\\\\.\\\\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$"`
}

// NewA2xSubscriptionData instantiates a new A2xSubscriptionData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewA2xSubscriptionData() *A2xSubscriptionData {
	this := A2xSubscriptionData{}
	return &this
}

// NewA2xSubscriptionDataWithDefaults instantiates a new A2xSubscriptionData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewA2xSubscriptionDataWithDefaults() *A2xSubscriptionData {
	this := A2xSubscriptionData{}
	return &this
}

// GetNrA2xServicesAuth returns the NrA2xServicesAuth field value if set, zero value otherwise.
func (o *A2xSubscriptionData) GetNrA2xServicesAuth() NrA2xAuth {
	if o == nil || IsNil(o.NrA2xServicesAuth) {
		var ret NrA2xAuth
		return ret
	}
	return *o.NrA2xServicesAuth
}

// GetNrA2xServicesAuthOk returns a tuple with the NrA2xServicesAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *A2xSubscriptionData) GetNrA2xServicesAuthOk() (*NrA2xAuth, bool) {
	if o == nil || IsNil(o.NrA2xServicesAuth) {
		return nil, false
	}
	return o.NrA2xServicesAuth, true
}

// HasNrA2xServicesAuth returns a boolean if a field has been set.
func (o *A2xSubscriptionData) HasNrA2xServicesAuth() bool {
	if o != nil && !IsNil(o.NrA2xServicesAuth) {
		return true
	}

	return false
}

// SetNrA2xServicesAuth gets a reference to the given NrA2xAuth and assigns it to the NrA2xServicesAuth field.
func (o *A2xSubscriptionData) SetNrA2xServicesAuth(v NrA2xAuth) {
	o.NrA2xServicesAuth = &v
}

// GetLteA2xServicesAuth returns the LteA2xServicesAuth field value if set, zero value otherwise.
func (o *A2xSubscriptionData) GetLteA2xServicesAuth() LteA2xAuth {
	if o == nil || IsNil(o.LteA2xServicesAuth) {
		var ret LteA2xAuth
		return ret
	}
	return *o.LteA2xServicesAuth
}

// GetLteA2xServicesAuthOk returns a tuple with the LteA2xServicesAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *A2xSubscriptionData) GetLteA2xServicesAuthOk() (*LteA2xAuth, bool) {
	if o == nil || IsNil(o.LteA2xServicesAuth) {
		return nil, false
	}
	return o.LteA2xServicesAuth, true
}

// HasLteA2xServicesAuth returns a boolean if a field has been set.
func (o *A2xSubscriptionData) HasLteA2xServicesAuth() bool {
	if o != nil && !IsNil(o.LteA2xServicesAuth) {
		return true
	}

	return false
}

// SetLteA2xServicesAuth gets a reference to the given LteA2xAuth and assigns it to the LteA2xServicesAuth field.
func (o *A2xSubscriptionData) SetLteA2xServicesAuth(v LteA2xAuth) {
	o.LteA2xServicesAuth = &v
}

// GetNrUePc5Ambr returns the NrUePc5Ambr field value if set, zero value otherwise.
func (o *A2xSubscriptionData) GetNrUePc5Ambr() string {
	if o == nil || IsNil(o.NrUePc5Ambr) {
		var ret string
		return ret
	}
	return *o.NrUePc5Ambr
}

// GetNrUePc5AmbrOk returns a tuple with the NrUePc5Ambr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *A2xSubscriptionData) GetNrUePc5AmbrOk() (*string, bool) {
	if o == nil || IsNil(o.NrUePc5Ambr) {
		return nil, false
	}
	return o.NrUePc5Ambr, true
}

// HasNrUePc5Ambr returns a boolean if a field has been set.
func (o *A2xSubscriptionData) HasNrUePc5Ambr() bool {
	if o != nil && !IsNil(o.NrUePc5Ambr) {
		return true
	}

	return false
}

// SetNrUePc5Ambr gets a reference to the given string and assigns it to the NrUePc5Ambr field.
func (o *A2xSubscriptionData) SetNrUePc5Ambr(v string) {
	o.NrUePc5Ambr = &v
}

// GetLtePc5Ambr returns the LtePc5Ambr field value if set, zero value otherwise.
func (o *A2xSubscriptionData) GetLtePc5Ambr() string {
	if o == nil || IsNil(o.LtePc5Ambr) {
		var ret string
		return ret
	}
	return *o.LtePc5Ambr
}

// GetLtePc5AmbrOk returns a tuple with the LtePc5Ambr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *A2xSubscriptionData) GetLtePc5AmbrOk() (*string, bool) {
	if o == nil || IsNil(o.LtePc5Ambr) {
		return nil, false
	}
	return o.LtePc5Ambr, true
}

// HasLtePc5Ambr returns a boolean if a field has been set.
func (o *A2xSubscriptionData) HasLtePc5Ambr() bool {
	if o != nil && !IsNil(o.LtePc5Ambr) {
		return true
	}

	return false
}

// SetLtePc5Ambr gets a reference to the given string and assigns it to the LtePc5Ambr field.
func (o *A2xSubscriptionData) SetLtePc5Ambr(v string) {
	o.LtePc5Ambr = &v
}

func (o A2xSubscriptionData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o A2xSubscriptionData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NrA2xServicesAuth) {
		toSerialize["nrA2xServicesAuth"] = o.NrA2xServicesAuth
	}
	if !IsNil(o.LteA2xServicesAuth) {
		toSerialize["lteA2xServicesAuth"] = o.LteA2xServicesAuth
	}
	if !IsNil(o.NrUePc5Ambr) {
		toSerialize["nrUePc5Ambr"] = o.NrUePc5Ambr
	}
	if !IsNil(o.LtePc5Ambr) {
		toSerialize["ltePc5Ambr"] = o.LtePc5Ambr
	}
	return toSerialize, nil
}

type NullableA2xSubscriptionData struct {
	value *A2xSubscriptionData
	isSet bool
}

func (v NullableA2xSubscriptionData) Get() *A2xSubscriptionData {
	return v.value
}

func (v *NullableA2xSubscriptionData) Set(val *A2xSubscriptionData) {
	v.value = val
	v.isSet = true
}

func (v NullableA2xSubscriptionData) IsSet() bool {
	return v.isSet
}

func (v *NullableA2xSubscriptionData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableA2xSubscriptionData(val *A2xSubscriptionData) *NullableA2xSubscriptionData {
	return &NullableA2xSubscriptionData{value: val, isSet: true}
}

func (v NullableA2xSubscriptionData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableA2xSubscriptionData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


