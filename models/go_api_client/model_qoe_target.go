/*
Nudm_SDM

Nudm Subscriber Data Management Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 2.3.0-alpha.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the QoeTarget type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QoeTarget{}

// QoeTarget This parameter specifies the target object (individual UE) for the QMC in case of signalling based QMC. It shall be able to carry an IMSI or a SUPI. 
type QoeTarget struct {
	// String identifying a Supi that shall contain either an IMSI, a network specific identifier, a Global Cable Identifier (GCI) or a Global Line Identifier (GLI) as specified in clause  2.2A of 3GPP TS 23.003. It shall be formatted as follows  - for an IMSI \"imsi-<imsi>\", where <imsi> shall be formatted according to clause 2.2    of 3GPP TS 23.003 that describes an IMSI.  - for a network specific identifier \"nai-<nai>, where <nai> shall be formatted    according to clause 28.7.2 of 3GPP TS 23.003 that describes an NAI.  - for a GCI \"gci-<gci>\", where <gci> shall be formatted according to clause 28.15.2    of 3GPP TS 23.003.  - for a GLI \"gli-<gli>\", where <gli> shall be formatted according to clause 28.16.2 of    3GPP TS 23.003.To enable that the value is used as part of an URI, the string shall    only contain characters allowed according to the \"lower-with-hyphen\" naming convention    defined in 3GPP TS 29.501. 
	Supi *string `json:"supi,omitempty" validate:"regexp=^(imsi-[0-9]{5,15}|nai-.+|gci-.+|gli-.+|.+)$"`
	// String identifying an IMSI
	Imsi *string `json:"imsi,omitempty" validate:"regexp=^[0-9]{5,15}$"`
}

// NewQoeTarget instantiates a new QoeTarget object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQoeTarget() *QoeTarget {
	this := QoeTarget{}
	return &this
}

// NewQoeTargetWithDefaults instantiates a new QoeTarget object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQoeTargetWithDefaults() *QoeTarget {
	this := QoeTarget{}
	return &this
}

// GetSupi returns the Supi field value if set, zero value otherwise.
func (o *QoeTarget) GetSupi() string {
	if o == nil || IsNil(o.Supi) {
		var ret string
		return ret
	}
	return *o.Supi
}

// GetSupiOk returns a tuple with the Supi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QoeTarget) GetSupiOk() (*string, bool) {
	if o == nil || IsNil(o.Supi) {
		return nil, false
	}
	return o.Supi, true
}

// HasSupi returns a boolean if a field has been set.
func (o *QoeTarget) HasSupi() bool {
	if o != nil && !IsNil(o.Supi) {
		return true
	}

	return false
}

// SetSupi gets a reference to the given string and assigns it to the Supi field.
func (o *QoeTarget) SetSupi(v string) {
	o.Supi = &v
}

// GetImsi returns the Imsi field value if set, zero value otherwise.
func (o *QoeTarget) GetImsi() string {
	if o == nil || IsNil(o.Imsi) {
		var ret string
		return ret
	}
	return *o.Imsi
}

// GetImsiOk returns a tuple with the Imsi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QoeTarget) GetImsiOk() (*string, bool) {
	if o == nil || IsNil(o.Imsi) {
		return nil, false
	}
	return o.Imsi, true
}

// HasImsi returns a boolean if a field has been set.
func (o *QoeTarget) HasImsi() bool {
	if o != nil && !IsNil(o.Imsi) {
		return true
	}

	return false
}

// SetImsi gets a reference to the given string and assigns it to the Imsi field.
func (o *QoeTarget) SetImsi(v string) {
	o.Imsi = &v
}

func (o QoeTarget) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QoeTarget) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Supi) {
		toSerialize["supi"] = o.Supi
	}
	if !IsNil(o.Imsi) {
		toSerialize["imsi"] = o.Imsi
	}
	return toSerialize, nil
}

type NullableQoeTarget struct {
	value *QoeTarget
	isSet bool
}

func (v NullableQoeTarget) Get() *QoeTarget {
	return v.value
}

func (v *NullableQoeTarget) Set(val *QoeTarget) {
	v.value = val
	v.isSet = true
}

func (v NullableQoeTarget) IsSet() bool {
	return v.isSet
}

func (v *NullableQoeTarget) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQoeTarget(val *QoeTarget) *NullableQoeTarget {
	return &NullableQoeTarget{value: val, isSet: true}
}

func (v NullableQoeTarget) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQoeTarget) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


