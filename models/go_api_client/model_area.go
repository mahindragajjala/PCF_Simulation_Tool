/*
Nudm_SDM

Nudm Subscriber Data Management Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 2.3.0-alpha.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Area type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Area{}

// Area Provides area information.
type Area struct {
	Tacs []string `json:"tacs,omitempty"`
	// Values are operator specific.
	AreaCode *string `json:"areaCode,omitempty"`
}

// NewArea instantiates a new Area object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArea() *Area {
	this := Area{}
	return &this
}

// NewAreaWithDefaults instantiates a new Area object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAreaWithDefaults() *Area {
	this := Area{}
	return &this
}

// GetTacs returns the Tacs field value if set, zero value otherwise.
func (o *Area) GetTacs() []string {
	if o == nil || IsNil(o.Tacs) {
		var ret []string
		return ret
	}
	return o.Tacs
}

// GetTacsOk returns a tuple with the Tacs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Area) GetTacsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tacs) {
		return nil, false
	}
	return o.Tacs, true
}

// HasTacs returns a boolean if a field has been set.
func (o *Area) HasTacs() bool {
	if o != nil && !IsNil(o.Tacs) {
		return true
	}

	return false
}

// SetTacs gets a reference to the given []string and assigns it to the Tacs field.
func (o *Area) SetTacs(v []string) {
	o.Tacs = v
}

// GetAreaCode returns the AreaCode field value if set, zero value otherwise.
func (o *Area) GetAreaCode() string {
	if o == nil || IsNil(o.AreaCode) {
		var ret string
		return ret
	}
	return *o.AreaCode
}

// GetAreaCodeOk returns a tuple with the AreaCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Area) GetAreaCodeOk() (*string, bool) {
	if o == nil || IsNil(o.AreaCode) {
		return nil, false
	}
	return o.AreaCode, true
}

// HasAreaCode returns a boolean if a field has been set.
func (o *Area) HasAreaCode() bool {
	if o != nil && !IsNil(o.AreaCode) {
		return true
	}

	return false
}

// SetAreaCode gets a reference to the given string and assigns it to the AreaCode field.
func (o *Area) SetAreaCode(v string) {
	o.AreaCode = &v
}

func (o Area) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Area) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tacs) {
		toSerialize["tacs"] = o.Tacs
	}
	if !IsNil(o.AreaCode) {
		toSerialize["areaCode"] = o.AreaCode
	}
	return toSerialize, nil
}

type NullableArea struct {
	value *Area
	isSet bool
}

func (v NullableArea) Get() *Area {
	return v.value
}

func (v *NullableArea) Set(val *Area) {
	v.value = val
	v.isSet = true
}

func (v NullableArea) IsSet() bool {
	return v.isSet
}

func (v *NullableArea) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArea(val *Area) *NullableArea {
	return &NullableArea{value: val, isSet: true}
}

func (v NullableArea) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArea) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


