/*
Nudm_SDM

Nudm Subscriber Data Management Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 2.3.0-alpha.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RangingSlPosPlmn type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RangingSlPosPlmn{}

// RangingSlPosPlmn Contains the PLMN identities where the Ranging/SL Positioning services are authorised to use and the authorised Ranging/SL Positioning services on this given PLMNs.
type RangingSlPosPlmn struct {
	RangingSlPosPlmn PlmnId `json:"rangingSlPosPlmn"`
	RangingSlPosAllowed []RangingSlPosAllowed `json:"rangingSlPosAllowed,omitempty"`
}

type _RangingSlPosPlmn RangingSlPosPlmn

// NewRangingSlPosPlmn instantiates a new RangingSlPosPlmn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRangingSlPosPlmn(rangingSlPosPlmn PlmnId) *RangingSlPosPlmn {
	this := RangingSlPosPlmn{}
	this.RangingSlPosPlmn = rangingSlPosPlmn
	return &this
}

// NewRangingSlPosPlmnWithDefaults instantiates a new RangingSlPosPlmn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRangingSlPosPlmnWithDefaults() *RangingSlPosPlmn {
	this := RangingSlPosPlmn{}
	return &this
}

// GetRangingSlPosPlmn returns the RangingSlPosPlmn field value
func (o *RangingSlPosPlmn) GetRangingSlPosPlmn() PlmnId {
	if o == nil {
		var ret PlmnId
		return ret
	}

	return o.RangingSlPosPlmn
}

// GetRangingSlPosPlmnOk returns a tuple with the RangingSlPosPlmn field value
// and a boolean to check if the value has been set.
func (o *RangingSlPosPlmn) GetRangingSlPosPlmnOk() (*PlmnId, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RangingSlPosPlmn, true
}

// SetRangingSlPosPlmn sets field value
func (o *RangingSlPosPlmn) SetRangingSlPosPlmn(v PlmnId) {
	o.RangingSlPosPlmn = v
}

// GetRangingSlPosAllowed returns the RangingSlPosAllowed field value if set, zero value otherwise.
func (o *RangingSlPosPlmn) GetRangingSlPosAllowed() []RangingSlPosAllowed {
	if o == nil || IsNil(o.RangingSlPosAllowed) {
		var ret []RangingSlPosAllowed
		return ret
	}
	return o.RangingSlPosAllowed
}

// GetRangingSlPosAllowedOk returns a tuple with the RangingSlPosAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RangingSlPosPlmn) GetRangingSlPosAllowedOk() ([]RangingSlPosAllowed, bool) {
	if o == nil || IsNil(o.RangingSlPosAllowed) {
		return nil, false
	}
	return o.RangingSlPosAllowed, true
}

// HasRangingSlPosAllowed returns a boolean if a field has been set.
func (o *RangingSlPosPlmn) HasRangingSlPosAllowed() bool {
	if o != nil && !IsNil(o.RangingSlPosAllowed) {
		return true
	}

	return false
}

// SetRangingSlPosAllowed gets a reference to the given []RangingSlPosAllowed and assigns it to the RangingSlPosAllowed field.
func (o *RangingSlPosPlmn) SetRangingSlPosAllowed(v []RangingSlPosAllowed) {
	o.RangingSlPosAllowed = v
}

func (o RangingSlPosPlmn) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RangingSlPosPlmn) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["rangingSlPosPlmn"] = o.RangingSlPosPlmn
	if !IsNil(o.RangingSlPosAllowed) {
		toSerialize["rangingSlPosAllowed"] = o.RangingSlPosAllowed
	}
	return toSerialize, nil
}

func (o *RangingSlPosPlmn) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"rangingSlPosPlmn",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRangingSlPosPlmn := _RangingSlPosPlmn{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRangingSlPosPlmn)

	if err != nil {
		return err
	}

	*o = RangingSlPosPlmn(varRangingSlPosPlmn)

	return err
}

type NullableRangingSlPosPlmn struct {
	value *RangingSlPosPlmn
	isSet bool
}

func (v NullableRangingSlPosPlmn) Get() *RangingSlPosPlmn {
	return v.value
}

func (v *NullableRangingSlPosPlmn) Set(val *RangingSlPosPlmn) {
	v.value = val
	v.isSet = true
}

func (v NullableRangingSlPosPlmn) IsSet() bool {
	return v.isSet
}

func (v *NullableRangingSlPosPlmn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRangingSlPosPlmn(val *RangingSlPosPlmn) *NullableRangingSlPosPlmn {
	return &NullableRangingSlPosPlmn{value: val, isSet: true}
}

func (v NullableRangingSlPosPlmn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRangingSlPosPlmn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


