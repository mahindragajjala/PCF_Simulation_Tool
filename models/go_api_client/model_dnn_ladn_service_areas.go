/*
Nudm_SDM

Nudm Subscriber Data Management Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 2.3.0-alpha.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DnnLadnServiceAreas type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DnnLadnServiceAreas{}

// DnnLadnServiceAreas struct for DnnLadnServiceAreas
type DnnLadnServiceAreas struct {
	DnnLadnServiceAreas []DnnLadnServiceArea `json:"dnnLadnServiceAreas"`
}

type _DnnLadnServiceAreas DnnLadnServiceAreas

// NewDnnLadnServiceAreas instantiates a new DnnLadnServiceAreas object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDnnLadnServiceAreas(dnnLadnServiceAreas []DnnLadnServiceArea) *DnnLadnServiceAreas {
	this := DnnLadnServiceAreas{}
	this.DnnLadnServiceAreas = dnnLadnServiceAreas
	return &this
}

// NewDnnLadnServiceAreasWithDefaults instantiates a new DnnLadnServiceAreas object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDnnLadnServiceAreasWithDefaults() *DnnLadnServiceAreas {
	this := DnnLadnServiceAreas{}
	return &this
}

// GetDnnLadnServiceAreas returns the DnnLadnServiceAreas field value
func (o *DnnLadnServiceAreas) GetDnnLadnServiceAreas() []DnnLadnServiceArea {
	if o == nil {
		var ret []DnnLadnServiceArea
		return ret
	}

	return o.DnnLadnServiceAreas
}

// GetDnnLadnServiceAreasOk returns a tuple with the DnnLadnServiceAreas field value
// and a boolean to check if the value has been set.
func (o *DnnLadnServiceAreas) GetDnnLadnServiceAreasOk() ([]DnnLadnServiceArea, bool) {
	if o == nil {
		return nil, false
	}
	return o.DnnLadnServiceAreas, true
}

// SetDnnLadnServiceAreas sets field value
func (o *DnnLadnServiceAreas) SetDnnLadnServiceAreas(v []DnnLadnServiceArea) {
	o.DnnLadnServiceAreas = v
}

func (o DnnLadnServiceAreas) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DnnLadnServiceAreas) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dnnLadnServiceAreas"] = o.DnnLadnServiceAreas
	return toSerialize, nil
}

func (o *DnnLadnServiceAreas) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dnnLadnServiceAreas",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDnnLadnServiceAreas := _DnnLadnServiceAreas{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDnnLadnServiceAreas)

	if err != nil {
		return err
	}

	*o = DnnLadnServiceAreas(varDnnLadnServiceAreas)

	return err
}

type NullableDnnLadnServiceAreas struct {
	value *DnnLadnServiceAreas
	isSet bool
}

func (v NullableDnnLadnServiceAreas) Get() *DnnLadnServiceAreas {
	return v.value
}

func (v *NullableDnnLadnServiceAreas) Set(val *DnnLadnServiceAreas) {
	v.value = val
	v.isSet = true
}

func (v NullableDnnLadnServiceAreas) IsSet() bool {
	return v.isSet
}

func (v *NullableDnnLadnServiceAreas) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDnnLadnServiceAreas(val *DnnLadnServiceAreas) *NullableDnnLadnServiceAreas {
	return &NullableDnnLadnServiceAreas{value: val, isSet: true}
}

func (v NullableDnnLadnServiceAreas) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDnnLadnServiceAreas) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


