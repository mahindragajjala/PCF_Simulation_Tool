/*
Nudm_SDM

Nudm Subscriber Data Management Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 2.3.0-alpha.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TimeSyncSubscriptionData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimeSyncSubscriptionData{}

// TimeSyncSubscriptionData UE Time Synchronization Subscription Data
type TimeSyncSubscriptionData struct {
	AfReqAuthorizations NullableAfRequestAuthorization `json:"afReqAuthorizations"`
	ServiceIds []TimeSyncServiceId `json:"serviceIds"`
}

type _TimeSyncSubscriptionData TimeSyncSubscriptionData

// NewTimeSyncSubscriptionData instantiates a new TimeSyncSubscriptionData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimeSyncSubscriptionData(afReqAuthorizations NullableAfRequestAuthorization, serviceIds []TimeSyncServiceId) *TimeSyncSubscriptionData {
	this := TimeSyncSubscriptionData{}
	this.AfReqAuthorizations = afReqAuthorizations
	this.ServiceIds = serviceIds
	return &this
}

// NewTimeSyncSubscriptionDataWithDefaults instantiates a new TimeSyncSubscriptionData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimeSyncSubscriptionDataWithDefaults() *TimeSyncSubscriptionData {
	this := TimeSyncSubscriptionData{}
	return &this
}

// GetAfReqAuthorizations returns the AfReqAuthorizations field value
// If the value is explicit nil, the zero value for AfRequestAuthorization will be returned
func (o *TimeSyncSubscriptionData) GetAfReqAuthorizations() AfRequestAuthorization {
	if o == nil || o.AfReqAuthorizations.Get() == nil {
		var ret AfRequestAuthorization
		return ret
	}

	return *o.AfReqAuthorizations.Get()
}

// GetAfReqAuthorizationsOk returns a tuple with the AfReqAuthorizations field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimeSyncSubscriptionData) GetAfReqAuthorizationsOk() (*AfRequestAuthorization, bool) {
	if o == nil {
		return nil, false
	}
	return o.AfReqAuthorizations.Get(), o.AfReqAuthorizations.IsSet()
}

// SetAfReqAuthorizations sets field value
func (o *TimeSyncSubscriptionData) SetAfReqAuthorizations(v AfRequestAuthorization) {
	o.AfReqAuthorizations.Set(&v)
}

// GetServiceIds returns the ServiceIds field value
func (o *TimeSyncSubscriptionData) GetServiceIds() []TimeSyncServiceId {
	if o == nil {
		var ret []TimeSyncServiceId
		return ret
	}

	return o.ServiceIds
}

// GetServiceIdsOk returns a tuple with the ServiceIds field value
// and a boolean to check if the value has been set.
func (o *TimeSyncSubscriptionData) GetServiceIdsOk() ([]TimeSyncServiceId, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceIds, true
}

// SetServiceIds sets field value
func (o *TimeSyncSubscriptionData) SetServiceIds(v []TimeSyncServiceId) {
	o.ServiceIds = v
}

func (o TimeSyncSubscriptionData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimeSyncSubscriptionData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["afReqAuthorizations"] = o.AfReqAuthorizations.Get()
	toSerialize["serviceIds"] = o.ServiceIds
	return toSerialize, nil
}

func (o *TimeSyncSubscriptionData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"afReqAuthorizations",
		"serviceIds",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTimeSyncSubscriptionData := _TimeSyncSubscriptionData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTimeSyncSubscriptionData)

	if err != nil {
		return err
	}

	*o = TimeSyncSubscriptionData(varTimeSyncSubscriptionData)

	return err
}

type NullableTimeSyncSubscriptionData struct {
	value *TimeSyncSubscriptionData
	isSet bool
}

func (v NullableTimeSyncSubscriptionData) Get() *TimeSyncSubscriptionData {
	return v.value
}

func (v *NullableTimeSyncSubscriptionData) Set(val *TimeSyncSubscriptionData) {
	v.value = val
	v.isSet = true
}

func (v NullableTimeSyncSubscriptionData) IsSet() bool {
	return v.isSet
}

func (v *NullableTimeSyncSubscriptionData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimeSyncSubscriptionData(val *TimeSyncSubscriptionData) *NullableTimeSyncSubscriptionData {
	return &NullableTimeSyncSubscriptionData{value: val, isSet: true}
}

func (v NullableTimeSyncSubscriptionData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimeSyncSubscriptionData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


