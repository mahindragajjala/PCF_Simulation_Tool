/*
Nudm_SDM

Nudm Subscriber Data Management Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 2.3.0-alpha.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RangingSlPosSubscriptionData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RangingSlPosSubscriptionData{}

// RangingSlPosSubscriptionData Contains the Ranging/SL positioning Subscription Data.
type RangingSlPosSubscriptionData struct {
	RangingSlPosAuth *RangingSlPosAuth `json:"rangingSlPosAuth,omitempty"`
	RangingSlPosPlmn []RangingSlPosPlmn `json:"rangingSlPosPlmn,omitempty"`
	RangingSlPosQos *RangingSlPosQos `json:"rangingSlPosQos,omitempty"`
}

// NewRangingSlPosSubscriptionData instantiates a new RangingSlPosSubscriptionData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRangingSlPosSubscriptionData() *RangingSlPosSubscriptionData {
	this := RangingSlPosSubscriptionData{}
	return &this
}

// NewRangingSlPosSubscriptionDataWithDefaults instantiates a new RangingSlPosSubscriptionData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRangingSlPosSubscriptionDataWithDefaults() *RangingSlPosSubscriptionData {
	this := RangingSlPosSubscriptionData{}
	return &this
}

// GetRangingSlPosAuth returns the RangingSlPosAuth field value if set, zero value otherwise.
func (o *RangingSlPosSubscriptionData) GetRangingSlPosAuth() RangingSlPosAuth {
	if o == nil || IsNil(o.RangingSlPosAuth) {
		var ret RangingSlPosAuth
		return ret
	}
	return *o.RangingSlPosAuth
}

// GetRangingSlPosAuthOk returns a tuple with the RangingSlPosAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RangingSlPosSubscriptionData) GetRangingSlPosAuthOk() (*RangingSlPosAuth, bool) {
	if o == nil || IsNil(o.RangingSlPosAuth) {
		return nil, false
	}
	return o.RangingSlPosAuth, true
}

// HasRangingSlPosAuth returns a boolean if a field has been set.
func (o *RangingSlPosSubscriptionData) HasRangingSlPosAuth() bool {
	if o != nil && !IsNil(o.RangingSlPosAuth) {
		return true
	}

	return false
}

// SetRangingSlPosAuth gets a reference to the given RangingSlPosAuth and assigns it to the RangingSlPosAuth field.
func (o *RangingSlPosSubscriptionData) SetRangingSlPosAuth(v RangingSlPosAuth) {
	o.RangingSlPosAuth = &v
}

// GetRangingSlPosPlmn returns the RangingSlPosPlmn field value if set, zero value otherwise.
func (o *RangingSlPosSubscriptionData) GetRangingSlPosPlmn() []RangingSlPosPlmn {
	if o == nil || IsNil(o.RangingSlPosPlmn) {
		var ret []RangingSlPosPlmn
		return ret
	}
	return o.RangingSlPosPlmn
}

// GetRangingSlPosPlmnOk returns a tuple with the RangingSlPosPlmn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RangingSlPosSubscriptionData) GetRangingSlPosPlmnOk() ([]RangingSlPosPlmn, bool) {
	if o == nil || IsNil(o.RangingSlPosPlmn) {
		return nil, false
	}
	return o.RangingSlPosPlmn, true
}

// HasRangingSlPosPlmn returns a boolean if a field has been set.
func (o *RangingSlPosSubscriptionData) HasRangingSlPosPlmn() bool {
	if o != nil && !IsNil(o.RangingSlPosPlmn) {
		return true
	}

	return false
}

// SetRangingSlPosPlmn gets a reference to the given []RangingSlPosPlmn and assigns it to the RangingSlPosPlmn field.
func (o *RangingSlPosSubscriptionData) SetRangingSlPosPlmn(v []RangingSlPosPlmn) {
	o.RangingSlPosPlmn = v
}

// GetRangingSlPosQos returns the RangingSlPosQos field value if set, zero value otherwise.
func (o *RangingSlPosSubscriptionData) GetRangingSlPosQos() RangingSlPosQos {
	if o == nil || IsNil(o.RangingSlPosQos) {
		var ret RangingSlPosQos
		return ret
	}
	return *o.RangingSlPosQos
}

// GetRangingSlPosQosOk returns a tuple with the RangingSlPosQos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RangingSlPosSubscriptionData) GetRangingSlPosQosOk() (*RangingSlPosQos, bool) {
	if o == nil || IsNil(o.RangingSlPosQos) {
		return nil, false
	}
	return o.RangingSlPosQos, true
}

// HasRangingSlPosQos returns a boolean if a field has been set.
func (o *RangingSlPosSubscriptionData) HasRangingSlPosQos() bool {
	if o != nil && !IsNil(o.RangingSlPosQos) {
		return true
	}

	return false
}

// SetRangingSlPosQos gets a reference to the given RangingSlPosQos and assigns it to the RangingSlPosQos field.
func (o *RangingSlPosSubscriptionData) SetRangingSlPosQos(v RangingSlPosQos) {
	o.RangingSlPosQos = &v
}

func (o RangingSlPosSubscriptionData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RangingSlPosSubscriptionData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RangingSlPosAuth) {
		toSerialize["rangingSlPosAuth"] = o.RangingSlPosAuth
	}
	if !IsNil(o.RangingSlPosPlmn) {
		toSerialize["rangingSlPosPlmn"] = o.RangingSlPosPlmn
	}
	if !IsNil(o.RangingSlPosQos) {
		toSerialize["rangingSlPosQos"] = o.RangingSlPosQos
	}
	return toSerialize, nil
}

type NullableRangingSlPosSubscriptionData struct {
	value *RangingSlPosSubscriptionData
	isSet bool
}

func (v NullableRangingSlPosSubscriptionData) Get() *RangingSlPosSubscriptionData {
	return v.value
}

func (v *NullableRangingSlPosSubscriptionData) Set(val *RangingSlPosSubscriptionData) {
	v.value = val
	v.isSet = true
}

func (v NullableRangingSlPosSubscriptionData) IsSet() bool {
	return v.isSet
}

func (v *NullableRangingSlPosSubscriptionData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRangingSlPosSubscriptionData(val *RangingSlPosSubscriptionData) *NullableRangingSlPosSubscriptionData {
	return &NullableRangingSlPosSubscriptionData{value: val, isSet: true}
}

func (v NullableRangingSlPosSubscriptionData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRangingSlPosSubscriptionData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


