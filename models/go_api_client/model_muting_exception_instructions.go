/*
Nudm_EE

Nudm Event Exposure Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.5
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MutingExceptionInstructions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MutingExceptionInstructions{}

// MutingExceptionInstructions Indicates to an Event producer NF instructions for the subscription and stored events when an exception (e.g. full buffer) occurs at the Event producer NF while the event is muted. 
type MutingExceptionInstructions struct {
	BufferedNotifs *BufferedNotificationsAction `json:"bufferedNotifs,omitempty"`
	Subscription *SubscriptionAction `json:"subscription,omitempty"`
}

// NewMutingExceptionInstructions instantiates a new MutingExceptionInstructions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMutingExceptionInstructions() *MutingExceptionInstructions {
	this := MutingExceptionInstructions{}
	return &this
}

// NewMutingExceptionInstructionsWithDefaults instantiates a new MutingExceptionInstructions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMutingExceptionInstructionsWithDefaults() *MutingExceptionInstructions {
	this := MutingExceptionInstructions{}
	return &this
}

// GetBufferedNotifs returns the BufferedNotifs field value if set, zero value otherwise.
func (o *MutingExceptionInstructions) GetBufferedNotifs() BufferedNotificationsAction {
	if o == nil || IsNil(o.BufferedNotifs) {
		var ret BufferedNotificationsAction
		return ret
	}
	return *o.BufferedNotifs
}

// GetBufferedNotifsOk returns a tuple with the BufferedNotifs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MutingExceptionInstructions) GetBufferedNotifsOk() (*BufferedNotificationsAction, bool) {
	if o == nil || IsNil(o.BufferedNotifs) {
		return nil, false
	}
	return o.BufferedNotifs, true
}

// HasBufferedNotifs returns a boolean if a field has been set.
func (o *MutingExceptionInstructions) HasBufferedNotifs() bool {
	if o != nil && !IsNil(o.BufferedNotifs) {
		return true
	}

	return false
}

// SetBufferedNotifs gets a reference to the given BufferedNotificationsAction and assigns it to the BufferedNotifs field.
func (o *MutingExceptionInstructions) SetBufferedNotifs(v BufferedNotificationsAction) {
	o.BufferedNotifs = &v
}

// GetSubscription returns the Subscription field value if set, zero value otherwise.
func (o *MutingExceptionInstructions) GetSubscription() SubscriptionAction {
	if o == nil || IsNil(o.Subscription) {
		var ret SubscriptionAction
		return ret
	}
	return *o.Subscription
}

// GetSubscriptionOk returns a tuple with the Subscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MutingExceptionInstructions) GetSubscriptionOk() (*SubscriptionAction, bool) {
	if o == nil || IsNil(o.Subscription) {
		return nil, false
	}
	return o.Subscription, true
}

// HasSubscription returns a boolean if a field has been set.
func (o *MutingExceptionInstructions) HasSubscription() bool {
	if o != nil && !IsNil(o.Subscription) {
		return true
	}

	return false
}

// SetSubscription gets a reference to the given SubscriptionAction and assigns it to the Subscription field.
func (o *MutingExceptionInstructions) SetSubscription(v SubscriptionAction) {
	o.Subscription = &v
}

func (o MutingExceptionInstructions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MutingExceptionInstructions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BufferedNotifs) {
		toSerialize["bufferedNotifs"] = o.BufferedNotifs
	}
	if !IsNil(o.Subscription) {
		toSerialize["subscription"] = o.Subscription
	}
	return toSerialize, nil
}

type NullableMutingExceptionInstructions struct {
	value *MutingExceptionInstructions
	isSet bool
}

func (v NullableMutingExceptionInstructions) Get() *MutingExceptionInstructions {
	return v.value
}

func (v *NullableMutingExceptionInstructions) Set(val *MutingExceptionInstructions) {
	v.value = val
	v.isSet = true
}

func (v NullableMutingExceptionInstructions) IsSet() bool {
	return v.isSet
}

func (v *NullableMutingExceptionInstructions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMutingExceptionInstructions(val *MutingExceptionInstructions) *NullableMutingExceptionInstructions {
	return &NullableMutingExceptionInstructions{value: val, isSet: true}
}

func (v NullableMutingExceptionInstructions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMutingExceptionInstructions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


