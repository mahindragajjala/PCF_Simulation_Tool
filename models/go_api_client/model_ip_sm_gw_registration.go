/*
Nudm_UECM

Nudm Context Management Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the IpSmGwRegistration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IpSmGwRegistration{}

// IpSmGwRegistration This data type contains the IP-SW-GW routing information.
type IpSmGwRegistration struct {
	// This data type mentions International E.164 number of the SMSF; shall be present if the SMSF supports MAP. 
	IpSmGwMapAddress *string `json:"ipSmGwMapAddress,omitempty"`
	IpSmGwDiameterAddress *NetworkNodeDiameterAddress `json:"ipSmGwDiameterAddress,omitempty"`
	// String identifying a IPv4 address formatted in the 'dotted decimal' notation as defined in RFC 1166. 
	IpsmgwIpv4 *string `json:"ipsmgwIpv4,omitempty"`
	IpsmgwIpv6 *Ipv6Addr `json:"ipsmgwIpv6,omitempty"`
	// Fully Qualified Domain Name
	IpsmgwFqdn *string `json:"ipsmgwFqdn,omitempty"`
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.  
	NfInstanceId *string `json:"nfInstanceId,omitempty"`
	UnriIndicator *bool `json:"unriIndicator,omitempty"`
	ResetIds []string `json:"resetIds,omitempty"`
	IpSmGwSbiSupInd *bool `json:"ipSmGwSbiSupInd,omitempty"`
}

// NewIpSmGwRegistration instantiates a new IpSmGwRegistration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIpSmGwRegistration() *IpSmGwRegistration {
	this := IpSmGwRegistration{}
	return &this
}

// NewIpSmGwRegistrationWithDefaults instantiates a new IpSmGwRegistration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIpSmGwRegistrationWithDefaults() *IpSmGwRegistration {
	this := IpSmGwRegistration{}
	var unriIndicator bool = false
	this.UnriIndicator = &unriIndicator
	var ipSmGwSbiSupInd bool = false
	this.IpSmGwSbiSupInd = &ipSmGwSbiSupInd
	return &this
}

// GetIpSmGwMapAddress returns the IpSmGwMapAddress field value if set, zero value otherwise.
func (o *IpSmGwRegistration) GetIpSmGwMapAddress() string {
	if o == nil || IsNil(o.IpSmGwMapAddress) {
		var ret string
		return ret
	}
	return *o.IpSmGwMapAddress
}

// GetIpSmGwMapAddressOk returns a tuple with the IpSmGwMapAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpSmGwRegistration) GetIpSmGwMapAddressOk() (*string, bool) {
	if o == nil || IsNil(o.IpSmGwMapAddress) {
		return nil, false
	}
	return o.IpSmGwMapAddress, true
}

// HasIpSmGwMapAddress returns a boolean if a field has been set.
func (o *IpSmGwRegistration) HasIpSmGwMapAddress() bool {
	if o != nil && !IsNil(o.IpSmGwMapAddress) {
		return true
	}

	return false
}

// SetIpSmGwMapAddress gets a reference to the given string and assigns it to the IpSmGwMapAddress field.
func (o *IpSmGwRegistration) SetIpSmGwMapAddress(v string) {
	o.IpSmGwMapAddress = &v
}

// GetIpSmGwDiameterAddress returns the IpSmGwDiameterAddress field value if set, zero value otherwise.
func (o *IpSmGwRegistration) GetIpSmGwDiameterAddress() NetworkNodeDiameterAddress {
	if o == nil || IsNil(o.IpSmGwDiameterAddress) {
		var ret NetworkNodeDiameterAddress
		return ret
	}
	return *o.IpSmGwDiameterAddress
}

// GetIpSmGwDiameterAddressOk returns a tuple with the IpSmGwDiameterAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpSmGwRegistration) GetIpSmGwDiameterAddressOk() (*NetworkNodeDiameterAddress, bool) {
	if o == nil || IsNil(o.IpSmGwDiameterAddress) {
		return nil, false
	}
	return o.IpSmGwDiameterAddress, true
}

// HasIpSmGwDiameterAddress returns a boolean if a field has been set.
func (o *IpSmGwRegistration) HasIpSmGwDiameterAddress() bool {
	if o != nil && !IsNil(o.IpSmGwDiameterAddress) {
		return true
	}

	return false
}

// SetIpSmGwDiameterAddress gets a reference to the given NetworkNodeDiameterAddress and assigns it to the IpSmGwDiameterAddress field.
func (o *IpSmGwRegistration) SetIpSmGwDiameterAddress(v NetworkNodeDiameterAddress) {
	o.IpSmGwDiameterAddress = &v
}

// GetIpsmgwIpv4 returns the IpsmgwIpv4 field value if set, zero value otherwise.
func (o *IpSmGwRegistration) GetIpsmgwIpv4() string {
	if o == nil || IsNil(o.IpsmgwIpv4) {
		var ret string
		return ret
	}
	return *o.IpsmgwIpv4
}

// GetIpsmgwIpv4Ok returns a tuple with the IpsmgwIpv4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpSmGwRegistration) GetIpsmgwIpv4Ok() (*string, bool) {
	if o == nil || IsNil(o.IpsmgwIpv4) {
		return nil, false
	}
	return o.IpsmgwIpv4, true
}

// HasIpsmgwIpv4 returns a boolean if a field has been set.
func (o *IpSmGwRegistration) HasIpsmgwIpv4() bool {
	if o != nil && !IsNil(o.IpsmgwIpv4) {
		return true
	}

	return false
}

// SetIpsmgwIpv4 gets a reference to the given string and assigns it to the IpsmgwIpv4 field.
func (o *IpSmGwRegistration) SetIpsmgwIpv4(v string) {
	o.IpsmgwIpv4 = &v
}

// GetIpsmgwIpv6 returns the IpsmgwIpv6 field value if set, zero value otherwise.
func (o *IpSmGwRegistration) GetIpsmgwIpv6() Ipv6Addr {
	if o == nil || IsNil(o.IpsmgwIpv6) {
		var ret Ipv6Addr
		return ret
	}
	return *o.IpsmgwIpv6
}

// GetIpsmgwIpv6Ok returns a tuple with the IpsmgwIpv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpSmGwRegistration) GetIpsmgwIpv6Ok() (*Ipv6Addr, bool) {
	if o == nil || IsNil(o.IpsmgwIpv6) {
		return nil, false
	}
	return o.IpsmgwIpv6, true
}

// HasIpsmgwIpv6 returns a boolean if a field has been set.
func (o *IpSmGwRegistration) HasIpsmgwIpv6() bool {
	if o != nil && !IsNil(o.IpsmgwIpv6) {
		return true
	}

	return false
}

// SetIpsmgwIpv6 gets a reference to the given Ipv6Addr and assigns it to the IpsmgwIpv6 field.
func (o *IpSmGwRegistration) SetIpsmgwIpv6(v Ipv6Addr) {
	o.IpsmgwIpv6 = &v
}

// GetIpsmgwFqdn returns the IpsmgwFqdn field value if set, zero value otherwise.
func (o *IpSmGwRegistration) GetIpsmgwFqdn() string {
	if o == nil || IsNil(o.IpsmgwFqdn) {
		var ret string
		return ret
	}
	return *o.IpsmgwFqdn
}

// GetIpsmgwFqdnOk returns a tuple with the IpsmgwFqdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpSmGwRegistration) GetIpsmgwFqdnOk() (*string, bool) {
	if o == nil || IsNil(o.IpsmgwFqdn) {
		return nil, false
	}
	return o.IpsmgwFqdn, true
}

// HasIpsmgwFqdn returns a boolean if a field has been set.
func (o *IpSmGwRegistration) HasIpsmgwFqdn() bool {
	if o != nil && !IsNil(o.IpsmgwFqdn) {
		return true
	}

	return false
}

// SetIpsmgwFqdn gets a reference to the given string and assigns it to the IpsmgwFqdn field.
func (o *IpSmGwRegistration) SetIpsmgwFqdn(v string) {
	o.IpsmgwFqdn = &v
}

// GetNfInstanceId returns the NfInstanceId field value if set, zero value otherwise.
func (o *IpSmGwRegistration) GetNfInstanceId() string {
	if o == nil || IsNil(o.NfInstanceId) {
		var ret string
		return ret
	}
	return *o.NfInstanceId
}

// GetNfInstanceIdOk returns a tuple with the NfInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpSmGwRegistration) GetNfInstanceIdOk() (*string, bool) {
	if o == nil || IsNil(o.NfInstanceId) {
		return nil, false
	}
	return o.NfInstanceId, true
}

// HasNfInstanceId returns a boolean if a field has been set.
func (o *IpSmGwRegistration) HasNfInstanceId() bool {
	if o != nil && !IsNil(o.NfInstanceId) {
		return true
	}

	return false
}

// SetNfInstanceId gets a reference to the given string and assigns it to the NfInstanceId field.
func (o *IpSmGwRegistration) SetNfInstanceId(v string) {
	o.NfInstanceId = &v
}

// GetUnriIndicator returns the UnriIndicator field value if set, zero value otherwise.
func (o *IpSmGwRegistration) GetUnriIndicator() bool {
	if o == nil || IsNil(o.UnriIndicator) {
		var ret bool
		return ret
	}
	return *o.UnriIndicator
}

// GetUnriIndicatorOk returns a tuple with the UnriIndicator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpSmGwRegistration) GetUnriIndicatorOk() (*bool, bool) {
	if o == nil || IsNil(o.UnriIndicator) {
		return nil, false
	}
	return o.UnriIndicator, true
}

// HasUnriIndicator returns a boolean if a field has been set.
func (o *IpSmGwRegistration) HasUnriIndicator() bool {
	if o != nil && !IsNil(o.UnriIndicator) {
		return true
	}

	return false
}

// SetUnriIndicator gets a reference to the given bool and assigns it to the UnriIndicator field.
func (o *IpSmGwRegistration) SetUnriIndicator(v bool) {
	o.UnriIndicator = &v
}

// GetResetIds returns the ResetIds field value if set, zero value otherwise.
func (o *IpSmGwRegistration) GetResetIds() []string {
	if o == nil || IsNil(o.ResetIds) {
		var ret []string
		return ret
	}
	return o.ResetIds
}

// GetResetIdsOk returns a tuple with the ResetIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpSmGwRegistration) GetResetIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ResetIds) {
		return nil, false
	}
	return o.ResetIds, true
}

// HasResetIds returns a boolean if a field has been set.
func (o *IpSmGwRegistration) HasResetIds() bool {
	if o != nil && !IsNil(o.ResetIds) {
		return true
	}

	return false
}

// SetResetIds gets a reference to the given []string and assigns it to the ResetIds field.
func (o *IpSmGwRegistration) SetResetIds(v []string) {
	o.ResetIds = v
}

// GetIpSmGwSbiSupInd returns the IpSmGwSbiSupInd field value if set, zero value otherwise.
func (o *IpSmGwRegistration) GetIpSmGwSbiSupInd() bool {
	if o == nil || IsNil(o.IpSmGwSbiSupInd) {
		var ret bool
		return ret
	}
	return *o.IpSmGwSbiSupInd
}

// GetIpSmGwSbiSupIndOk returns a tuple with the IpSmGwSbiSupInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpSmGwRegistration) GetIpSmGwSbiSupIndOk() (*bool, bool) {
	if o == nil || IsNil(o.IpSmGwSbiSupInd) {
		return nil, false
	}
	return o.IpSmGwSbiSupInd, true
}

// HasIpSmGwSbiSupInd returns a boolean if a field has been set.
func (o *IpSmGwRegistration) HasIpSmGwSbiSupInd() bool {
	if o != nil && !IsNil(o.IpSmGwSbiSupInd) {
		return true
	}

	return false
}

// SetIpSmGwSbiSupInd gets a reference to the given bool and assigns it to the IpSmGwSbiSupInd field.
func (o *IpSmGwRegistration) SetIpSmGwSbiSupInd(v bool) {
	o.IpSmGwSbiSupInd = &v
}

func (o IpSmGwRegistration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IpSmGwRegistration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IpSmGwMapAddress) {
		toSerialize["ipSmGwMapAddress"] = o.IpSmGwMapAddress
	}
	if !IsNil(o.IpSmGwDiameterAddress) {
		toSerialize["ipSmGwDiameterAddress"] = o.IpSmGwDiameterAddress
	}
	if !IsNil(o.IpsmgwIpv4) {
		toSerialize["ipsmgwIpv4"] = o.IpsmgwIpv4
	}
	if !IsNil(o.IpsmgwIpv6) {
		toSerialize["ipsmgwIpv6"] = o.IpsmgwIpv6
	}
	if !IsNil(o.IpsmgwFqdn) {
		toSerialize["ipsmgwFqdn"] = o.IpsmgwFqdn
	}
	if !IsNil(o.NfInstanceId) {
		toSerialize["nfInstanceId"] = o.NfInstanceId
	}
	if !IsNil(o.UnriIndicator) {
		toSerialize["unriIndicator"] = o.UnriIndicator
	}
	if !IsNil(o.ResetIds) {
		toSerialize["resetIds"] = o.ResetIds
	}
	if !IsNil(o.IpSmGwSbiSupInd) {
		toSerialize["ipSmGwSbiSupInd"] = o.IpSmGwSbiSupInd
	}
	return toSerialize, nil
}

type NullableIpSmGwRegistration struct {
	value *IpSmGwRegistration
	isSet bool
}

func (v NullableIpSmGwRegistration) Get() *IpSmGwRegistration {
	return v.value
}

func (v *NullableIpSmGwRegistration) Set(val *IpSmGwRegistration) {
	v.value = val
	v.isSet = true
}

func (v NullableIpSmGwRegistration) IsSet() bool {
	return v.isSet
}

func (v *NullableIpSmGwRegistration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIpSmGwRegistration(val *IpSmGwRegistration) *NullableIpSmGwRegistration {
	return &NullableIpSmGwRegistration{value: val, isSet: true}
}

func (v NullableIpSmGwRegistration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIpSmGwRegistration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


