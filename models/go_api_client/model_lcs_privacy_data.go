/*
Nudm_SDM

Nudm Subscriber Data Management Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 2.3.0-alpha.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the LcsPrivacyData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LcsPrivacyData{}

// LcsPrivacyData struct for LcsPrivacyData
type LcsPrivacyData struct {
	Lpi *Lpi `json:"lpi,omitempty"`
	UnrelatedClass *UnrelatedClass `json:"unrelatedClass,omitempty"`
	PlmnOperatorClasses []PlmnOperatorClass `json:"plmnOperatorClasses,omitempty"`
	EvtRptExpectedArea *GeographicArea `json:"evtRptExpectedArea,omitempty"`
	AreaUsageInd *AreaUsageInd `json:"areaUsageInd,omitempty"`
	UpLocRepIndAf *UpLocRepIndAf `json:"upLocRepIndAf,omitempty"`
}

// NewLcsPrivacyData instantiates a new LcsPrivacyData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLcsPrivacyData() *LcsPrivacyData {
	this := LcsPrivacyData{}
	var areaUsageInd AreaUsageInd = INSIDE_REPORTING
	this.AreaUsageInd = &areaUsageInd
	var upLocRepIndAf UpLocRepIndAf = USER_PLANE_REPORT_NOT_ALLOWED
	this.UpLocRepIndAf = &upLocRepIndAf
	return &this
}

// NewLcsPrivacyDataWithDefaults instantiates a new LcsPrivacyData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLcsPrivacyDataWithDefaults() *LcsPrivacyData {
	this := LcsPrivacyData{}
	var areaUsageInd AreaUsageInd = INSIDE_REPORTING
	this.AreaUsageInd = &areaUsageInd
	var upLocRepIndAf UpLocRepIndAf = USER_PLANE_REPORT_NOT_ALLOWED
	this.UpLocRepIndAf = &upLocRepIndAf
	return &this
}

// GetLpi returns the Lpi field value if set, zero value otherwise.
func (o *LcsPrivacyData) GetLpi() Lpi {
	if o == nil || IsNil(o.Lpi) {
		var ret Lpi
		return ret
	}
	return *o.Lpi
}

// GetLpiOk returns a tuple with the Lpi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LcsPrivacyData) GetLpiOk() (*Lpi, bool) {
	if o == nil || IsNil(o.Lpi) {
		return nil, false
	}
	return o.Lpi, true
}

// HasLpi returns a boolean if a field has been set.
func (o *LcsPrivacyData) HasLpi() bool {
	if o != nil && !IsNil(o.Lpi) {
		return true
	}

	return false
}

// SetLpi gets a reference to the given Lpi and assigns it to the Lpi field.
func (o *LcsPrivacyData) SetLpi(v Lpi) {
	o.Lpi = &v
}

// GetUnrelatedClass returns the UnrelatedClass field value if set, zero value otherwise.
func (o *LcsPrivacyData) GetUnrelatedClass() UnrelatedClass {
	if o == nil || IsNil(o.UnrelatedClass) {
		var ret UnrelatedClass
		return ret
	}
	return *o.UnrelatedClass
}

// GetUnrelatedClassOk returns a tuple with the UnrelatedClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LcsPrivacyData) GetUnrelatedClassOk() (*UnrelatedClass, bool) {
	if o == nil || IsNil(o.UnrelatedClass) {
		return nil, false
	}
	return o.UnrelatedClass, true
}

// HasUnrelatedClass returns a boolean if a field has been set.
func (o *LcsPrivacyData) HasUnrelatedClass() bool {
	if o != nil && !IsNil(o.UnrelatedClass) {
		return true
	}

	return false
}

// SetUnrelatedClass gets a reference to the given UnrelatedClass and assigns it to the UnrelatedClass field.
func (o *LcsPrivacyData) SetUnrelatedClass(v UnrelatedClass) {
	o.UnrelatedClass = &v
}

// GetPlmnOperatorClasses returns the PlmnOperatorClasses field value if set, zero value otherwise.
func (o *LcsPrivacyData) GetPlmnOperatorClasses() []PlmnOperatorClass {
	if o == nil || IsNil(o.PlmnOperatorClasses) {
		var ret []PlmnOperatorClass
		return ret
	}
	return o.PlmnOperatorClasses
}

// GetPlmnOperatorClassesOk returns a tuple with the PlmnOperatorClasses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LcsPrivacyData) GetPlmnOperatorClassesOk() ([]PlmnOperatorClass, bool) {
	if o == nil || IsNil(o.PlmnOperatorClasses) {
		return nil, false
	}
	return o.PlmnOperatorClasses, true
}

// HasPlmnOperatorClasses returns a boolean if a field has been set.
func (o *LcsPrivacyData) HasPlmnOperatorClasses() bool {
	if o != nil && !IsNil(o.PlmnOperatorClasses) {
		return true
	}

	return false
}

// SetPlmnOperatorClasses gets a reference to the given []PlmnOperatorClass and assigns it to the PlmnOperatorClasses field.
func (o *LcsPrivacyData) SetPlmnOperatorClasses(v []PlmnOperatorClass) {
	o.PlmnOperatorClasses = v
}

// GetEvtRptExpectedArea returns the EvtRptExpectedArea field value if set, zero value otherwise.
func (o *LcsPrivacyData) GetEvtRptExpectedArea() GeographicArea {
	if o == nil || IsNil(o.EvtRptExpectedArea) {
		var ret GeographicArea
		return ret
	}
	return *o.EvtRptExpectedArea
}

// GetEvtRptExpectedAreaOk returns a tuple with the EvtRptExpectedArea field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LcsPrivacyData) GetEvtRptExpectedAreaOk() (*GeographicArea, bool) {
	if o == nil || IsNil(o.EvtRptExpectedArea) {
		return nil, false
	}
	return o.EvtRptExpectedArea, true
}

// HasEvtRptExpectedArea returns a boolean if a field has been set.
func (o *LcsPrivacyData) HasEvtRptExpectedArea() bool {
	if o != nil && !IsNil(o.EvtRptExpectedArea) {
		return true
	}

	return false
}

// SetEvtRptExpectedArea gets a reference to the given GeographicArea and assigns it to the EvtRptExpectedArea field.
func (o *LcsPrivacyData) SetEvtRptExpectedArea(v GeographicArea) {
	o.EvtRptExpectedArea = &v
}

// GetAreaUsageInd returns the AreaUsageInd field value if set, zero value otherwise.
func (o *LcsPrivacyData) GetAreaUsageInd() AreaUsageInd {
	if o == nil || IsNil(o.AreaUsageInd) {
		var ret AreaUsageInd
		return ret
	}
	return *o.AreaUsageInd
}

// GetAreaUsageIndOk returns a tuple with the AreaUsageInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LcsPrivacyData) GetAreaUsageIndOk() (*AreaUsageInd, bool) {
	if o == nil || IsNil(o.AreaUsageInd) {
		return nil, false
	}
	return o.AreaUsageInd, true
}

// HasAreaUsageInd returns a boolean if a field has been set.
func (o *LcsPrivacyData) HasAreaUsageInd() bool {
	if o != nil && !IsNil(o.AreaUsageInd) {
		return true
	}

	return false
}

// SetAreaUsageInd gets a reference to the given AreaUsageInd and assigns it to the AreaUsageInd field.
func (o *LcsPrivacyData) SetAreaUsageInd(v AreaUsageInd) {
	o.AreaUsageInd = &v
}

// GetUpLocRepIndAf returns the UpLocRepIndAf field value if set, zero value otherwise.
func (o *LcsPrivacyData) GetUpLocRepIndAf() UpLocRepIndAf {
	if o == nil || IsNil(o.UpLocRepIndAf) {
		var ret UpLocRepIndAf
		return ret
	}
	return *o.UpLocRepIndAf
}

// GetUpLocRepIndAfOk returns a tuple with the UpLocRepIndAf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LcsPrivacyData) GetUpLocRepIndAfOk() (*UpLocRepIndAf, bool) {
	if o == nil || IsNil(o.UpLocRepIndAf) {
		return nil, false
	}
	return o.UpLocRepIndAf, true
}

// HasUpLocRepIndAf returns a boolean if a field has been set.
func (o *LcsPrivacyData) HasUpLocRepIndAf() bool {
	if o != nil && !IsNil(o.UpLocRepIndAf) {
		return true
	}

	return false
}

// SetUpLocRepIndAf gets a reference to the given UpLocRepIndAf and assigns it to the UpLocRepIndAf field.
func (o *LcsPrivacyData) SetUpLocRepIndAf(v UpLocRepIndAf) {
	o.UpLocRepIndAf = &v
}

func (o LcsPrivacyData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LcsPrivacyData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Lpi) {
		toSerialize["lpi"] = o.Lpi
	}
	if !IsNil(o.UnrelatedClass) {
		toSerialize["unrelatedClass"] = o.UnrelatedClass
	}
	if !IsNil(o.PlmnOperatorClasses) {
		toSerialize["plmnOperatorClasses"] = o.PlmnOperatorClasses
	}
	if !IsNil(o.EvtRptExpectedArea) {
		toSerialize["evtRptExpectedArea"] = o.EvtRptExpectedArea
	}
	if !IsNil(o.AreaUsageInd) {
		toSerialize["areaUsageInd"] = o.AreaUsageInd
	}
	if !IsNil(o.UpLocRepIndAf) {
		toSerialize["upLocRepIndAf"] = o.UpLocRepIndAf
	}
	return toSerialize, nil
}

type NullableLcsPrivacyData struct {
	value *LcsPrivacyData
	isSet bool
}

func (v NullableLcsPrivacyData) Get() *LcsPrivacyData {
	return v.value
}

func (v *NullableLcsPrivacyData) Set(val *LcsPrivacyData) {
	v.value = val
	v.isSet = true
}

func (v NullableLcsPrivacyData) IsSet() bool {
	return v.isSet
}

func (v *NullableLcsPrivacyData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLcsPrivacyData(val *LcsPrivacyData) *NullableLcsPrivacyData {
	return &NullableLcsPrivacyData{value: val, isSet: true}
}

func (v NullableLcsPrivacyData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLcsPrivacyData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


