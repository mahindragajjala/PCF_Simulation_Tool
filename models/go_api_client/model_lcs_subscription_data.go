/*
Nudm_SDM

Nudm Subscriber Data Management Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 2.3.0-alpha.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the LcsSubscriptionData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LcsSubscriptionData{}

// LcsSubscriptionData struct for LcsSubscriptionData
type LcsSubscriptionData struct {
	// LMF identification.
	ConfiguredLmfId *string `json:"configuredLmfId,omitempty"`
	PruInd *PruInd `json:"pruInd,omitempty"`
	LpHapType *LpHapType `json:"lpHapType,omitempty"`
	UserPlanePosIndLmf *bool `json:"userPlanePosIndLmf,omitempty"`
}

// NewLcsSubscriptionData instantiates a new LcsSubscriptionData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLcsSubscriptionData() *LcsSubscriptionData {
	this := LcsSubscriptionData{}
	var userPlanePosIndLmf bool = false
	this.UserPlanePosIndLmf = &userPlanePosIndLmf
	return &this
}

// NewLcsSubscriptionDataWithDefaults instantiates a new LcsSubscriptionData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLcsSubscriptionDataWithDefaults() *LcsSubscriptionData {
	this := LcsSubscriptionData{}
	var userPlanePosIndLmf bool = false
	this.UserPlanePosIndLmf = &userPlanePosIndLmf
	return &this
}

// GetConfiguredLmfId returns the ConfiguredLmfId field value if set, zero value otherwise.
func (o *LcsSubscriptionData) GetConfiguredLmfId() string {
	if o == nil || IsNil(o.ConfiguredLmfId) {
		var ret string
		return ret
	}
	return *o.ConfiguredLmfId
}

// GetConfiguredLmfIdOk returns a tuple with the ConfiguredLmfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LcsSubscriptionData) GetConfiguredLmfIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConfiguredLmfId) {
		return nil, false
	}
	return o.ConfiguredLmfId, true
}

// HasConfiguredLmfId returns a boolean if a field has been set.
func (o *LcsSubscriptionData) HasConfiguredLmfId() bool {
	if o != nil && !IsNil(o.ConfiguredLmfId) {
		return true
	}

	return false
}

// SetConfiguredLmfId gets a reference to the given string and assigns it to the ConfiguredLmfId field.
func (o *LcsSubscriptionData) SetConfiguredLmfId(v string) {
	o.ConfiguredLmfId = &v
}

// GetPruInd returns the PruInd field value if set, zero value otherwise.
func (o *LcsSubscriptionData) GetPruInd() PruInd {
	if o == nil || IsNil(o.PruInd) {
		var ret PruInd
		return ret
	}
	return *o.PruInd
}

// GetPruIndOk returns a tuple with the PruInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LcsSubscriptionData) GetPruIndOk() (*PruInd, bool) {
	if o == nil || IsNil(o.PruInd) {
		return nil, false
	}
	return o.PruInd, true
}

// HasPruInd returns a boolean if a field has been set.
func (o *LcsSubscriptionData) HasPruInd() bool {
	if o != nil && !IsNil(o.PruInd) {
		return true
	}

	return false
}

// SetPruInd gets a reference to the given PruInd and assigns it to the PruInd field.
func (o *LcsSubscriptionData) SetPruInd(v PruInd) {
	o.PruInd = &v
}

// GetLpHapType returns the LpHapType field value if set, zero value otherwise.
func (o *LcsSubscriptionData) GetLpHapType() LpHapType {
	if o == nil || IsNil(o.LpHapType) {
		var ret LpHapType
		return ret
	}
	return *o.LpHapType
}

// GetLpHapTypeOk returns a tuple with the LpHapType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LcsSubscriptionData) GetLpHapTypeOk() (*LpHapType, bool) {
	if o == nil || IsNil(o.LpHapType) {
		return nil, false
	}
	return o.LpHapType, true
}

// HasLpHapType returns a boolean if a field has been set.
func (o *LcsSubscriptionData) HasLpHapType() bool {
	if o != nil && !IsNil(o.LpHapType) {
		return true
	}

	return false
}

// SetLpHapType gets a reference to the given LpHapType and assigns it to the LpHapType field.
func (o *LcsSubscriptionData) SetLpHapType(v LpHapType) {
	o.LpHapType = &v
}

// GetUserPlanePosIndLmf returns the UserPlanePosIndLmf field value if set, zero value otherwise.
func (o *LcsSubscriptionData) GetUserPlanePosIndLmf() bool {
	if o == nil || IsNil(o.UserPlanePosIndLmf) {
		var ret bool
		return ret
	}
	return *o.UserPlanePosIndLmf
}

// GetUserPlanePosIndLmfOk returns a tuple with the UserPlanePosIndLmf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LcsSubscriptionData) GetUserPlanePosIndLmfOk() (*bool, bool) {
	if o == nil || IsNil(o.UserPlanePosIndLmf) {
		return nil, false
	}
	return o.UserPlanePosIndLmf, true
}

// HasUserPlanePosIndLmf returns a boolean if a field has been set.
func (o *LcsSubscriptionData) HasUserPlanePosIndLmf() bool {
	if o != nil && !IsNil(o.UserPlanePosIndLmf) {
		return true
	}

	return false
}

// SetUserPlanePosIndLmf gets a reference to the given bool and assigns it to the UserPlanePosIndLmf field.
func (o *LcsSubscriptionData) SetUserPlanePosIndLmf(v bool) {
	o.UserPlanePosIndLmf = &v
}

func (o LcsSubscriptionData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LcsSubscriptionData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConfiguredLmfId) {
		toSerialize["configuredLmfId"] = o.ConfiguredLmfId
	}
	if !IsNil(o.PruInd) {
		toSerialize["pruInd"] = o.PruInd
	}
	if !IsNil(o.LpHapType) {
		toSerialize["lpHapType"] = o.LpHapType
	}
	if !IsNil(o.UserPlanePosIndLmf) {
		toSerialize["userPlanePosIndLmf"] = o.UserPlanePosIndLmf
	}
	return toSerialize, nil
}

type NullableLcsSubscriptionData struct {
	value *LcsSubscriptionData
	isSet bool
}

func (v NullableLcsSubscriptionData) Get() *LcsSubscriptionData {
	return v.value
}

func (v *NullableLcsSubscriptionData) Set(val *LcsSubscriptionData) {
	v.value = val
	v.isSet = true
}

func (v NullableLcsSubscriptionData) IsSet() bool {
	return v.isSet
}

func (v *NullableLcsSubscriptionData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLcsSubscriptionData(val *LcsSubscriptionData) *NullableLcsSubscriptionData {
	return &NullableLcsSubscriptionData{value: val, isSet: true}
}

func (v NullableLcsSubscriptionData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLcsSubscriptionData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


