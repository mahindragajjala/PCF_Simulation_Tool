/*
Nudm_PP

Nudm Parameter Provision Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.5
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MaxGroupDataRate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MaxGroupDataRate{}

// MaxGroupDataRate The limits of the total bit rate across all sessions of the 5G VN group (uplink and downlink) 
type MaxGroupDataRate struct {
	// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". 
	Uplink *string `json:"uplink,omitempty" validate:"regexp=^\\\\d+(\\\\.\\\\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$"`
	// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". 
	Downlink *string `json:"downlink,omitempty" validate:"regexp=^\\\\d+(\\\\.\\\\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$"`
}

// NewMaxGroupDataRate instantiates a new MaxGroupDataRate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMaxGroupDataRate() *MaxGroupDataRate {
	this := MaxGroupDataRate{}
	return &this
}

// NewMaxGroupDataRateWithDefaults instantiates a new MaxGroupDataRate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMaxGroupDataRateWithDefaults() *MaxGroupDataRate {
	this := MaxGroupDataRate{}
	return &this
}

// GetUplink returns the Uplink field value if set, zero value otherwise.
func (o *MaxGroupDataRate) GetUplink() string {
	if o == nil || IsNil(o.Uplink) {
		var ret string
		return ret
	}
	return *o.Uplink
}

// GetUplinkOk returns a tuple with the Uplink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaxGroupDataRate) GetUplinkOk() (*string, bool) {
	if o == nil || IsNil(o.Uplink) {
		return nil, false
	}
	return o.Uplink, true
}

// HasUplink returns a boolean if a field has been set.
func (o *MaxGroupDataRate) HasUplink() bool {
	if o != nil && !IsNil(o.Uplink) {
		return true
	}

	return false
}

// SetUplink gets a reference to the given string and assigns it to the Uplink field.
func (o *MaxGroupDataRate) SetUplink(v string) {
	o.Uplink = &v
}

// GetDownlink returns the Downlink field value if set, zero value otherwise.
func (o *MaxGroupDataRate) GetDownlink() string {
	if o == nil || IsNil(o.Downlink) {
		var ret string
		return ret
	}
	return *o.Downlink
}

// GetDownlinkOk returns a tuple with the Downlink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaxGroupDataRate) GetDownlinkOk() (*string, bool) {
	if o == nil || IsNil(o.Downlink) {
		return nil, false
	}
	return o.Downlink, true
}

// HasDownlink returns a boolean if a field has been set.
func (o *MaxGroupDataRate) HasDownlink() bool {
	if o != nil && !IsNil(o.Downlink) {
		return true
	}

	return false
}

// SetDownlink gets a reference to the given string and assigns it to the Downlink field.
func (o *MaxGroupDataRate) SetDownlink(v string) {
	o.Downlink = &v
}

func (o MaxGroupDataRate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MaxGroupDataRate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Uplink) {
		toSerialize["uplink"] = o.Uplink
	}
	if !IsNil(o.Downlink) {
		toSerialize["downlink"] = o.Downlink
	}
	return toSerialize, nil
}

type NullableMaxGroupDataRate struct {
	value *MaxGroupDataRate
	isSet bool
}

func (v NullableMaxGroupDataRate) Get() *MaxGroupDataRate {
	return v.value
}

func (v *NullableMaxGroupDataRate) Set(val *MaxGroupDataRate) {
	v.value = val
	v.isSet = true
}

func (v NullableMaxGroupDataRate) IsSet() bool {
	return v.isSet
}

func (v *NullableMaxGroupDataRate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMaxGroupDataRate(val *MaxGroupDataRate) *NullableMaxGroupDataRate {
	return &NullableMaxGroupDataRate{value: val, isSet: true}
}

func (v NullableMaxGroupDataRate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMaxGroupDataRate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


