/*
Nudm_SDM

Nudm Subscriber Data Management Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 2.3.0-alpha.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MbsrTimeInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MbsrTimeInfo{}

// MbsrTimeInfo struct for MbsrTimeInfo
type MbsrTimeInfo struct {
	MbsrTimeWindow []ValidTimePeriod `json:"mbsrTimeWindow,omitempty"`
	MbsrRecurTime []RecurTime `json:"mbsrRecurTime,omitempty"`
}

// NewMbsrTimeInfo instantiates a new MbsrTimeInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMbsrTimeInfo() *MbsrTimeInfo {
	this := MbsrTimeInfo{}
	return &this
}

// NewMbsrTimeInfoWithDefaults instantiates a new MbsrTimeInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMbsrTimeInfoWithDefaults() *MbsrTimeInfo {
	this := MbsrTimeInfo{}
	return &this
}

// GetMbsrTimeWindow returns the MbsrTimeWindow field value if set, zero value otherwise.
func (o *MbsrTimeInfo) GetMbsrTimeWindow() []ValidTimePeriod {
	if o == nil || IsNil(o.MbsrTimeWindow) {
		var ret []ValidTimePeriod
		return ret
	}
	return o.MbsrTimeWindow
}

// GetMbsrTimeWindowOk returns a tuple with the MbsrTimeWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MbsrTimeInfo) GetMbsrTimeWindowOk() ([]ValidTimePeriod, bool) {
	if o == nil || IsNil(o.MbsrTimeWindow) {
		return nil, false
	}
	return o.MbsrTimeWindow, true
}

// HasMbsrTimeWindow returns a boolean if a field has been set.
func (o *MbsrTimeInfo) HasMbsrTimeWindow() bool {
	if o != nil && !IsNil(o.MbsrTimeWindow) {
		return true
	}

	return false
}

// SetMbsrTimeWindow gets a reference to the given []ValidTimePeriod and assigns it to the MbsrTimeWindow field.
func (o *MbsrTimeInfo) SetMbsrTimeWindow(v []ValidTimePeriod) {
	o.MbsrTimeWindow = v
}

// GetMbsrRecurTime returns the MbsrRecurTime field value if set, zero value otherwise.
func (o *MbsrTimeInfo) GetMbsrRecurTime() []RecurTime {
	if o == nil || IsNil(o.MbsrRecurTime) {
		var ret []RecurTime
		return ret
	}
	return o.MbsrRecurTime
}

// GetMbsrRecurTimeOk returns a tuple with the MbsrRecurTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MbsrTimeInfo) GetMbsrRecurTimeOk() ([]RecurTime, bool) {
	if o == nil || IsNil(o.MbsrRecurTime) {
		return nil, false
	}
	return o.MbsrRecurTime, true
}

// HasMbsrRecurTime returns a boolean if a field has been set.
func (o *MbsrTimeInfo) HasMbsrRecurTime() bool {
	if o != nil && !IsNil(o.MbsrRecurTime) {
		return true
	}

	return false
}

// SetMbsrRecurTime gets a reference to the given []RecurTime and assigns it to the MbsrRecurTime field.
func (o *MbsrTimeInfo) SetMbsrRecurTime(v []RecurTime) {
	o.MbsrRecurTime = v
}

func (o MbsrTimeInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MbsrTimeInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MbsrTimeWindow) {
		toSerialize["mbsrTimeWindow"] = o.MbsrTimeWindow
	}
	if !IsNil(o.MbsrRecurTime) {
		toSerialize["mbsrRecurTime"] = o.MbsrRecurTime
	}
	return toSerialize, nil
}

type NullableMbsrTimeInfo struct {
	value *MbsrTimeInfo
	isSet bool
}

func (v NullableMbsrTimeInfo) Get() *MbsrTimeInfo {
	return v.value
}

func (v *NullableMbsrTimeInfo) Set(val *MbsrTimeInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMbsrTimeInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMbsrTimeInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMbsrTimeInfo(val *MbsrTimeInfo) *NullableMbsrTimeInfo {
	return &NullableMbsrTimeInfo{value: val, isSet: true}
}

func (v NullableMbsrTimeInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMbsrTimeInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


