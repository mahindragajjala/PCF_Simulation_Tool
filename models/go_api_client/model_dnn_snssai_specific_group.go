/*
Nudm_PP

Nudm Parameter Provision Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.5
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DnnSnssaiSpecificGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DnnSnssaiSpecificGroup{}

// DnnSnssaiSpecificGroup struct for DnnSnssaiSpecificGroup
type DnnSnssaiSpecificGroup struct {
	// String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;  it shall contain either a DNN Network Identifier, or a full DNN with both the Network  Identifier and Operator Identifier, as specified in 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are separated by dots  (e.g. \"Label1.Label2.Label3\"). 
	Dnn string `json:"dnn"`
	Snssai Snssai `json:"snssai"`
	DefQos *AfReqDefaultQoS `json:"defQos,omitempty"`
	AfReqServArea []Tai `json:"afReqServArea,omitempty"`
}

type _DnnSnssaiSpecificGroup DnnSnssaiSpecificGroup

// NewDnnSnssaiSpecificGroup instantiates a new DnnSnssaiSpecificGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDnnSnssaiSpecificGroup(dnn string, snssai Snssai) *DnnSnssaiSpecificGroup {
	this := DnnSnssaiSpecificGroup{}
	this.Dnn = dnn
	this.Snssai = snssai
	return &this
}

// NewDnnSnssaiSpecificGroupWithDefaults instantiates a new DnnSnssaiSpecificGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDnnSnssaiSpecificGroupWithDefaults() *DnnSnssaiSpecificGroup {
	this := DnnSnssaiSpecificGroup{}
	return &this
}

// GetDnn returns the Dnn field value
func (o *DnnSnssaiSpecificGroup) GetDnn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Dnn
}

// GetDnnOk returns a tuple with the Dnn field value
// and a boolean to check if the value has been set.
func (o *DnnSnssaiSpecificGroup) GetDnnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Dnn, true
}

// SetDnn sets field value
func (o *DnnSnssaiSpecificGroup) SetDnn(v string) {
	o.Dnn = v
}

// GetSnssai returns the Snssai field value
func (o *DnnSnssaiSpecificGroup) GetSnssai() Snssai {
	if o == nil {
		var ret Snssai
		return ret
	}

	return o.Snssai
}

// GetSnssaiOk returns a tuple with the Snssai field value
// and a boolean to check if the value has been set.
func (o *DnnSnssaiSpecificGroup) GetSnssaiOk() (*Snssai, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Snssai, true
}

// SetSnssai sets field value
func (o *DnnSnssaiSpecificGroup) SetSnssai(v Snssai) {
	o.Snssai = v
}

// GetDefQos returns the DefQos field value if set, zero value otherwise.
func (o *DnnSnssaiSpecificGroup) GetDefQos() AfReqDefaultQoS {
	if o == nil || IsNil(o.DefQos) {
		var ret AfReqDefaultQoS
		return ret
	}
	return *o.DefQos
}

// GetDefQosOk returns a tuple with the DefQos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnnSnssaiSpecificGroup) GetDefQosOk() (*AfReqDefaultQoS, bool) {
	if o == nil || IsNil(o.DefQos) {
		return nil, false
	}
	return o.DefQos, true
}

// HasDefQos returns a boolean if a field has been set.
func (o *DnnSnssaiSpecificGroup) HasDefQos() bool {
	if o != nil && !IsNil(o.DefQos) {
		return true
	}

	return false
}

// SetDefQos gets a reference to the given AfReqDefaultQoS and assigns it to the DefQos field.
func (o *DnnSnssaiSpecificGroup) SetDefQos(v AfReqDefaultQoS) {
	o.DefQos = &v
}

// GetAfReqServArea returns the AfReqServArea field value if set, zero value otherwise.
func (o *DnnSnssaiSpecificGroup) GetAfReqServArea() []Tai {
	if o == nil || IsNil(o.AfReqServArea) {
		var ret []Tai
		return ret
	}
	return o.AfReqServArea
}

// GetAfReqServAreaOk returns a tuple with the AfReqServArea field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnnSnssaiSpecificGroup) GetAfReqServAreaOk() ([]Tai, bool) {
	if o == nil || IsNil(o.AfReqServArea) {
		return nil, false
	}
	return o.AfReqServArea, true
}

// HasAfReqServArea returns a boolean if a field has been set.
func (o *DnnSnssaiSpecificGroup) HasAfReqServArea() bool {
	if o != nil && !IsNil(o.AfReqServArea) {
		return true
	}

	return false
}

// SetAfReqServArea gets a reference to the given []Tai and assigns it to the AfReqServArea field.
func (o *DnnSnssaiSpecificGroup) SetAfReqServArea(v []Tai) {
	o.AfReqServArea = v
}

func (o DnnSnssaiSpecificGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DnnSnssaiSpecificGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dnn"] = o.Dnn
	toSerialize["snssai"] = o.Snssai
	if !IsNil(o.DefQos) {
		toSerialize["defQos"] = o.DefQos
	}
	if !IsNil(o.AfReqServArea) {
		toSerialize["afReqServArea"] = o.AfReqServArea
	}
	return toSerialize, nil
}

func (o *DnnSnssaiSpecificGroup) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dnn",
		"snssai",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDnnSnssaiSpecificGroup := _DnnSnssaiSpecificGroup{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDnnSnssaiSpecificGroup)

	if err != nil {
		return err
	}

	*o = DnnSnssaiSpecificGroup(varDnnSnssaiSpecificGroup)

	return err
}

type NullableDnnSnssaiSpecificGroup struct {
	value *DnnSnssaiSpecificGroup
	isSet bool
}

func (v NullableDnnSnssaiSpecificGroup) Get() *DnnSnssaiSpecificGroup {
	return v.value
}

func (v *NullableDnnSnssaiSpecificGroup) Set(val *DnnSnssaiSpecificGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableDnnSnssaiSpecificGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableDnnSnssaiSpecificGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDnnSnssaiSpecificGroup(val *DnnSnssaiSpecificGroup) *NullableDnnSnssaiSpecificGroup {
	return &NullableDnnSnssaiSpecificGroup{value: val, isSet: true}
}

func (v NullableDnnSnssaiSpecificGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDnnSnssaiSpecificGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


