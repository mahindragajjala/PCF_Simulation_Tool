/*
Nudm_EE

Nudm Event Exposure Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.5
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the VarRepPeriod type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VarRepPeriod{}

// VarRepPeriod Indicates the Variable reporting periodicity for event reporting 
type VarRepPeriod struct {
	// indicating a time in seconds.
	RepPeriod int32 `json:"repPeriod"`
	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
	PercValueNfLoad *int32 `json:"percValueNfLoad,omitempty"`
}

type _VarRepPeriod VarRepPeriod

// NewVarRepPeriod instantiates a new VarRepPeriod object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVarRepPeriod(repPeriod int32) *VarRepPeriod {
	this := VarRepPeriod{}
	this.RepPeriod = repPeriod
	return &this
}

// NewVarRepPeriodWithDefaults instantiates a new VarRepPeriod object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVarRepPeriodWithDefaults() *VarRepPeriod {
	this := VarRepPeriod{}
	return &this
}

// GetRepPeriod returns the RepPeriod field value
func (o *VarRepPeriod) GetRepPeriod() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RepPeriod
}

// GetRepPeriodOk returns a tuple with the RepPeriod field value
// and a boolean to check if the value has been set.
func (o *VarRepPeriod) GetRepPeriodOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RepPeriod, true
}

// SetRepPeriod sets field value
func (o *VarRepPeriod) SetRepPeriod(v int32) {
	o.RepPeriod = v
}

// GetPercValueNfLoad returns the PercValueNfLoad field value if set, zero value otherwise.
func (o *VarRepPeriod) GetPercValueNfLoad() int32 {
	if o == nil || IsNil(o.PercValueNfLoad) {
		var ret int32
		return ret
	}
	return *o.PercValueNfLoad
}

// GetPercValueNfLoadOk returns a tuple with the PercValueNfLoad field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VarRepPeriod) GetPercValueNfLoadOk() (*int32, bool) {
	if o == nil || IsNil(o.PercValueNfLoad) {
		return nil, false
	}
	return o.PercValueNfLoad, true
}

// HasPercValueNfLoad returns a boolean if a field has been set.
func (o *VarRepPeriod) HasPercValueNfLoad() bool {
	if o != nil && !IsNil(o.PercValueNfLoad) {
		return true
	}

	return false
}

// SetPercValueNfLoad gets a reference to the given int32 and assigns it to the PercValueNfLoad field.
func (o *VarRepPeriod) SetPercValueNfLoad(v int32) {
	o.PercValueNfLoad = &v
}

func (o VarRepPeriod) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VarRepPeriod) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["repPeriod"] = o.RepPeriod
	if !IsNil(o.PercValueNfLoad) {
		toSerialize["percValueNfLoad"] = o.PercValueNfLoad
	}
	return toSerialize, nil
}

func (o *VarRepPeriod) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"repPeriod",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVarRepPeriod := _VarRepPeriod{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVarRepPeriod)

	if err != nil {
		return err
	}

	*o = VarRepPeriod(varVarRepPeriod)

	return err
}

type NullableVarRepPeriod struct {
	value *VarRepPeriod
	isSet bool
}

func (v NullableVarRepPeriod) Get() *VarRepPeriod {
	return v.value
}

func (v *NullableVarRepPeriod) Set(val *VarRepPeriod) {
	v.value = val
	v.isSet = true
}

func (v NullableVarRepPeriod) IsSet() bool {
	return v.isSet
}

func (v *NullableVarRepPeriod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVarRepPeriod(val *VarRepPeriod) *NullableVarRepPeriod {
	return &NullableVarRepPeriod{value: val, isSet: true}
}

func (v NullableVarRepPeriod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVarRepPeriod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


