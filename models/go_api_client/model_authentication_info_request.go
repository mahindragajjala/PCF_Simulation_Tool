/*
NudmUEAU

UDM UE Authentication Service. ï¿½ 2020, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AuthenticationInfoRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthenticationInfoRequest{}

// AuthenticationInfoRequest struct for AuthenticationInfoRequest
type AuthenticationInfoRequest struct {
	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported. 
	SupportedFeatures *string `json:"supportedFeatures,omitempty" validate:"regexp=^[A-Fa-f0-9]*$"`
	ServingNetworkName string `json:"servingNetworkName" validate:"regexp=^5G:mnc[0-9]{3}[.]mcc[0-9]{3}[.]3gppnetwork[.]org(:[A-F0-9]{11})?$"`
	ResynchronizationInfo *ResynchronizationInfo `json:"resynchronizationInfo,omitempty"`
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.  
	AusfInstanceId string `json:"ausfInstanceId"`
	// String containing a Closed Access Group Identifier.
	CagId *string `json:"cagId,omitempty" validate:"regexp=^[A-Fa-f0-9]{8}$"`
	N5gcInd *bool `json:"n5gcInd,omitempty"`
}

type _AuthenticationInfoRequest AuthenticationInfoRequest

// NewAuthenticationInfoRequest instantiates a new AuthenticationInfoRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthenticationInfoRequest(servingNetworkName string, ausfInstanceId string) *AuthenticationInfoRequest {
	this := AuthenticationInfoRequest{}
	this.ServingNetworkName = servingNetworkName
	this.AusfInstanceId = ausfInstanceId
	var n5gcInd bool = false
	this.N5gcInd = &n5gcInd
	return &this
}

// NewAuthenticationInfoRequestWithDefaults instantiates a new AuthenticationInfoRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthenticationInfoRequestWithDefaults() *AuthenticationInfoRequest {
	this := AuthenticationInfoRequest{}
	var n5gcInd bool = false
	this.N5gcInd = &n5gcInd
	return &this
}

// GetSupportedFeatures returns the SupportedFeatures field value if set, zero value otherwise.
func (o *AuthenticationInfoRequest) GetSupportedFeatures() string {
	if o == nil || IsNil(o.SupportedFeatures) {
		var ret string
		return ret
	}
	return *o.SupportedFeatures
}

// GetSupportedFeaturesOk returns a tuple with the SupportedFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationInfoRequest) GetSupportedFeaturesOk() (*string, bool) {
	if o == nil || IsNil(o.SupportedFeatures) {
		return nil, false
	}
	return o.SupportedFeatures, true
}

// HasSupportedFeatures returns a boolean if a field has been set.
func (o *AuthenticationInfoRequest) HasSupportedFeatures() bool {
	if o != nil && !IsNil(o.SupportedFeatures) {
		return true
	}

	return false
}

// SetSupportedFeatures gets a reference to the given string and assigns it to the SupportedFeatures field.
func (o *AuthenticationInfoRequest) SetSupportedFeatures(v string) {
	o.SupportedFeatures = &v
}

// GetServingNetworkName returns the ServingNetworkName field value
func (o *AuthenticationInfoRequest) GetServingNetworkName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServingNetworkName
}

// GetServingNetworkNameOk returns a tuple with the ServingNetworkName field value
// and a boolean to check if the value has been set.
func (o *AuthenticationInfoRequest) GetServingNetworkNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServingNetworkName, true
}

// SetServingNetworkName sets field value
func (o *AuthenticationInfoRequest) SetServingNetworkName(v string) {
	o.ServingNetworkName = v
}

// GetResynchronizationInfo returns the ResynchronizationInfo field value if set, zero value otherwise.
func (o *AuthenticationInfoRequest) GetResynchronizationInfo() ResynchronizationInfo {
	if o == nil || IsNil(o.ResynchronizationInfo) {
		var ret ResynchronizationInfo
		return ret
	}
	return *o.ResynchronizationInfo
}

// GetResynchronizationInfoOk returns a tuple with the ResynchronizationInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationInfoRequest) GetResynchronizationInfoOk() (*ResynchronizationInfo, bool) {
	if o == nil || IsNil(o.ResynchronizationInfo) {
		return nil, false
	}
	return o.ResynchronizationInfo, true
}

// HasResynchronizationInfo returns a boolean if a field has been set.
func (o *AuthenticationInfoRequest) HasResynchronizationInfo() bool {
	if o != nil && !IsNil(o.ResynchronizationInfo) {
		return true
	}

	return false
}

// SetResynchronizationInfo gets a reference to the given ResynchronizationInfo and assigns it to the ResynchronizationInfo field.
func (o *AuthenticationInfoRequest) SetResynchronizationInfo(v ResynchronizationInfo) {
	o.ResynchronizationInfo = &v
}

// GetAusfInstanceId returns the AusfInstanceId field value
func (o *AuthenticationInfoRequest) GetAusfInstanceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AusfInstanceId
}

// GetAusfInstanceIdOk returns a tuple with the AusfInstanceId field value
// and a boolean to check if the value has been set.
func (o *AuthenticationInfoRequest) GetAusfInstanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AusfInstanceId, true
}

// SetAusfInstanceId sets field value
func (o *AuthenticationInfoRequest) SetAusfInstanceId(v string) {
	o.AusfInstanceId = v
}

// GetCagId returns the CagId field value if set, zero value otherwise.
func (o *AuthenticationInfoRequest) GetCagId() string {
	if o == nil || IsNil(o.CagId) {
		var ret string
		return ret
	}
	return *o.CagId
}

// GetCagIdOk returns a tuple with the CagId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationInfoRequest) GetCagIdOk() (*string, bool) {
	if o == nil || IsNil(o.CagId) {
		return nil, false
	}
	return o.CagId, true
}

// HasCagId returns a boolean if a field has been set.
func (o *AuthenticationInfoRequest) HasCagId() bool {
	if o != nil && !IsNil(o.CagId) {
		return true
	}

	return false
}

// SetCagId gets a reference to the given string and assigns it to the CagId field.
func (o *AuthenticationInfoRequest) SetCagId(v string) {
	o.CagId = &v
}

// GetN5gcInd returns the N5gcInd field value if set, zero value otherwise.
func (o *AuthenticationInfoRequest) GetN5gcInd() bool {
	if o == nil || IsNil(o.N5gcInd) {
		var ret bool
		return ret
	}
	return *o.N5gcInd
}

// GetN5gcIndOk returns a tuple with the N5gcInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationInfoRequest) GetN5gcIndOk() (*bool, bool) {
	if o == nil || IsNil(o.N5gcInd) {
		return nil, false
	}
	return o.N5gcInd, true
}

// HasN5gcInd returns a boolean if a field has been set.
func (o *AuthenticationInfoRequest) HasN5gcInd() bool {
	if o != nil && !IsNil(o.N5gcInd) {
		return true
	}

	return false
}

// SetN5gcInd gets a reference to the given bool and assigns it to the N5gcInd field.
func (o *AuthenticationInfoRequest) SetN5gcInd(v bool) {
	o.N5gcInd = &v
}

func (o AuthenticationInfoRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthenticationInfoRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SupportedFeatures) {
		toSerialize["supportedFeatures"] = o.SupportedFeatures
	}
	toSerialize["servingNetworkName"] = o.ServingNetworkName
	if !IsNil(o.ResynchronizationInfo) {
		toSerialize["resynchronizationInfo"] = o.ResynchronizationInfo
	}
	toSerialize["ausfInstanceId"] = o.AusfInstanceId
	if !IsNil(o.CagId) {
		toSerialize["cagId"] = o.CagId
	}
	if !IsNil(o.N5gcInd) {
		toSerialize["n5gcInd"] = o.N5gcInd
	}
	return toSerialize, nil
}

func (o *AuthenticationInfoRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"servingNetworkName",
		"ausfInstanceId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAuthenticationInfoRequest := _AuthenticationInfoRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAuthenticationInfoRequest)

	if err != nil {
		return err
	}

	*o = AuthenticationInfoRequest(varAuthenticationInfoRequest)

	return err
}

type NullableAuthenticationInfoRequest struct {
	value *AuthenticationInfoRequest
	isSet bool
}

func (v NullableAuthenticationInfoRequest) Get() *AuthenticationInfoRequest {
	return v.value
}

func (v *NullableAuthenticationInfoRequest) Set(val *AuthenticationInfoRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthenticationInfoRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthenticationInfoRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthenticationInfoRequest(val *AuthenticationInfoRequest) *NullableAuthenticationInfoRequest {
	return &NullableAuthenticationInfoRequest{value: val, isSet: true}
}

func (v NullableAuthenticationInfoRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthenticationInfoRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


